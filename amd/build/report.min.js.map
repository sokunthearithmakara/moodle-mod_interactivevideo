{"version":3,"file":"report.min.js","sources":["../src/report.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle report page\n *\n * @module     mod_interactivevideo/report\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Notification from 'core/notification';\nimport {add as addToast} from 'core/toast';\nimport JSZip from './libraries/jszip';\nimport './libraries/jquery.dataTables';\nimport './libraries/dataTables.bootstrap4';\nimport './libraries/dataTables.buttons';\nimport './libraries/buttons.bootstrap4';\nimport './libraries/buttons.html5';\nimport './libraries/buttons.colVis';\nimport './libraries/dataTables.select';\nimport './libraries/select.bootstrap4';\nimport './libraries/select2';\nimport quickform from './quickform';\n\n/**\n * Initializes the report functionality for the interactive video module.\n *\n * @param {number} cmid - The course module ID.\n * @param {number} groupid - The group ID.\n * @param {number} grademax - The maximum grade.\n * @param {Array} itemids - The annotation IDs.\n * @param {number} completionpercentage - The completion percentage.\n * @param {string} videourl - The video URL.\n * @param {string} videotype - The video type.\n * @param {Object} cm - The course module object.\n * @param {number} courseid - The course ID.\n * @param {number} start - The start time.\n * @param {number} end - The end time.\n * @param {Object} access - The access object.\n */\nconst init = (cmid, groupid, grademax, itemids, completionpercentage, videourl, videotype, cm, courseid, start, end, access) => {\n    window.JSZip = JSZip;\n    let DataTable = $.fn.dataTable;\n    let player;\n    const isBS5 = $('body').hasClass('bs-5');\n    // Const bsAffix = isBS5 ? '-bs' : '';\n\n    quickform();\n\n    require(['theme_boost/bootstrap/modal']);\n    require(['theme_boost/bootstrap/tooltip']);\n\n    const getContentTypes = $.ajax({\n        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n        method: \"POST\",\n        dataType: \"text\",\n        data: {\n            action: 'get_all_contenttypes',\n            sesskey: M.cfg.sesskey,\n            contextid: M.cfg.contextid,\n        }\n    });\n\n    const getReportData = $.ajax({\n        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n        method: 'POST',\n        data: {\n            action: 'get_report_data_by_group',\n            cmid: cmid,\n            sesskey: M.cfg.sesskey,\n            contextid: M.cfg.contextid,\n            ctxid: M.cfg.courseContextId,\n            courseid: courseid,\n            groupid: groupid,\n        }\n    });\n\n    let itemsdata = $('#itemsdata').text();\n    itemsdata = JSON.parse(itemsdata);\n    // Init the contenttypes that has initonreport.\n    let initonreport = itemsdata.filter(x => JSON.parse(x.prop).initonreport);\n    initonreport = [...new Set(initonreport.map(x => x.type))];\n\n    let contentTypes;\n    let tabledata;\n\n    $.when(getContentTypes, getReportData).done(async(ct, data) => {\n        contentTypes = JSON.parse(ct[0]);\n        data = data[0];\n        const renderFilterBox = (element) => {\n            let input = '';\n            switch (element.type) {\n                case 'text':\n                case 'textarea':\n                case 'url':\n                case 'email':\n                    input = `<input type=\"text\" class=\"form-control form-control-sm\" id=\"filter-${element.index}\"\n                         data-index=\"${element.index}\"/>`;\n                    break;\n                case 'menu':\n                    var options = data.map(x => x[element.name]);\n                    options = [...new Set(options)];\n                    // Don't include empty options.\n                    options = options.filter(x => x !== '');\n                    if (options.length > 1) {\n                        options.sort();\n                        input = `<select class=\"${isBS5 ? 'form' : 'custom'}-select ${isBS5 ? 'form' : 'custom'}-select-sm w-100\"\n                         multiple id=\"filter-${element.index}\"\n                         data-index=\"${element.index}\">\n                            ${options.map(x => `<option value=\"${x}\">${x}</option>`).join('')}\n                        </select>`;\n                    } else {\n                        input = `<input type=\"text\" class=\"form-control form-control-sm\" id=\"filter-${element.index}\"\n                         data-index=\"${element.index}\"/>`;\n                    }\n                    break;\n                case 'checkbox':\n                    var optionsc = data.map(x => x[element.name]);\n                    optionsc = [...new Set(optionsc)];\n                    // Don't include empty options.\n                    optionsc = optionsc.filter(x => x !== '');\n                    if (optionsc.length > 1) {\n                        optionsc.sort();\n                        input = `<select class=\"${isBS5 ? 'form' : 'custom'} ${isBS5 ? 'form' : 'custom'}-sm w-100\"\n                         multiple id=\"filter-${element.index}\"\n                         data-index=\"${element.index}\">\n                            ${optionsc.map(x => `<option value=\"${x}\">${x}</option>`).join('')}\n                        </select>`;\n                    } else {\n                        input = `<input type=\"text\" class=\"form-control form-control-sm\" id=\"filter-${element.index}\"\n                         data-index=\"${element.index}\"/>`;\n                    }\n                    break;\n                case 'datetime':\n                    // Date range.\n                    input = `<div class=\"input-group input-group-sm\">\n                            <input type=\"date\" class=\"form-control custom-field\" data-index=\"${element.index}\"\n                             id=\"filter-${element.index}-start\"/>\n                            <input type=\"date\" class=\"form-control custom-field\" data-index=\"${element.index}\"\n                             id=\"filter-${element.index}-end\"/>\n                        </div>`;\n                    break;\n                default:\n                    input = `<input type=\"text\" class=\"form-control form-control-sm\" id=\"filter-${element.index}\"\n                         data-index=\"${element.index}\"/>`;\n                    break;\n            }\n            return `<div class=\"col-sm-6 col-md-4 col-lg-3 col-xl-${element.type == 'datetime' ? '4' : '2'} iv-pl-0 iv-pr-2 mb-2\">\n                                    <div class=\"iv-form-group mb-1\">\n                                    <label for=\"filter-${element.index}\">${element.text}</label>\n                                        ${input}\n                                    </div>\n                                </div>`;\n        };\n        const hasCompletion = data.some(x => x.timecreated > 0);\n        let profileFields = [];\n        let customProfileFields = data.map(x => x.customfields);\n        // Combine all custom profile fields and remove duplicates.\n        customProfileFields = customProfileFields.reduce((acc, val) => {\n            return acc.concat(val);\n        }, []);\n        customProfileFields = [...new Set(customProfileFields)];\n        // Remove the undefined values.\n        customProfileFields = customProfileFields.filter(x => x !== undefined);\n        $(\"#completiontable th.profilefield\").each(function() {\n            const pr = {\n                index: $(\"th\").index($(this)),\n                text: $(this).text(),\n                name: $(this).attr('id'),\n                type: 'text'\n            };\n            if (customProfileFields && customProfileFields.length > 0) {\n                const customField = customProfileFields.find(x => x.shortname === pr.name.replace('profile_field_', ''));\n                if (customField) {\n                    pr.type = customField.type;\n                }\n            }\n            profileFields.push(pr);\n        });\n\n        let exportOptions = {\n            columns: ['.exportable'],\n            format: {\n                body: function(data) {\n                    // Strip HTML tags to get text only\n                    const div = document.createElement(\"div\");\n                    div.innerHTML = data;\n                    return (div.textContent || div.innerText || \"\").trim();\n                },\n                header: function(data) {\n                    const div = document.createElement(\"div\");\n                    div.innerHTML = data;\n                    // Remove .controls from the header.\n                    if (div.querySelector('.controls')) {\n                        div.querySelector('.controls').remove();\n                    }\n                    return (div.textContent || div.innerText || \"\").trim();\n                }\n            }\n        };\n\n        let columns = [\n            {\n                data: \"id\",\n                visible: false,\n                className: \"exportable inv d-none\",\n            },\n            {\n                data: \"picture\",\n                render: function(data, type, row) {\n                    if (type === 'sort') {\n                        return row.fullname;\n                    }\n                    let deletebutton = '';\n                    if (access.canedit == 1) {\n                        deletebutton = `<button title=\"${M.util.get_string('reset', 'mod_interactivevideo')}\"\n                 class=\"btn border-0 btn-sm text-danger reset m-1\" data-record=\"${row.completionid}\"\n                  data-userid=\"${row.id}\">\n                 <i class=\"bi bi-trash3\"></i></button>`;\n                    }\n                    // Put _target=blank to open the user profile in a new tab (use regex)\n                    data = data.replace(/<a /g, '<a target=\"_blank\" ');\n                    return `<div class=\"d-flex align-items-center\">\n                    ${access.canedit == 1 ? `<input class=\"iv-mr-3 bulk\" type=\"checkbox\"\n                         data-record=\"${row.completionid}\" ${row.timecreated > 0 ? '' : 'disabled'}\n                         data-userid=\"${row.id}\"/>` : ''}\n                    <div class=\"text-truncate d-flex align-items-center justify-content-between flex-grow-1\">${data}\n                ${row.timecreated > 0 ? deletebutton : ''}</div></div>`;\n                },\n                className: \"bg-white sticky-left-0\",\n            },\n        ];\n\n        let $identitycolumn = $('#reporttable th.profilefield');\n        if ($identitycolumn.length > 0) {\n            $identitycolumn.each(function() {\n                let $this = $(this);\n                columns.push({\n                    data: $(this).attr('id'),\n                    render: function(data, type, row) {\n                        if (!row.customfields) {\n                            return data;\n                        }\n                        let fieldtype = row.customfields.find(x => x.shortname === $this.attr('id')\n                            .replace('profile_field_', ''));\n                        if (!fieldtype) {\n                            return data;\n                        }\n                        if (fieldtype.type === 'datetime' && (type == 'sort' || type == 'filter')) {\n                            return fieldtype.value;\n                        }\n                        return data;\n                    },\n                });\n            });\n        }\n\n        columns = columns.concat([\n            {\n                data: \"timecreated\",\n                \"render\": function(data, type) {\n                    if (!data || data == 0) {\n                        if (type === 'display') {\n                            return '';\n                        } else {\n                            return 0;\n                        }\n                    } else {\n                        const date = new Date(data * 1000);\n                        if (type === 'display') {\n                            return date.toLocaleString();\n                        } else if (type === 'filter' || type === 'sort') {\n                            return date.getTime();\n                        }\n                        return data;\n                    }\n                },\n                className: \"exportable timecreated\"\n            },\n            {\n                data: \"timecompleted\",\n                render: function(data, type, row) {\n                    if (!data || data == 0) {\n                        if (!row.timecreated) {\n                            if (type === 'display') {\n                                return '';\n                            } else {\n                                return 0;\n                            }\n                        } else {\n                            if (type === 'display') {\n                                return M.util.get_string('inprogress', 'mod_interactivevideo');\n                            } else {\n                                return 0;\n                            }\n                        }\n                    } else {\n                        const date = new Date(data * 1000);\n                        if (type === 'display') {\n                            return date.toLocaleString();\n                        } else if (type === 'filter' || type === 'sort') {\n                            return date.getTime();\n                        }\n                        return data;\n                    }\n                },\n                className: \"exportable\" + (itemids.length == 0 ? \" inv d-none\" : \"\")\n            },\n            {\n                data: \"completionpercentage\",\n                render: function(data, type) {\n                    if (data) {\n                        return data + \"%\";\n                    } else {\n                        if (type === 'display') {\n                            return \"\";\n                        }\n                        return 0;\n                    }\n                },\n                className: \"exportable\" + (itemids.length == 0 ? \" inv d-none\" : \"\")\n            },\n            {\n                data: \"xp\",\n                render: function(data) {\n                    if (data) {\n                        return data;\n                    } else {\n                        return \"\";\n                    }\n                },\n                className: \"exportable\" + (itemids.length == 0 ? \" inv d-none\" : \"\")\n            }\n        ]);\n\n        let datatableOptions = {\n            \"data\": data,\n            \"deferRender\": true,\n            \"rowId\": \"id\",\n            \"pageLength\": 25,\n            // Sort by timecreated in descending order by default and then by fullname in ascending order.\n            \"order\": [[columns.findIndex(c => c.data == 'timecreated'), 'desc'], [1, 'asc']],\n            \"columns\": columns,\n            \"columnDefs\": [\n                {\n                    \"targets\": 'not-sortable',\n                    \"sortable\": false,\n                },\n                {\n                    \"targets\": 'inv',\n                    \"visible\": false,\n                },\n                {\n                    \"targets\": 'colvis',\n                    \"visible\": false,\n                }\n            ],\n            \"pagingType\": \"full\",\n            \"language\": {\n                \"lengthMenu\": \"_MENU_\",\n                \"zeroRecords\": M.util.get_string('nofound', \"mod_interactivevideo\"),\n                \"search\": `<span class=\"d-none d-md-inline\">${M.util.get_string('search', \"mod_interactivevideo\")}</span>`,\n                \"info\": M.util.get_string('datatableinfo', \"mod_interactivevideo\"),\n                \"infoEmpty\": M.util.get_string('datatableinfoempty', \"mod_interactivevideo\"),\n                \"infoFiltered\": M.util.get_string('datatableinfofiltered', \"mod_interactivevideo\"),\n                \"paginate\": {\n                    \"first\": '<i class=\"bi bi-chevron-double-left fs-unset\"></i>',\n                    \"last\": '<i class=\"bi bi-chevron-double-right fs-unset\"></i>',\n                    \"next\": '<i class=\"bi bi-chevron-right fs-unset\"></i>',\n                    \"previous\": '<i class=\"bi bi-chevron-left fs-unset\"></i>'\n                },\n                \"select\": {\n                    rows: {\n                        _: M.util.get_string('rowsselected', 'mod_interactivevideo'),\n                    }\n                }\n            },\n            select: {\n                style: 'multi',\n                selector: 'input[type=\"checkbox\"].bulk',\n            },\n            stateSaveParams: function(settings, data) {\n                // We only want to save the state of the colvis and length menu\n                data.search.search = \"\";\n                data.start = 0;\n                data.columns.forEach(function(column) {\n                    column.search.search = \"\";\n                });\n                // Reset the inv columns.\n                data.columns.forEach(function(column) {\n                    if (column.visible === false) {\n                        column.visible = true;\n                    }\n                });\n                return data;\n            },\n            stateSave: true,\n            \"dom\": `<'d-flex w-100 justify-content-between`\n                + `'<'d-flex align-items-center'Bl>'<''f>>`\n                + `<'#filterregion.w-100 row mx-0 my-2 p-3 bg-light iv-rounded border'>t<'row mt-2'<'col-sm-6'i><'col-sm-6'p>>`,\n            \"buttons\": [\n                {\n                    extend: \"copyHtml5\",\n                    text: '<i class=\"bi bi-copy fa-fw fs-unset\"></i>',\n                    className: \"btn btn-sm border-0\",\n                    messageTop: null,\n                    title: null,\n                    exportOptions: exportOptions\n                },\n                {\n                    extend: \"csvHtml5\",\n                    text: '<i class=\"bi bi-filetype-csv fa-fw fs-unset\"></i>',\n                    className: \"btn btn-sm border-0\",\n                    exportOptions: exportOptions\n                },\n                {\n                    extend: \"excelHtml5\",\n                    text: '<i class=\"bi bi-file-earmark-excel fa-fw fs-unset\"></i>',\n                    className: \"btn btn-sm border-0\",\n                    exportOptions: exportOptions\n                },\n                {\n                    extend: \"colvis\",\n                    text: '<i class=\"bi bi-layout-three-columns fa-fw fs-unset\"></i>',\n                    titleAttr: \"\",\n                    className: \"btn btn-sm border-0\",\n                    columns: '.colvis'\n                },\n            ],\n            // New footerCallback to update footer with summary info\n            footerCallback: function() {\n                var api = this.api();\n                var rowCount = api.rows({filter: 'applied'}).count();\n                // Helper: find index of a column by its data property in our original columns array\n                /**\n                 * Find the index of the column in the original columns array.\n                 * @param {string} prop - The data property of the column.\n                 * @returns {number} - The index of the column in the original columns array.\n                 */\n                function findColIndex(prop) {\n                    return columns.findIndex(function(col) {\n                        return col.data === prop;\n                    });\n                }\n                var timecreatedIdx = findColIndex('timecreated');\n                var timecompletedIdx = findColIndex('timecompleted');\n                var completionpercentageIdx = findColIndex('completionpercentage');\n                var xpIdx = findColIndex('xp');\n\n                // Calculate percentage for timecreated > 0\n                var timecreatedData = api.column(timecreatedIdx, {filter: 'applied'}).data();\n                var countTimecreated = timecreatedData.reduce(function(acc, val) {\n                    return acc + ((val && val > 0) ? 1 : 0);\n                }, 0);\n                var timecreatedPerc = ((countTimecreated / rowCount) * 100).toFixed(1) + '%';\n                if (rowCount === 0) {\n                    timecreatedPerc = '0%';\n                }\n\n                // Calculate percentage for timecompleted > 0\n                var timecompletedData = api.column(timecompletedIdx, {filter: 'applied'}).data();\n                var countTimecompleted = timecompletedData.reduce(function(acc, val) {\n                    return acc + ((val && val > 0) ? 1 : 0);\n                }, 0);\n                var timecompletedPerc = ((countTimecompleted / rowCount) * 100).toFixed(1) + '%';\n                if (rowCount === 0) {\n                    timecompletedPerc = '0%';\n                }\n\n                // Average xp\n                var xpData = api.column(xpIdx, {filter: 'applied'}).data().toArray();\n                xpData = xpData.map(x => parseFloat(x) || 0);\n                var minXP = Math.min(...xpData);\n                var maxXP = Math.max(...xpData);\n                var sumXp = xpData.reduce(function(acc, val) {\n                    return acc + val;\n                }, 0);\n                var avgXp = (sumXp / rowCount).toFixed(1);\n                if (rowCount === 0) {\n                    avgXp = '0';\n                    minXP = '0';\n                    maxXP = '0';\n                }\n\n                // Average completion percentage\n                var cpData = api.column(completionpercentageIdx, {filter: 'applied'}).data().toArray();\n                cpData = cpData.map(x => parseFloat(x) || 0);\n                var minCp = Math.min(...cpData);\n                var maxCp = Math.max(...cpData);\n                var sumCp = cpData.reduce(function(acc, val) {\n                    return acc + val;\n                }, 0);\n                var avgCp = (sumCp / rowCount).toFixed(1) + '%';\n                if (rowCount === 0) {\n                    avgCp = '0%';\n                    minCp = '0';\n                    maxCp = '0';\n                }\n\n                // Update footer for these specific columns\n                if (api.column(timecreatedIdx).footer()) {\n                    api.column(timecreatedIdx).footer().innerHTML = '<small>' + M.util.get_string('started', 'mod_interactivevideo')\n                        + '</small>' + '<br>' + timecreatedPerc + ' (' + countTimecreated + '/' + rowCount + ')';\n                }\n                if (api.column(timecompletedIdx).footer()) {\n                    api.column(timecompletedIdx).footer().innerHTML = '<small>'\n                        + M.util.get_string('completed', 'mod_interactivevideo')\n                        + '</small>' + '<br>' + timecompletedPerc + ' (' + countTimecompleted + '/' + rowCount + ')';\n                }\n                if (api.column(xpIdx).footer()) {\n                    api.column(xpIdx).footer().innerHTML = '<small>' + M.util.get_string('avg', 'mod_interactivevideo')\n                        + ' (' + M.util.get_string('min', 'mod_interactivevideo') + '/' +\n                        M.util.get_string('max', 'mod_interactivevideo')\n                        + ')</small>' + '<br>' + avgXp + ' (' + minXP + '/' + maxXP + ')';\n                }\n                if (api.column(completionpercentageIdx).footer()) {\n                    api.column(completionpercentageIdx).footer().innerHTML\n                        = '<small>' + M.util.get_string('avg', 'mod_interactivevideo')\n                        + ' (' + M.util.get_string('min', 'mod_interactivevideo') + '/' +\n                        M.util.get_string('max', 'mod_interactivevideo')\n                        + ')</small>' + '<br>' + avgCp + ' (' + minCp + '/' + maxCp + ')';\n                }\n\n                // For dynamic interaction item columns: check header attribute 'data-item'.\n                columns.forEach(function(column) {\n                    if (column.itemid) {\n                        var itemid = column.itemid;\n                        var itemIdx = columns.findIndex(col => col.itemid === itemid);\n                        var itemData = api.column(itemIdx, {filter: 'applied'}).data();\n                        var countItem = itemData.reduce(function(acc, val) {\n                            let completiondetails;\n                            try {\n                                completiondetails = JSON.parse(val.completiondetails).map(x => JSON.parse(x));\n                            } catch (e) {\n                                return acc;\n                            }\n                            let details = completiondetails.find(x => Number(x.id) == Number(itemid));\n                            if (details) {\n                                if (details.deleted) {\n                                    return acc;\n                                }\n                                return acc + 1;\n                            }\n                            return acc;\n                        }, 0);\n                        var itemPerc = ((countItem / rowCount) * 100).toFixed(1) + '%';\n                        if (rowCount === 0) {\n                            itemPerc = '0%';\n                        }\n                        if (api.column(itemIdx).footer()) {\n                            api.column(itemIdx).footer().innerHTML = itemPerc;\n                        }\n                    }\n                });\n            },\n            // Modified initComplete to add a tfoot if missing\n            \"initComplete\": function() {\n                if (hasCompletion) {\n                    $(\"#completiontable th .controls\").removeClass(\"d-none\");\n                }\n                if (itemids.length == 0) {\n                    $(\"#completiontable th .controls\").addClass(\"d-none\");\n                }\n                $(\"table#completiontable\")\n                    .wrap(\"<div style='overflow:auto;position:relative' class='completiontablewrapper my-2'></div>\");\n                $(\"#reporttable .dataTables_length \").addClass(\"d-inline iv-ml-1\");\n                $(\"#reporttable .dataTables_filter\").addClass(\"d-inline iv-float-right\");\n                $(\"#reporttable .table-responsive\").addClass(\"p-1\");\n                $(\"#reporttable .spinner-grow\").remove();\n                $(\"table#completiontable\").removeClass(\"d-none\");\n                $(\"#background-loading\").fadeOut(300);\n\n                $(`<a class=\"btn btn-sm btn-secondary iv-font-weight-bold iv-ml-1 d-inline-block\"\n                    href=\"javascript:void(0)\" id=\"filters\"\n                    title=\"Filter\"><i class=\"bi bi-funnel left fa-fw fs-unset\"></i></a>`).insertAfter(\".dataTables_filter label\");\n                $(document).off('click', '#filters').on('click', '#filters', function() {\n                    $('#filterregion').slideToggle('fast', 'swing');\n                    $(this).find('i').toggleClass('bi-funnel bi-funnel-fill');\n                });\n                $('#filterregion').css('display', 'none');\n\n                profileFields.forEach((element) => {\n                    $(renderFilterBox(element)).appendTo(\"#filterregion\");\n                });\n\n                // Init select2\n                $(`#filterregion .${isBS5 ? 'form' : 'custom'}-select[multiple]`).select2({\n                    dropdownParent: $('body'), // Little hack to prevent page overflow when select2 is open\n                    width: '100%',\n                    placeholder: M.util.get_string('select', 'mod_interactivevideo'),\n                    allowClear: true,\n                });\n                $(`.${isBS5 ? 'form' : 'custom'}-select`)\n                    .on('select2:open', function(e) { // Little hack to prevent page overflow when select2 is open\n                        const evt = \"scroll.select2\";\n                        $(e.target).parents().off(evt);\n                        $(window).off(evt);\n                    });\n\n                // Date range for timecreated.\n                $(\"#filterregion\").append(`<div class=\"col-sm-6 col-md-4 col-lg-3 col-xl-4 iv-pl-0 iv-pr-2 mb-2\">\n                    <div class=\"iv-form-group mb-1\" id=\"timecreatedrange\">\n                    <label for=\"timecreatedrange\">${M.util.get_string('timecreatedrange', 'mod_interactivevideo')}</label>\n                    <div class=\"input-group input-group-sm\">\n                        <input type=\"date\" class=\"form-control\" id=\"timecreatedstart\"/>\n                        <input type=\"date\" class=\"form-control\" id=\"timecreatedend\"/>\n                    </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-6 col-md-4 col-lg-3 col-xl-4 iv-pl-0 iv-pr-2 mb-2\">\n                    <div class=\"iv-form-group mb-1\" id=\"timecompletedrange\">\n                    <label for=\"timecompletedrange\">${M.util.get_string('timecompletedrange', 'mod_interactivevideo')}</label>\n                    <div class=\"input-group input-group-sm\">\n                        <input type=\"date\" class=\"form-control\" id=\"timecompletedstart\"/>\n                        <input type=\"date\" class=\"form-control\" id=\"timecompletedend\"/>\n                    </div>\n                    </div>\n                </div>\n                `);\n\n                $(\"#filterregion\").append(`<div class=\"col-12 p-0 mx-0\">\n                    <span class=\"text-muted small\">${M.util.get_string('separatesearchtermsbyslash', 'mod_interactivevideo')}</span>\n                    </div>`);\n                $(`table [data${isBS5 ? '-bs' : ''}-toggle=\"tooltip\"]`).tooltip();\n                if (isBS5) {\n                    $('.custom-select').toggleClass('custom-select form-select');\n                }\n            }\n            // ...existing datatableOptions properties if any\n        };\n\n        $(\"#reporttable th.rotate\").each(function() {\n            const itemid = $(this).data(\"item\").toString();\n            const ctype = $(this).data(\"type\");\n            datatableOptions.columns.push({\n                data: null,\n                itemid: itemid,\n                sortable: false,\n                className: \"text-center exportable data-cell\",\n                render: function(data, rtype, row) {\n                    let completiondetails;\n                    try {\n                        completiondetails = JSON.parse(data.completiondetails).map(x => JSON.parse(x));\n                    } catch (e) {\n                        completiondetails = [];\n                    }\n                    let details = completiondetails.find(x => Number(x.id) == Number(itemid));\n                    if (details) {\n                        if (details.deleted) {\n                            if (rtype === 'display') {\n                                return `<i class=\"bi bi-trash3 text-muted\"\n                             title=\"${M.util.get_string('deletedbyinstructor', 'mod_interactivevideo')}\"></i>`;\n                            } else {\n                                return '-';\n                            }\n                        }\n                        // Convert tooltip bs4 to bs5 for reportView.\n                        if (isBS5) {\n                            details.reportView = details.reportView.replace(/data-toggle=\"tooltip\"/g, 'data-bs-toggle=\"tooltip\"');\n                            details.reportView = details.reportView.replace(/data-original-title/g, 'data-bs-original-title');\n                            details.reportView = details.reportView.replace(/data-title/g, 'title');\n                            details.reportView = details.reportView.replace(/data-placement/g, 'data-bs-placement');\n                            details.reportView = details.reportView.replace(/data-html/g, 'data-bs-html');\n                        }\n                        let res = `<span class=\"completion-detail ${details.hasDetails ? 'cursor-pointer' : ''}\"\n                                 data-id=\"${itemid}\" data-userid=\"${row.id}\" data-type=\"${ctype}\">${details.reportView}</span>`;\n                        if (access.canedit == 1) {\n                            res += `<i class=\"bi bi-trash3 fs-unset text-danger cursor-pointer position-absolute delete-cell\"\n                                  title=\"${M.util.get_string('delete', 'mod_interactivevideo')}\"></i>`;\n                        }\n                        return res;\n                    } else {\n                        return '-';\n                    }\n                },\n                \"createdCell\": function(td) {\n                    $(td).attr(\"data-item\", itemid);\n                    $(td).attr(\"data-type\", ctype);\n                },\n            });\n        });\n\n        // Create the footer for the table.\n        let $tfoot = $('<tfoot></tfoot>');\n        let $tr = $('<tr></tr>');\n        columns.forEach(function(column) {\n            let $td = $('<td></td>');\n            if (column.data) {\n                $td.attr('id', column.data);\n            }\n            if (column.itemid) {\n                $td.attr('data-item', column.itemid);\n            }\n            $tr.append($td);\n        });\n        $tfoot.append($tr);\n        $('#completiontable').append($tfoot);\n\n        tabledata = $('#completiontable').DataTable(datatableOptions);\n\n        // Handle select.\n        tabledata.on(\"draw\", function() {\n            $('tr.selected td.checkbox input').prop(\"checked\", true);\n            $('tr:not(.selected) td.checkbox input').prop(\"checked\", false);\n        });\n\n        tabledata.on(\"search\", function() {\n            // De-select all rows\n            tabledata.rows().deselect();\n        });\n\n        tabledata.on(\"select deselect\", function(e) {\n            e.stopImmediatePropagation();\n            // Change the checkbox state\n            var selectedRows = tabledata.rows({selected: true});\n            // For each selected row, find the checkbox with class \"checked\" in the first column and check it\n            selectedRows.every(function() {\n                var row = this.node();\n                $(row).find(\"td:first-child input\").prop(\"checked\", true);\n            });\n\n            var deselectedRows = tabledata.rows({selected: false});\n            // For each deselected row, find the checkbox with class \"checked\" in the first column and uncheck it\n            deselectedRows.every(function() {\n                var row = this.node();\n                $(row).find(\"td:first-child input\").prop(\"checked\", false);\n                return true;\n            });\n\n            // Allow 20 rows to be selected at once.\n            $('#bulkactions').remove();\n\n            if (selectedRows.count() > 0 && selectedRows.count() <= 20) {\n                // Insert the bulk actions\n                $('#completiontable_length').after(`<div class=\"d-flex align-items-center\" id=\"bulkactions\">\n                    <button class=\"btn btn-sm btn-danger iv-ml-1\" id=\"bulkdelete\">\n                        <i class=\"bi bi-trash3 iv-mr-1 fs-unset\"></i>${M.util.get_string('delete', 'mod_interactivevideo')}\n                         (${selectedRows.count()})\n                    </button>\n                    </div>`);\n            }\n        });\n\n        $('#filterregion :input:not([type=date])').on('keyup change', function() {\n            let index = $(this).data('index');\n            let value = $(this).val();\n            if (typeof value !== 'string') {\n                value = value.join('|');\n            }\n            // Split the input by '|' and remove any empty terms.\n            let regex = value.split('|').map(term => term.trim()).filter(term => term.length > 0).join('|');\n            // Use regex mode (true) and disable smart searching (false).\n            tabledata.column(index).search(regex, true, false).draw();\n        });\n\n        $('#filterregion :input[type=date].custom-field').on('change', function() {\n            let index = $(this).data('index');\n            $.fn.dataTable.ext.search.push(function(settings, data) {\n                if (settings.nTable.id !== 'completiontable') {\n                    return true;\n                }\n                let start = $(`#filter-${index}-start`).val();\n                if (start !== '') {\n                    // Append the start of the day to the date.\n                    start = new Date(start);\n                    start.setHours(0, 0, 0);\n                }\n                let end = $(`#filter-${index}-end`).val();\n                if (end !== '') {\n                    // Append the end of the day to the date.\n                    end = new Date(end);\n                    end.setHours(23, 59, 59);\n                }\n                let value = data[index];\n                if (isNaN(value) || value == '') {\n                    value = 0;\n                }\n                value = value * 1000;\n                if ((start !== '' || end !== '') && value == 0) {\n                    return false;\n                }\n                if ((start === '' && end === '')\n                    || (start === '' && value <= new Date(end).getTime())\n                    || (end === '' && value >= new Date(start).getTime())\n                    || (value >= new Date(start).getTime() && value <= new Date(end).getTime())) {\n                    return true;\n                }\n                return false;\n            });\n            tabledata.draw();\n        });\n\n        $('#reporttable th#timecreated input').on('click', function(e) {\n            e.stopPropagation();\n            let index = columns.findIndex(x => x.data === 'timecreated');\n            let started = $('th#timecreated input[data-start=true]').is(':checked');\n            let notstarted = $('th#timecreated input[data-start=false]').is(':checked');\n            if (started && notstarted) {\n                tabledata.column(index).search('', true, false).draw();\n            } else if (started) {\n                // Filter by timecreated that is not 0.\n                tabledata.column(index).search('^(?!0$)', true, false).draw();\n            } else if (notstarted) {\n                // Filter by timecreated that is 0.\n                tabledata.column(index).search('^0$', true, false).draw();\n            } else {\n                tabledata.column(index).search('-', true, false).draw();\n            }\n        });\n\n        $('#reporttable th#timecompleted input').on('click', function(e) {\n            e.stopPropagation();\n            let index = columns.findIndex(x => x.data === 'timecompleted');\n            let inprogress = $('th#timecompleted input[data-completed=false]').is(':checked');\n            let completed = $('th#timecompleted input[data-completed=true]').is(':checked');\n            if (inprogress && completed) {\n                tabledata.column(index).search('', true, false).draw();\n            } else if (inprogress) {\n                // Filter by timecompleted that is 0.\n                tabledata.column(index).search('^0$', true, false).draw();\n            } else if (completed) {\n                // Filter by timecompleted that is not 0.\n                tabledata.column(index).search('^(?!0$)', true, false).draw();\n            } else {\n                tabledata.column(index).search('-', true, false).draw();\n            }\n        });\n\n        $('#reporttable th[data-type] input').on('click', function(e) {\n            e.stopPropagation();\n            let index = columns.findIndex(x => x.itemid == $(this).data('item'));\n            if ($(this).is(':checked')) {\n                // Filter this column by not equal to -.\n                tabledata.column(index).search('^(?!-$)', true, false).draw();\n            } else {\n                tabledata.column(index).search('', true, false).draw();\n            }\n        });\n\n        $('#reporttable th#completionpercentage input').on('click', function(e) {\n            e.stopPropagation();\n            let $this = $(this);\n            $.fn.dataTable.ext.search.push(function(settings, data) {\n                if (settings.nTable.id !== 'completiontable') {\n                    return true;\n                }\n                let index = columns.findIndex(x => x.data === 'completionpercentage');\n                let percent = $this.data('percentage');\n                let showless = $('th#completionpercentage input.less').is(':checked');\n                let showmore = $('th#completionpercentage input.more').is(':checked');\n                let value = data[index];\n                value = parseInt(value.replace('%', ''));\n                if (showless && showmore) {\n                    return true;\n                } else if (showless) {\n                    return value < percent;\n                } else if (showmore) {\n                    return value >= percent;\n                } else {\n                    return false;\n                }\n            });\n            tabledata.draw();\n        });\n\n        // Filter by timecreated range.\n        $('#filterregion #timecreatedrange input').on('change', function() {\n            $.fn.dataTable.ext.search.push(function(settings, data) {\n                if (settings.nTable.id !== 'completiontable') {\n                    return true;\n                }\n                let start = $('#timecreatedstart').val();\n                if (start !== '') {\n                    // Append the start of the day to the date.\n                    start = new Date(start);\n                    start.setHours(0, 0, 0);\n                }\n                let end = $('#timecreatedend').val();\n                if (end !== '') {\n                    // Append the end of the day to the date.\n                    end = new Date(end);\n                    end.setHours(23, 59, 59);\n                }\n                let index = columns.findIndex(x => x.data === 'timecreated');\n                let value = data[index];\n                if ((start !== '' || end !== '') && value == 0) {\n                    return false;\n                }\n                if ((start === '' && end === '')\n                    || (start === '' && value <= new Date(end).getTime())\n                    || (end === '' && value >= new Date(start).getTime())\n                    || (value >= new Date(start).getTime() && value <= new Date(end).getTime())) {\n                    return true;\n                }\n                return false;\n            }\n            );\n            tabledata.draw();\n        });\n\n        // Filter by timecompleted range.\n        $('#filterregion #timecompletedrange input').on('change', function() {\n            $.fn.dataTable.ext.search.push(function(settings, data) {\n                if (settings.nTable.id !== 'completiontable') {\n                    return true;\n                }\n                let start = $('#timecompletedstart').val();\n                if (start !== '') {\n                    // Append the start of the day to the date.\n                    start = new Date(start);\n                    start.setHours(0, 0, 0);\n                }\n                let end = $('#timecompletedend').val();\n                if (end !== '') {\n                    // Append the end of the day to the date.\n                    end = new Date(end);\n                    end.setHours(23, 59, 59);\n                }\n                let index = columns.findIndex(x => x.data === 'timecompleted');\n                let value = data[index];\n                if ((start !== '' || end !== '') && value == 0) {\n                    return false;\n                }\n                if ((start === '' && end === '')\n                    || (start === '' && value <= new Date(end).getTime())\n                    || (end === '' && value >= new Date(start).getTime())\n                    || (value >= new Date(start).getTime() && value <= new Date(end).getTime())) {\n                    return true;\n                }\n                return false;\n            }\n            );\n            tabledata.draw();\n        });\n\n        // Right-click on data-cell to delete completion data for specific user and specific item.\n        $(document).on('click', 'td.data-cell .delete-cell', function(e) {\n            e.preventDefault();\n            if (access.canedit != 1) {\n                return;\n            }\n            let $this = $(this).closest('td');\n            let itemid = $this.data('item');\n            if ($this.text() === '-' || $this.text() === '') {\n                return;\n            }\n            let userid = $this.closest('tr').attr('id');\n            let userfullname = data.find(x => x.id == userid).fullname;\n            let recordid = $this.closest('tr').find('td').eq(0).find('button').data('record');\n            let cellIndex = $this.index();\n            let title = $this.closest('table').find('th').eq(cellIndex).text();\n\n            const deleteCompletionData = async() => {\n                let type = $this.data('type');\n                let matchingContentTypes = contentTypes.find(x => x.name === type);\n                let amdmodule = matchingContentTypes.amdmodule;\n                let theAnnotation = itemsdata.find(x => x.id == itemid);\n                require([amdmodule], function(Module) {\n                    const module = new Module(player, itemsdata, cmid, courseid, null,\n                        completionpercentage, null, grademax, videotype, null,\n                        end - start, start, end, theAnnotation.prop, cm);\n                    if (module.deleteCompletionData(recordid, itemid, userid)) {\n                        let targetdata = tabledata.row($this.closest('tr')).data();\n                        targetdata.completeditems = JSON.stringify(\n                            JSON.parse(targetdata.completeditems).filter(x => x.id != itemid));\n                        let completiondetails = JSON.parse(targetdata.completiondetails);\n                        completiondetails = completiondetails.map(x => {\n                            x = JSON.parse(x);\n                            if (x.id == itemid) {\n                                x.hasDetails = true;\n                                x.deleted = true;\n                                x.reportView = '<i class=\"bi bi-trash3 text-danger\"></i>';\n                            }\n                            return JSON.stringify(x);\n                        });\n                        targetdata.completiondetails = JSON.stringify(completiondetails);\n                        tabledata.row($this.closest('tr')).data(targetdata).draw();\n                        addToast(M.util.get_string('completedeletedforthisitem', 'mod_interactivevideo', {\n                            item: title,\n                            user: userfullname\n                        }), {\n                            type: 'success'\n                        });\n                    } else {\n                        addToast(M.util.get_string('completionreseterror', 'mod_interactivevideo'), {\n                            type: 'error'\n                        });\n                    }\n                });\n            };\n\n            try {\n                Notification.deleteCancelPromise(\n                    M.util.get_string('deletecompletion', 'mod_interactivevideo'),\n                    M.util.get_string('deleterecordforitemforuserconfirm', 'mod_interactivevideo', {\n                        item: title,\n                        user: userfullname\n                    }),\n                    M.util.get_string('delete', 'mod_interactivevideo')\n                ).then(async() => {\n                    return deleteCompletionData();\n                }).catch(() => {\n                    return;\n                });\n            } catch { // Fallback for older versions of Moodle.\n                Notification.saveCancel(\n                    M.util.get_string('deletecompletion', 'mod_interactivevideo'),\n                    M.util.get_string('deleterecordforitemforuserconfirm', 'mod_interactivevideo', {\n                        item: title,\n                        user: userfullname\n                    }),\n                    M.util.get_string('delete', 'mod_interactivevideo'),\n                    function() {\n                        return deleteCompletionData();\n                    }\n                );\n            }\n        });\n\n        initonreport.forEach((type) => {\n            let matchingContentTypes = contentTypes.find(x => x.name === type);\n            let amdmodule = matchingContentTypes.amdmodule;\n            require([amdmodule], function(Module) {\n                new Module(player, itemsdata, cmid, courseid, null,\n                    completionpercentage, null, grademax, videotype, null,\n                    end - start, start, end, null, cm).init();\n            });\n        });\n    });\n\n    $(document).on('click', '[data-item] a', function() {\n        const convertSecondsToHMS = (seconds) => {\n            const h = Math.floor(seconds / 3600);\n            const m = Math.floor(seconds % 3600 / 60);\n            const s = Math.floor(seconds % 3600 % 60);\n            return (h > 0 ? h + ':' : '') + (m < 10 ? '0' : '') + m + ':' + (s < 10 ? '0' : '') + s;\n        };\n        let annotationid = $(this).closest('th').data('item');\n        let theAnnotation = itemsdata.find(x => x.id == annotationid);\n        let tabledatajson = tabledata.rows().data().toArray();\n        let title = theAnnotation.formattedtitle;\n        if (theAnnotation.timestamp > 0) {\n            title += \" @ \" + convertSecondsToHMS(theAnnotation.timestamp);\n        }\n        const modal = `<div class=\"modal fade\" id=\"annotation-modal\" role=\"dialog\"\n            aria-labelledby=\"annotation-modal\"\n         aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n         <div id=\"message\" data-id=\"${theAnnotation.id}\" data-placement=\"popup\"\n          class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable ${theAnnotation.type}\" role=\"document\">\n            <div class=\"modal-content iv-rounded-lg\">\n                <div class=\"modal-header d-flex align-items-center shadow-sm\" id=\"title\">\n                    <h5 class=\"modal-title text-truncate mb-0\">${title}</h5>\n                    <div class=\"btns d-flex align-items-center\">\n                        <button class=\"btn close-modal p-0 border-0\" aria-label=\"Close\" data${isBS5 ? '-bs' : ''}-dismiss=\"modal\">\n                        <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"modal-body\" id=\"content\">\n                <div class=\"loader w-100 mt-5\"></div>\n                </div>\n                </div>\n            </div>\n            </div>`;\n        $('body').append(modal);\n        $('#annotation-modal').modal('show');\n        $('#annotation-modal').on('hide.bs.modal', function() {\n            $('#annotation-modal').remove();\n        });\n\n        $('#annotation-modal').on('shown.bs.modal', function() {\n            $('#annotation-modal .modal-body').fadeIn(300);\n            let matchingContentTypes = contentTypes.find(x => x.name === theAnnotation.type);\n            let amdmodule = matchingContentTypes.amdmodule;\n            require([amdmodule], function(Module) {\n                theAnnotation.completed = true;\n                new Module(player, itemsdata, cmid, courseid, null,\n                    completionpercentage, null, grademax, videotype, null,\n                    end - start, start, end, theAnnotation.prop, cm).displayReportView(theAnnotation, tabledatajson, DataTable);\n            });\n            $(this).find('.close-modal').focus();\n        });\n    });\n\n    // Delete single completion record.\n    $(document).on('click', 'td .reset', function(e) {\n        e.preventDefault();\n        const recordid = $(this).data('record');\n        let $this = $(this);\n        const deleteSingle = async() => {\n            return $.ajax({\n                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                method: 'POST',\n                dataType: \"text\",\n                data: {\n                    action: 'delete_progress_by_id',\n                    recordid,\n                    courseid: courseid,\n                    cmid: cmid,\n                    contextid: M.cfg.contextid,\n                    sesskey: M.cfg.sesskey,\n                },\n                success: function(response) {\n                    if (response == 'deleted') {\n                        let targetdata = tabledata.row($this.closest('tr')).data();\n                        targetdata.completionpercentage = 0;\n                        targetdata.timecompleted = 0;\n                        targetdata.xp = 0;\n                        targetdata.timecreated = 0;\n                        targetdata.completeditems = null;\n                        targetdata.completiondetails = null;\n                        targetdata.completionid = null;\n                        tabledata.row($this.closest('tr')).data(targetdata).draw();\n                        addToast(M.util.get_string('completionresetsuccess', 'mod_interactivevideo'), {\n                            type: 'success'\n                        });\n                    }\n                },\n                error: function() {\n                    addToast(M.util.get_string('completionreseterror', 'mod_interactivevideo'), {\n                        type: 'error'\n                    });\n                }\n            });\n        };\n        try {\n            Notification.deleteCancelPromise(\n                M.util.get_string('deletecompletion', 'mod_interactivevideo'),\n                M.util.get_string('areyousureyouwanttoresetthecompletiondata', 'mod_interactivevideo'),\n                M.util.get_string('delete', 'mod_interactivevideo')\n            ).then(() => {\n                return deleteSingle();\n            }).catch(() => {\n                return;\n            });\n        } catch { // Fallback for older versions of Moodle.\n            Notification.saveCancel(\n                M.util.get_string('deletecompletion', 'mod_interactivevideo'),\n                M.util.get_string('areyousureyouwanttoresetthecompletiondata', 'mod_interactivevideo'),\n                M.util.get_string('delete', 'mod_interactivevideo'),\n                function() {\n                    return deleteSingle();\n                }\n            );\n        }\n    });\n\n    // Delete multiple completion records.\n    $(document).on('click', '#bulkdelete', function() {\n        let selectedRows = tabledata.rows({selected: true});\n        let selectedData = selectedRows.data().toArray();\n        let selectedIds = selectedData.map(x => x.completionid);\n        let selectedUsers = selectedData.map(x => x.id);\n        const bulkDeleteCompletionData = async() => {\n            return $.ajax({\n                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                method: 'POST',\n                dataType: \"text\",\n                data: {\n                    action: 'delete_progress_by_ids',\n                    completionids: selectedIds.join(','),\n                    courseid: courseid,\n                    cmid: cmid,\n                    contextid: M.cfg.contextid,\n                    sesskey: M.cfg.sesskey,\n                },\n                success: function(response) {\n                    if (response == 'deleted') {\n                        selectedRows.every(function() {\n                            let targetdata = this.data();\n                            targetdata.completionpercentage = 0;\n                            targetdata.timecompleted = 0;\n                            targetdata.xp = 0;\n                            targetdata.timecreated = 0;\n                            targetdata.completeditems = null;\n                            targetdata.completiondetails = null;\n                            targetdata.completionid = null;\n                            tabledata.row(this.node()).data(targetdata);\n                            return true;\n                        });\n                        tabledata.draw();\n                        addToast(M.util.get_string('completionresetsuccess', 'mod_interactivevideo'), {\n                            type: 'success'\n                        });\n                    }\n                },\n                error: function() {\n                    addToast(M.util.get_string('completionreseterror', 'mod_interactivevideo'), {\n                        type: 'error'\n                    });\n                }\n            });\n        };\n        try {\n            Notification.deleteCancelPromise(\n                M.util.get_string('deletecompletion', 'mod_interactivevideo'),\n                M.util.get_string('deleterecordforselectedusers', 'mod_interactivevideo', selectedUsers.length),\n                M.util.get_string('delete', 'mod_interactivevideo')\n            ).then(async() => {\n                return bulkDeleteCompletionData();\n            }).catch(() => {\n                return;\n            });\n        } catch { // Fallback for older versions of Moodle.\n            Notification.saveCancel(\n                M.util.get_string('deletecompletion', 'mod_interactivevideo'),\n                M.util.get_string('deleterecordforselectedusers', 'mod_interactivevideo', selectedUsers.length),\n                M.util.get_string('delete', 'mod_interactivevideo'),\n                function() {\n                    return bulkDeleteCompletionData();\n                }\n            );\n        }\n    });\n\n    $(document).on('click', 'td .completion-detail', function() {\n        let id = $(this).closest('td').data('item');\n        let userid = $(this).closest('tr').attr('id');\n        let type = $(this).closest('td').data('type');\n        let matchingContentTypes = contentTypes.find(x => x.name === type);\n        let amdmodule = matchingContentTypes.amdmodule;\n        // Get column header with the item id.\n        let theAnnotation = itemsdata.find(x => x.id == id);\n        require([amdmodule], function(Module) {\n            new Module(player, itemsdata, cmid, courseid, null,\n                completionpercentage, null, grademax, videotype, null,\n                end - start, start, end, theAnnotation.prop, cm).getCompletionData(theAnnotation, userid);\n        });\n    });\n};\n\n\n/**\n * Renders annotation logs in a DataTable with specified options.\n *\n * @param {Object} data - The data to be displayed in the table.\n * @param {Array} data.rows - The rows of data to be displayed.\n * @param {string} node - The DOM node selector where the table will be rendered.\n * @param {string} title - The title used for export options.\n */\nconst renderAnnotationLogs = (data, node, title) => {\n    let tableOptions = {\n        \"data\": data.rows,\n        \"deferRender\": true,\n        \"pageLength\": 25,\n        \"order\": [[0, \"asc\"]],\n        \"columnDefs\": [\n            {\n                \"targets\": 'not-sortable',\n                \"sortable\": false,\n            },\n        ],\n        \"pagingType\": \"full\",\n        \"language\": {\n            \"lengthMenu\": \"_MENU_\",\n            \"zeroRecords\": M.util.get_string('nofound', \"mod_interactivevideo\"),\n            \"search\": `<span class=\"d-none d-md-inline\">${M.util.get_string('search', \"mod_interactivevideo\")}</span>`,\n            \"info\": M.util.get_string('datatableinfo', \"mod_interactivevideo\"),\n            \"infoEmpty\": M.util.get_string('datatableinfoempty', \"mod_interactivevideo\"),\n            \"infoFiltered\": M.util.get_string('datatableinfofiltered', \"mod_interactivevideo\"),\n            \"paginate\": {\n                \"first\": '<i class=\"bi bi-chevron-double-left fs-unset\"></i>',\n                \"last\": '<i class=\"bi bi-chevron-double-right fs-unset\"></i>',\n                \"next\": '<i class=\"bi bi-chevron-right fs-unset\"></i>',\n                \"previous\": '<i class=\"bi bi-chevron-left fs-unset\"></i>'\n            },\n            \"select\": {\n                rows: {\n                    _: M.util.get_string('rowsselected', 'mod_interactivevideo'),\n                }\n            }\n        },\n        stateSaveParams: function(settings, data) {\n            // We only want to save the state of the colvis and length menu\n            data.search.search = \"\";\n            data.start = 0;\n            data.columns.forEach(function(column) {\n                column.search.search = \"\";\n            });\n            return data;\n        },\n        stateSave: true,\n        \"dom\": `Blft<'row'<'col-sm-6'i><'col-sm-6'p>>`,\n        \"buttons\": [\n            {\n                extend: \"copyHtml5\",\n                text: '<i class=\"bi bi-copy fa-fw fs-unset\"></i>',\n                className: \"btn btn-sm border-0\",\n                messageTop: null,\n                title: null,\n                exportOptions: {\n                    columns: ['.exportable'],\n                    format: {\n                        body: function(data) {\n                            // Remove any HTML tags from the data.\n                            const text = document.createElement(\"div\");\n                            text.innerHTML = data;\n                            return text.textContent.replace(/\\n/g, ' ').replace(/\\t/g, ' ').replace(/\\r/g, ' ');\n                        }\n                    }\n                }\n            },\n            {\n                extend: \"csvHtml5\",\n                text: '<i class=\"bi bi-filetype-csv fa-fw fs-unset\"></i>',\n                title: title,\n                className: \"btn btn-sm border-0\",\n                exportOptions: {\n                    columns: ['.exportable']\n                }\n            },\n            {\n                extend: \"excelHtml5\",\n                text: '<i class=\"bi bi-file-earmark-excel fa-fw fs-unset\"></i>',\n                className: \"btn btn-sm border-0\",\n                title: title,\n                exportOptions: {\n                    columns: ['.exportable']\n                }\n            }\n        ],\n        \"initComplete\": function() {\n            $(`${node} table`)\n                .wrap(\"<div style='overflow:auto;position:relative;width:100%' class='completiontablewrapper'></div>\");\n            $(`${node} .dataTables_length`).addClass(\"d-inline iv-ml-1\");\n            $(`${node} .dataTables_filter`).addClass(\"d-inline iv-float-right\");\n            $(`${node} .table-responsive`).addClass(\"p-1\");\n        }\n    };\n\n    $(`${node} table`).DataTable(tableOptions);\n};\n\nexport {\n    init,\n    renderAnnotationLogs\n};"],"names":["cmid","groupid","grademax","itemids","completionpercentage","videourl","videotype","cm","courseid","start","end","access","window","JSZip","DataTable","$","fn","dataTable","isBS5","hasClass","require","getContentTypes","ajax","url","M","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","getReportData","ctxid","courseContextId","itemsdata","text","JSON","parse","contentTypes","tabledata","initonreport","filter","x","prop","Set","map","type","when","done","async","ct","hasCompletion","some","timecreated","profileFields","customProfileFields","customfields","reduce","acc","val","concat","undefined","each","pr","index","this","name","attr","length","customField","find","shortname","replace","push","exportOptions","columns","format","body","div","document","createElement","innerHTML","textContent","innerText","trim","header","querySelector","remove","visible","className","render","row","fullname","deletebutton","canedit","util","get_string","completionid","id","$identitycolumn","$this","fieldtype","value","date","Date","toLocaleString","getTime","datatableOptions","findIndex","c","rows","_","select","style","selector","stateSaveParams","settings","search","forEach","column","stateSave","extend","messageTop","title","titleAttr","footerCallback","api","rowCount","count","findColIndex","col","timecreatedIdx","timecompletedIdx","completionpercentageIdx","xpIdx","countTimecreated","timecreatedPerc","toFixed","countTimecompleted","timecompletedPerc","xpData","toArray","parseFloat","minXP","Math","min","maxXP","max","avgXp","cpData","minCp","maxCp","avgCp","footer","itemid","itemIdx","itemPerc","completiondetails","e","details","Number","deleted","removeClass","addClass","wrap","fadeOut","insertAfter","off","on","slideToggle","toggleClass","css","element","input","options","sort","join","optionsc","renderFilterBox","appendTo","select2","dropdownParent","width","placeholder","allowClear","evt","target","parents","append","tooltip","toString","ctype","sortable","rtype","reportView","res","hasDetails","td","$tfoot","$tr","$td","deselect","stopImmediatePropagation","selectedRows","selected","every","node","after","regex","split","term","draw","ext","nTable","setHours","isNaN","stopPropagation","started","is","notstarted","inprogress","completed","percent","showless","showmore","parseInt","preventDefault","closest","userid","userfullname","recordid","eq","cellIndex","deleteCompletionData","amdmodule","theAnnotation","Module","player","targetdata","completeditems","stringify","item","user","deleteCancelPromise","then","catch","saveCancel","init","annotationid","tabledatajson","formattedtitle","timestamp","seconds","h","floor","m","s","convertSecondsToHMS","modal","fadeIn","displayReportView","focus","deleteSingle","success","response","timecompleted","xp","error","selectedData","selectedIds","selectedUsers","bulkDeleteCompletionData","completionids","getCompletionData","tableOptions"],"mappings":"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"}