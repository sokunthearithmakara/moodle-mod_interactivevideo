{"version":3,"file":"mod_form.min.js","sources":["../src/mod_form.js"],"sourcesContent":["/* eslint-disable complexity */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Interactive Video module form\n *\n * @module     mod_interactivevideo/mod_form\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/notification', 'core_form/modalform', 'core/str'], function($, notification, ModalForm, str) {\n    return {\n        /**\n         * Init function on page loads.\n         * @param {Number} id module id\n         * @param {Number} usercontextid user context id\n         * @param {String} videotypes allowed video types\n         */\n        'init': function(id, usercontextid, videotypes) {\n            let totaltime, player;\n            let videowrapper = $('#video-wrapper');\n            let endinput = $('input[name=endtime]');\n            let startinput = $('input[name=starttime]');\n            let startassistinput = $('input[name=startassist]');\n            let endassistinput = $('input[name=endassist]');\n            let totaltimeinput = $('input[name=totaltime]');\n            let videourlinput = $('input[name=videourl]');\n            let sourceinput = $('input[name=source]');\n            let videoinput = $('input[name=video]');\n            let uploadfield = $(\"#fitem_id_upload\");\n            let deletefield = $(\"#fitem_id_delete\");\n            let videofile = $('input[name=videofile]');\n            let videotype = $('input[name=type]');\n            let posterimage = $('input[name=posterimage]');\n            let nameinput = $('input[name=name]');\n\n            /**\n             * Format seconds to HH:MM:SS.\n             * @param {Number} s seconds\n             * @returns\n             */\n            const convertSecondsToHMS = (s) => {\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - (hours * 3600)) / 60);\n                let seconds = s - (hours * 3600) - (minutes * 60);\n                seconds = seconds.toFixed(2);\n                let result = (hours < 10 ? \"0\" + hours : hours);\n                result += \":\" + (minutes < 10 ? \"0\" + minutes : minutes);\n                result += \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n                return result;\n            };\n\n            /**\n             * Scripts to run when the player is ready.\n             */\n            const whenPlayerReady = async function() {\n                window.IVPLAYER = player;\n                player.unMute();\n                if (player.audio) {\n                    videowrapper.addClass('audio');\n                }\n                videowrapper.show();\n                // Recalculate the ratio of the video.\n                let ratio = player.aspectratio;\n                if (ratio < 1) {\n                    ratio = 1;\n                }\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                if ($(`[name=\"name\"]`).val() == '') {\n                    $(`[name=\"name\"]`).val(player.title);\n                }\n\n                const duration = player.totaltime;\n                totaltime = duration;\n                totaltimeinput.val(totaltime);\n                if (Number(endinput.val()) > 0 && Number(endinput.val()) > totaltime) {\n                    endinput.val(totaltime);\n                    endassistinput.val(convertSecondsToHMS(totaltime));\n                }\n\n                if (Number(startinput.val()) > 0 && Number(startinput.val()) > totaltime) {\n                    startinput.val(0);\n                    startassistinput.val('00:00:00.00');\n                }\n\n                if (endassistinput.val() == '00:00:00.00' || endassistinput.val() == '') {\n                    endassistinput.val(convertSecondsToHMS(totaltime));\n                    endinput.val(totaltime);\n                }\n                $(\"#videototaltime\").text(convertSecondsToHMS(totaltime));\n                posterimage.val(player.posterImage);\n            };\n\n            $(document).on('iv:playerReady', '#player', function() {\n                whenPlayerReady();\n            });\n\n            $(document).on('iv:playerError', async function() {\n                let strings = await str.get_strings([\n                    {key: 'thereisanissueloadingvideo', component: 'mod_interactivevideo'},\n                ]);\n                videourlinput.addClass('is-invalid');\n                videourlinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                    + strings[0] + '</div>');\n            });\n\n            const checkVideo = (url) => new Promise((resolve) => {\n                // Remove video element if it exists.\n                if (document.querySelector('video')) {\n                    document.querySelector('video').remove();\n                }\n                let video = document.createElement('video');\n                video.src = url;\n                video.addEventListener('canplay', function() {\n                    resolve(true);\n                });\n\n                video.addEventListener('error', function() {\n                    resolve(false);\n                });\n            });\n\n            nameinput.on('contextmenu', function(e) {\n                e.preventDefault();\n                nameinput.val(player.title);\n            });\n\n            videourlinput.on('input', async function() {\n                $('.noautoplay').remove();\n                videourlinput.removeClass('is-invalid');\n                videourlinput.next('.form-control-feedback').remove();\n                let currenttype = videotype.val();\n                videotype.val('');\n                if (player) {\n                    player.destroy();\n                }\n                videowrapper.html('<div id=\"player\" style=\"width:100%; max-width: 100%\"></div>');\n                let url = $(this).val().trim();\n                if (url == '') {\n                    videowrapper.hide();\n                    return;\n                }\n\n                let defaultLoadFunction = (type) => {\n                    require(['mod_interactivevideo/player/' + type], function(VP) {\n                        player = new VP();\n                        player.load(url, 0, null, {\n                            'showControls': true,\n                            'preload': true,\n                            'editform': true,\n                        });\n                    });\n                };\n\n                // YOUTUBE:: Check if the video is a youtube video.\n                // e.g. https://www.youtube.com/watch?v={id}\n                // e.g. https://www.youtube.com/embed/{id}\n                // e.g. https://youtu.be/{id}\n                // e.g. https://www.youtube-nocookie.com/embed/{id}\n                if (videotypes.includes('yt') || currenttype == 'yt') {\n                    let regex = new RegExp(\n                        '(?:https?:\\\\/\\\\/)?' +\n                        '(?:www\\\\.)?' +\n                        '(?:youtube\\\\.com|youtu\\\\.be|youtube-nocookie\\\\.com)' +\n                        '(?:\\\\/embed\\\\/|\\\\/watch\\\\?v=|\\\\/)([^\\\\/]+)',\n                        'g'\n                    );\n                    let match = regex.exec(url);\n                    if (match) {\n                        videowrapper.show();\n                        // Show loader while the video is loading.\n                        videowrapper.html('<div id=\"player\" class=\"w-100\"></div>');\n                        videotype.val('yt');\n                        defaultLoadFunction('yt');\n                        return;\n                    }\n                }\n\n                // VIMEO:: Check if the video is from vimeo.\n                // e.g. https://vimeo.com/*\n                if (videotypes.includes('vimeo') || currenttype == 'vimeo') {\n                    // VIMEO:: Extract id from the URL.\n                    let regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:vimeo\\.com)\\/([^/]+)/g;\n                    let match = regex.exec(url);\n                    let vid = match ? match[1] : null;\n                    if (vid) {\n                        videowrapper.html('<div id=\"player\" class=\"w-100\"></div>');\n                        videotype.val('vimeo');\n                        defaultLoadFunction('vimeo');\n                        return;\n                    }\n                }\n\n                // PANOPTO:: Check if the video is from panopto.\n                // e.g. https://upenn.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=f4f968b2-eb20-4972-9ec1-ab7e01351489\n                if (videotypes.includes('panopto') || currenttype == 'panopto') {\n                    // Extract id from the URL.\n                    let regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:[^\\/]*panopto\\.[^\\/]+)\\/Panopto\\/.+\\?id=([^/]+)/g;\n                    let match = regex.exec(url);\n                    if (match) {\n                        videowrapper.show();\n                        videotype.val('panopto');\n                        defaultLoadFunction('panopto');\n                        return;\n                    }\n                }\n\n                // DAILYMOTION:: Check if the video is from daily motion.\n                // e.g. https://www.dailymotion.com/video/x7zv7zv\n                // e.g. https://dai.ly/x7zv7zv\n                // e.g. https://www.dailymotion.com/embed/video/x7zv7zv\n                if (videotypes.includes('dailymotion') || currenttype == 'dailymotion') {\n                    let regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:dai\\.ly|dailymotion\\.com)\\/(?:embed\\/video\\/|video\\/|)([^/]+)/g;\n                    let match = regex.exec(url);\n                    if (match) {\n                        videowrapper.show();\n                        // Show loader while the video is loading\n                        videowrapper.html('<div id=\"player\" class=\"w-100\"></div>');\n                        videotype.val('dailymotion');\n                        defaultLoadFunction('dailymotion');\n                        return;\n                    }\n                }\n\n                // WISTIA:: Check if the video is from wistia e.g. https://sokunthearithmakara.wistia.com/medias/kojs3bi9bf.\n                if (videotypes.includes('wistia') || currenttype == 'wistia') {\n                    const regexWistia = /(?:https?:\\/\\/)?(?:www\\.)?(?:wistia\\.com)\\/medias\\/([^/]+)/g;\n                    let match = regexWistia.exec(url);\n                    const mediaId = match ? match[1] : null;\n                    if (mediaId) {\n                        videowrapper.show();\n                        videotype.val('wistia');\n                        defaultLoadFunction('wistia');\n                        return;\n                    }\n                }\n\n                // RUMBLE:: Check if the video is from rumble.\n                if (videotypes.includes('rumble') || currenttype == 'rumble') {\n                    // Extract id from the URL https://rumble.com/{id}\n                    let regex = /https:\\/\\/rumble.com\\/([a-zA-Z0-9]+)/;\n                    let match = regex.exec(url);\n                    let videoId = match ? match[1] : null;\n                    if (videoId) {\n                        videowrapper.show();\n                        videotype.val('rumble');\n                        defaultLoadFunction('rumble');\n                        return;\n                    }\n                }\n\n                // SPROUTVIDEO:: Check if the video is from sproutvideo.\n                if (videotypes.includes('sproutvideo') || currenttype == 'sproutvideo') {\n                    // Extract id from the URL https://sproutvideo.com/videos/{id}\n                    // or https://*.vids.io/videos/{id} where * is the subdomain.\n                    // or https://videos.sproutvideo.com/embed/{id}\n\n                    const regexSproutVideo =\n                        /(?:https?:\\/\\/)?(?:[^.]+\\.)*(?:sproutvideo\\.com\\/(?:videos|embed)|vids\\.io\\/videos)\\/([^/]+)/;\n                    let match = regexSproutVideo.exec(url);\n                    const videoId = match ? match[1] : null;\n                    if (videoId) {\n                        videowrapper.show();\n                        videotype.val('sproutvideo');\n                        defaultLoadFunction('sproutvideo');\n                        return;\n                    }\n                }\n\n                // KINESCOPE:: Check if the video is from kinescope.\n                if (videotypes.includes('kinescope') || currenttype == 'kinescope') {\n                    // Sample video: https://kinescope.io/tLLFbwam97SS4F7V1rGB2T => https://kinescope.io/{id}\n                    // Private video: https://kinescope.io/tLLFbwam97SS4F7V1rGB2T/plrMVe6Z => https://kinescope.io/{id}/{privateId}\n                    let regex = /https:\\/\\/kinescope.io\\/(.+)/;\n                    let match = regex.exec(url);\n                    let videoId = match ? match[1] : null;\n                    if (videoId) {\n                        videowrapper.show();\n                        videotype.val('kinescope');\n                        defaultLoadFunction('kinescope');\n                        return;\n                    }\n                }\n\n                // RUTUBE:: Check if the video is from rutube.\n                if (videotypes.includes('rutube') || currenttype == 'rutube') {\n                    // Extract id from the URL https://rutube.ru/video/{token}\n                    // or https://rutube.ru/video/private/{token}\n                    let regex = /https:\\/\\/rutube.ru\\/video\\/(?:private\\/)?(.+)/;\n                    let match = regex.exec(url);\n                    let videoId = match ? match[1] : null;\n                    if (videoId) {\n                        videowrapper.show();\n                        videotype.val('rutube');\n                        defaultLoadFunction('rutube');\n                        return;\n                    }\n                }\n\n                // VIDEO URL:: Check if the link is a direct video link and video is \"canplay\".\n                if (videotypes.includes('videolink') || currenttype == 'html5video') {\n                    if (await checkVideo(url)) {\n                        // Show loader while the video is loading.\n                        videowrapper.html('<video id=\"player\" class=\"w-100\"></video>');\n                        videotype.val('html5video');\n                        defaultLoadFunction('html5video');\n                        return;\n                    }\n                }\n\n                // PEERTUBE:: Check if the link is a peertube link.\n                // e.g. https://video.hardlimit.com/w/hFwjKHQa3ixivePeqGc4KR\n                if (videotypes.includes('peertube') || currenttype == 'peertube') {\n                    // Extract id from the URL https://video.hardlimit.com/w/{id}\n                    let regex = /https:\\/\\/([^/]+)\\/w\\/([^/]+)/;\n                    let match = regex.exec(url);\n                    if (match) {\n                        videowrapper.show();\n                        videotype.val('peertube');\n                        defaultLoadFunction('peertube');\n                        return;\n                    }\n                }\n\n                // Spotify:: Check if the link is a spotify link.\n                // e.g. https://open.spotify.com/episode/7mmw9e0ecbX3SEjB1fudgL?si=oowc-dqOS8GEBtUAEyO23g\n                if (videotypes.includes('spotify') || currenttype == 'spotify') {\n                    let regex = /(?:https?:\\/\\/)?(?:open\\.spotify\\.com)\\/(episode|track)\\/([^/]+)/;\n                    let match = regex.exec(url);\n                    if (match) {\n                        videowrapper.show();\n                        videotype.val('spotify');\n                        defaultLoadFunction('spotify');\n                        return;\n                    }\n                }\n\n                // Soundcloud:: Check if the link is a soundcloud link.\n                // e.g. https://soundcloud.com/{username}/{trackname}\n                if (videotypes.includes('soundcloud') || currenttype == 'soundcloud') {\n                    let regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:soundcloud\\.com)\\/([^/]+)\\/([^/]+)/;\n                    let match = regex.exec(url);\n                    if (match) {\n                        videowrapper.show();\n                        videotype.val('soundcloud');\n                        defaultLoadFunction('soundcloud');\n                        return;\n                    }\n                }\n\n                // Invalid video url.\n                const strings = await str.get_strings([\n                    {key: 'invalidvideourl', component: 'mod_interactivevideo'},\n                    {key: 'error', component: 'core'}\n                ]);\n                notification.alert(strings[1], strings[0]);\n                videourlinput.val('').addClass('is-invalid');\n                videowrapper.hide();\n            });\n\n\n            // Ctrl/Command click on the startassistinput to reset the start time to 0.\n            startassistinput.on('click', function(e) {\n                if (e.ctrlKey || e.metaKey) {\n                    startinput.val(0);\n                    startassistinput.val('00:00:00.00');\n                }\n            });\n\n            startassistinput.on('change blur', async function() {\n                startassistinput.removeClass('is-invalid');\n                startassistinput.next('.form-control-feedback').remove();\n                if (startassistinput.val() == '') {\n                    return;\n                }\n                let strings = await str.get_strings([\n                    {key: 'starttimelesstotaltime', component: 'mod_interactivevideo'},\n                    {key: 'starttimelessthanendtime', component: 'mod_interactivevideo'},\n                    {key: 'invalidtimestampformat', component: 'mod_interactivevideo'},\n                ]);\n                const parts = startassistinput.val().split(':');\n                let time = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                startinput.val(time.toFixed(2));\n                if (Number(startinput.val()) > totaltime) {\n                    startassistinput.addClass('is-invalid');\n                    startassistinput.next('.form-control-feedback').remove();\n                    startassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                        + strings[0] + '</div>');\n                    startassistinput.val(convertSecondsToHMS(totaltime));\n                } else {\n                    if (Number(endinput.val()) && Number(endinput.val()) != 0\n                        && Number(startinput.val()) > Number(endinput.val())) {\n                        startassistinput.addClass('is-invalid');\n                        startassistinput.next('.form-control-feedback').remove();\n                        startassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                            + strings[1] + '</div>');\n                        startassistinput.val(convertSecondsToHMS(endinput.val()));\n                    } else if (Number(startinput.val()) >= Number(endinput.val())) {\n                        endassistinput.val(convertSecondsToHMS(0));\n                    }\n                }\n            });\n\n            // Ctrl/Command click on the endassistinput to reset the end time to total time.\n            endassistinput.on('click', function(e) {\n                if (e.ctrlKey || e.metaKey) {\n                    endinput.val(totaltime);\n                    endassistinput.val(convertSecondsToHMS(totaltime));\n                }\n            });\n\n            endassistinput.on('change blur', async function() {\n                endassistinput.removeClass('is-invalid');\n                endassistinput.next('.invalid-feedback').remove();\n                if (endassistinput.val() == '') {\n                    return;\n                }\n                const strings = await str.get_strings([\n                    {key: 'endtimelesstotaltime', component: 'mod_interactivevideo'},\n                    {key: 'endtimegreaterstarttime', component: 'mod_interactivevideo'},\n                    {key: 'invalidtimestampformat', component: 'mod_interactivevideo'},\n                ]);\n                const parts = endassistinput.val().split(':');\n                let time = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                endinput.val(time.toFixed(2));\n                if (Number(endinput.val()) > totaltime) {\n                    endassistinput.addClass('is-invalid');\n                    endassistinput.next('.invalid-feedback').remove();\n                    endassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                        + strings[0] + '</div>');\n                    endassistinput.val(convertSecondsToHMS(totaltime));\n                } else {\n                    if (Number(startinput.val()) && Number(endinput.val()) < Number(startinput.val())) {\n                        endassistinput.addClass('is-invalid');\n                        endassistinput.next('.invalid-feedback').remove();\n                        endassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                            + strings[1] + '</div>');\n                        endassistinput.val(convertSecondsToHMS(startinput.val()));\n                    } else if (Number(startinput.val()) >= Number(endinput.val())) {\n                        endassistinput.val(convertSecondsToHMS(totaltime));\n                    }\n                }\n            });\n\n            // Right click on the assistinput to enter the current time.\n            $(document).on('contextmenu', '[data-timestamp]', async function(e) {\n                e.preventDefault();\n                const currentTime = await player.getCurrentTime();\n                $(this).val(convertSecondsToHMS(currentTime));\n                $(this).trigger('change');\n            });\n\n            $(document).on('click', '.showmore', function(e) {\n                e.preventDefault();\n                $('#instructions-text .clamp-2').removeClass('clamp-2');\n            });\n\n            $(document).on('click', '.showless', function(e) {\n                e.preventDefault();\n                $('#instructions-text > div').addClass('clamp-2');\n            });\n\n            // Upload video to get draft item id.\n            $(document).on('click', '#id_upload', async function() {\n                const data = {\n                    contextid: M.cfg.contextid,\n                    id: id,\n                    usercontextid: usercontextid,\n                };\n\n                let string = await str.get_string('uploadvideo', 'mod_interactivevideo');\n                const form = new ModalForm({\n                    modalConfig: {\n                        title: string,\n                    },\n                    formClass: \"mod_interactivevideo\\\\form\\\\video_upload_form\",\n                    args: data,\n                });\n\n                form.show();\n\n                form.addEventListener(form.events.FORM_SUBMITTED, async(e) => {\n                    const url = e.detail.url;\n                    videofile.val(url);\n                    let name = e.detail.name;\n                    if ($(`[name=\"name\"]`).val() == '') {\n                        $(`[name=\"name\"]`).val(name.split('.').slice(0, -1).join('.'));\n                    }\n                    videowrapper.html('<video id=\"player\" class=\"w-100\"></video>');\n                    require(['mod_interactivevideo/player/html5video'], function(VP) {\n                        player = new VP();\n                        player.load(url, 0, null, {\n                            'showControls': true,\n                            'editform': true,\n                        });\n                    });\n                    videoinput.val(e.detail.video);\n                    videotype.val('html5video');\n                    uploadfield.hide();\n                    deletefield.show();\n                });\n            });\n\n            $(document).on('change', '#id_source', function() {\n                if ($(this).val() == 'file') {\n                    if (videoinput.val() == '' || videoinput.val() == '0') {\n                        uploadfield.show();\n                        deletefield.hide();\n                    } else {\n                        uploadfield.hide();\n                        deletefield.show();\n                    }\n                } else {\n                    uploadfield.hide();\n                    deletefield.hide();\n                }\n            });\n\n            $(document).on('click', '#id_delete', async function() {\n                const strings = await str.get_strings([\n                    {key: 'deletevideo', component: 'mod_interactivevideo'},\n                    {key: 'deletevideoconfirm', component: 'mod_interactivevideo'},\n                    {key: 'delete', component: 'mod_interactivevideo'},\n                ]);\n                try {\n                    notification.deleteCancelPromise(\n                        strings[0],\n                        strings[1],\n                        strings[2],\n                    ).then(() => {\n                        videoinput.val('');\n                        videofile.val('');\n                        videowrapper.empty().hide();\n                        uploadfield.show();\n                        deletefield.hide();\n                        return;\n                    }).catch(() => {\n                        return;\n                    });\n                } catch {\n                    notification.saveCancel(\n                        strings[0],\n                        strings[1],\n                        strings[2],\n                        function() {\n                            videoinput.val('');\n                            videofile.val('');\n                            videowrapper.empty().hide();\n                            uploadfield.show();\n                            deletefield.hide();\n                        }\n                    );\n                }\n            });\n\n            // DOM ready.\n            $(function() {\n                uploadfield.hide();\n                deletefield.hide();\n                if (videourlinput.val() != '') {\n                    videourlinput.trigger('input');\n                }\n                if (sourceinput.val() != 'url') {\n                    if (videoinput.val() != '' && videoinput.val() != '0') {\n                        uploadfield.hide();\n                        deletefield.show();\n                        const url = videofile.val();\n                        videowrapper.html('<video id=\"player\" class=\"w-100\"></video>');\n                        require(['mod_interactivevideo/player/html5video'], function(VP) {\n                            player = new VP();\n                            player.load(url, 0, null, {\n                                'showControls': true,\n                                'editform': true,\n                            });\n                        });\n                    } else {\n                        uploadfield.show();\n                        deletefield.hide();\n                    }\n                }\n                // Display warning message if the completion is not unlocked.\n                if ($('[name=completionunlocked]').val() == '0') {\n                    $('#warning').removeClass('d-none');\n                    $('[name=videourl], [name=startassist], [name=endassist]').prop('readonly', 'true');\n                    $('#fitem_id_source, #fitem_id_delete, #fitem_id_upload').hide();\n                    $('#id_upload').prop('disabled', 'true');\n                    $('#id_delete').prop('disabled', 'true');\n                }\n\n                $('#background-loading').fadeOut(300);\n\n                // Initialize the methods required by other plugins that extend this plugin.\n                let $requirejsElements = $('.requirejs');\n                if ($requirejsElements.length) {\n                    $requirejsElements.each(function() {\n                        let $this = $(this);\n                        require([$this.data('plugin')], function(Module) {\n                            let module = new Module();\n                            module.mform();\n                        });\n                    });\n                }\n            });\n\n            startassistinput.val(convertSecondsToHMS(startinput.val()));\n            endassistinput.val(convertSecondsToHMS(endinput.val()));\n\n        }\n    };\n});"],"names":["define","$","notification","ModalForm","str","id","usercontextid","videotypes","totaltime","player","videowrapper","endinput","startinput","startassistinput","endassistinput","totaltimeinput","videourlinput","sourceinput","videoinput","uploadfield","deletefield","videofile","videotype","posterimage","nameinput","convertSecondsToHMS","s","hours","Math","floor","minutes","seconds","toFixed","result","document","on","async","window","IVPLAYER","unMute","audio","addClass","show","ratio","aspectratio","css","val","title","duration","Number","text","posterImage","whenPlayerReady","strings","get_strings","key","component","after","e","preventDefault","remove","removeClass","next","currenttype","destroy","html","url","this","trim","hide","defaultLoadFunction","type","require","VP","load","includes","RegExp","exec","match","Promise","resolve","querySelector","video","createElement","src","addEventListener","checkVideo","alert","ctrlKey","metaKey","parts","split","time","currentTime","getCurrentTime","trigger","data","contextid","M","cfg","string","get_string","form","modalConfig","formClass","args","events","FORM_SUBMITTED","detail","name","slice","join","deleteCancelPromise","then","empty","catch","saveCancel","prop","fadeOut","$requirejsElements","length","each","$this","Module","mform"],"mappings":"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"}