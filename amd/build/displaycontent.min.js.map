{"version":3,"file":"displaycontent.min.js","sources":["../src/displaycontent.js"],"sourcesContent":["/* eslint-disable complexity */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Display content module\n *\n * @module     mod_interactivevideo/displaycontent\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Fragment from 'core/fragment';\nimport {dispatchEvent} from 'core/event_dispatcher';\n\n/**\n * Return main formatted content of the annotation\n * @param {Object} annotation - The annotation object\n * @param {String} [format='html'] - The format of the content, either 'html' or 'json'\n * @returns {Promise<String|Object>} - The formatted content as a string or parsed JSON object\n */\nconst renderContent = async function(annotation, format = 'html') {\n    const annotationArgs = {\n        ...annotation,\n        contextid: annotation.contextid\n    };\n    let fragment;\n    try {\n        fragment = await Fragment.loadFragment('mod_interactivevideo', 'getcontent', annotation.contextid, annotationArgs);\n    } catch (error) {\n        throw new Error(JSON.stringify(error));\n    }\n    if (format === 'html') {\n        return fragment;\n    } else {\n        return JSON.parse(fragment);\n    }\n};\n\n/**\n * Format content text\n * @param {String} text unformatted text\n * @param {Boolean} shorttext short string or text\n * @returns formatted text\n */\nconst formatText = async function(text, shorttext = false) {\n    try {\n        const response = await $.ajax({\n            url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n            type: 'POST',\n            dataType: \"text\",\n            data: {\n                text: text,\n                contextid: M.cfg.contextid,\n                action: 'format_text',\n                sesskey: M.cfg.sesskey,\n                shorttext: shorttext,\n            }\n        });\n        return response;\n    } catch (error) {\n        throw new Error('Failed to format text');\n    }\n};\n\n/**\n * Displays the content of an annotation based on the specified display options.\n *\n * @async\n * @function defaultDisplayContent\n * @param {Object} annotation - The annotation object containing details to be displayed.\n * @param {Object} player - The video player instance.\n * @returns {Promise<void>}\n *\n * @example\n * const annotation = {\n *   id: 1,\n *   displayoptions: 'popup',\n *   hascompletion: 1,\n *   xp: 10,\n *   completed: false,\n *   formattedtitle: 'Sample Annotation',\n *   prop: '{\"icon\": \"bi bi-info-circle\"}'\n * };\n * const player = videojs('my-video');\n * defaultDisplayContent(annotation, player);\n */\nconst defaultDisplayContent = async function(annotation, player) {\n    const isPlayerMode = $('body').attr('id') == 'page-mod-interactivevideo-view';\n    const isPreviewMode = annotation.previewMode;\n    const advanced = JSON.parse(annotation.advanced);\n\n    const isDarkMode = $('body').hasClass('darkmode');\n\n    // Play pop sound\n    const audio = new Audio(M.cfg.wwwroot + '/mod/interactivevideo/sounds/pop.mp3');\n    audio.play();\n\n    let displayoptions = annotation.displayoptions;\n\n    const responsiveDisplay = (displayoptions) => {\n        if (displayoptions == 'side') {\n            return displayoptions;\n        }\n\n        // If the theme is mobile, display the message as a popup.\n        if ($('body').hasClass('mobiletheme') && displayoptions == 'inline') {\n            displayoptions = 'popup';\n        }\n\n        if ($('body').hasClass('embed-mode')) {\n            // Check the size of the body. If it is less than 800px, display the message as inline.\n            if ($(window).width() < 1000 || $(window).height() < 500) {\n                displayoptions = 'inline';\n            } else {\n                displayoptions = displayoptions == 'inline' ? 'inline' : 'popup';\n            }\n        }\n\n        // If the wrapper is in fullscreen mode, display the message inline (on top of the video).\n        if ($('#wrapper').hasClass('fullscreen')) {\n            displayoptions = 'inline';\n        }\n        return displayoptions;\n    };\n\n    displayoptions = responsiveDisplay(displayoptions);\n\n    if (advanced.advdismissible == 0 && annotation.completed == false && annotation.hascompletion == 1\n        && isPlayerMode && !isPreviewMode) {\n        $('#controller').addClass('completion-required');\n        if (displayoptions == 'side' || displayoptions == 'bottom') {\n            $('#video-wrapper').addClass('completion-required');\n        }\n        if (displayoptions == 'side') {\n            $('.sidebar-nav-item').addClass('completion-required');\n        }\n    }\n\n    // Add completion button if the annotation has completion criteria.\n    let completionbutton = \"\";\n    // Display the xp badge conditionally.\n    if (annotation.hascompletion == 1 && annotation.xp > 0) {\n        const earned = annotation.earned == annotation.xp ? annotation.earned : annotation.earned + '/' + annotation.xp;\n        completionbutton += `<span class=\"badge ${annotation.completed ? 'alert-success' : 'badge-secondary'} mr-2\">\n        ${annotation.completed ? earned : Number(annotation.xp)} XP</span>`;\n    }\n    // Display the completion button conditionally.\n    if (annotation.hascompletion == 1 && annotation.completed) {\n        completionbutton += `<button id=\"completiontoggle\" class=\"btn btn-flex text-truncate mark-undone btn-success\n         btn-sm border-0\"\n             data-id=\"${annotation.id}\"><i class=\"bi bi-check2\"></i>\n             <span class=\"ml-2 d-none d-sm-block\">\n             ${M.util.get_string('completionmarkincomplete', 'mod_interactivevideo')}</span></button>`;\n    } else if (annotation.hascompletion == 1 && annotation.completed == false) {\n        completionbutton += `<button id=\"completiontoggle\" class=\"btn btn-flex text-truncate mark-done btn-secondary btn-sm\n         border-0\"\n             data-id=\"${annotation.id}\"><i class=\"bi bi-circle\"></i>\n             <span class=\"ml-2 d-none d-sm-block\">\n             ${M.util.get_string('completionmarkcomplete', 'mod_interactivevideo')}</span></button>`;\n    }\n\n    // Append refresh button after the completion button.\n    if (isPlayerMode && !isPreviewMode) {\n        completionbutton += `<button class=\"btn btn-flex btn-secondary btn-sm ml-2 rotatez-360 border-0\"\n         data-id=\"${annotation.id}\" id=\"refresh\">\n        <i class=\"bi bi-arrow-repeat\"></i></button>`;\n    } else {\n        completionbutton = ``;\n    }\n\n    // Message title.\n    let prop = JSON.parse(annotation.prop);\n    let messageTitle = `<h5 class=\"modal-title text-truncate mb-0\">\n    <i class=\"${prop.icon} mr-2 d-none d-md-inline\"></i><span>${annotation.formattedtitle}</span></h5>\n                            <div class=\"btns d-flex align-items-center\">\n                            ${completionbutton}\n                            <button data-id=\"${annotation.id}\"\n                             class=\"btn btn-flex mx-2 p-0 border-0 interaction-dismiss\" id=\"close-${annotation.id}\"\n                             aria-label=\"Close\">\n                            <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                            </button>\n                            </div>`;\n\n    // Hide existing modal if it shows.\n    $('#annotation-modal').modal('hide');\n\n    // Handle annotation close event:: when user click on the close button of the annotation.\n    let toast;\n    $(document).off('click', `#close-${annotation.id}`).on('click', `#close-${annotation.id}`, async function(e) {\n        e.preventDefault();\n        const anno = window.IVANNO ? window.IVANNO.find(anno => anno.id == annotation.id) : null;\n        // Check if dimiss allowed.\n        if (isPlayerMode && !isPreviewMode) {\n            if (advanced.advdismissible == 0 && anno.completed == false && anno.hascompletion == 1) {\n                if (!toast) {\n                    toast = await import('core/toast');\n                }\n                toast.add(M.util.get_string('dismissnotallowedbeforecompletion', 'mod_interactivevideo'), {\n                    type: 'warning',\n                    delay: 3000\n                });\n                return;\n            }\n\n            const isEnded = await player.isEnded();\n            const currentTime = await player.getCurrentTime();\n            if (!isEnded || currentTime < annotation.end) {\n                if (anno && (anno.completed == true || advanced.advskippable != 0)) { // Do not auto resume if not skippable.\n                    player.play();\n                }\n            }\n        }\n\n        if (displayoptions == 'side') {\n            $('body').removeClass('hassidebar');\n            $('#annotation-sidebar').addClass('hide');\n            if (isPlayerMode && !isPreviewMode) {\n                $(this).closest(\"#message\").removeClass('active');\n                dispatchEvent('interactionclose', {\n                    annotation: annotation,\n                });\n            }\n            return;\n        }\n        $(this).closest(\"#annotation-modal\").modal('hide');\n        const targetMessage = $(this).closest(\"#message\");\n        targetMessage.removeClass('active');\n        targetMessage.addClass('bottom-0');\n        targetMessage.remove();\n        if (isPlayerMode && !isPreviewMode) {\n            setTimeout(function() {\n                dispatchEvent('interactionclose', {\n                    annotation: annotation,\n                });\n            }, 100);\n        }\n    });\n\n    const handlePopupDisplay = (annotation, messageTitle) => {\n        let modal = `<div class=\"modal fade ${$('body').hasClass('iframe') ? 'modal-fullscreen' : ''}\"\n             id=\"annotation-modal\" role=\"dialog\" aria-labelledby=\"annotation-modal\"\n         aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n         <div id=\"message\" data-id=\"${annotation.id}\" data-placement=\"popup\"\n          class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable ${annotation.type} active\" role=\"document\">\n                <div class=\"modal-content rounded-lg\">\n                    <div class=\"modal-header d-flex align-items-center shadow-sm pr-0\" id=\"title\">\n                        ${messageTitle}\n                    </div>\n                    <div class=\"modal-body\" id=\"content\"></div>\n                    </div>\n                </div>\n        </div>`;\n        $('#wrapper').append(modal);\n        $('#annotation-modal').modal('show');\n\n        $('#annotation-modal').on('hide.bs.modal', function() {\n            $('#annotation-modal').remove();\n        });\n\n        $('#annotation-modal').on('shown.bs.modal', function() {\n            $('#annotation-modal .modal-body').fadeIn(300);\n            return Promise.resolve();\n        });\n    };\n\n    const handleInlineDisplay = (annotation, messageTitle) => {\n        $('#video-wrapper').append(`<div id=\"message\" style=\"z-index:105;top:100%\" data-placement=\"inline\"\n         data-id=\"${annotation.id}\" class=\"${annotation.type} active\">\n        <div id=\"title\" class=\"modal-header shadow-sm pr-0 rounded-0\">${messageTitle}</div><div class=\"modal-body\" id=\"content\">\n        </div></div>`);\n        $(`#message[data-id='${annotation.id}']`).animate({\n            top: '0',\n        }, 300, 'linear', function() {\n            return Promise.resolve();\n        });\n    };\n\n    const handleBottomDisplay = (annotation, messageTitle, isDarkMode) => {\n        $('#annotation-content').empty();\n        $('#annotation-content').append(`<div id=\"message\" class=\"active fade show mt-3 ${!isDarkMode ? 'border' : ''}\n                 rounded-lg bg-white ${annotation.type}\" data-placement=\"bottom\" data-id=\"${annotation.id}\">\n                 <div id='title' class='modal-header shadow-sm pr-0'>${messageTitle}</div>\n                <div class=\"modal-body\" id=\"content\"></div></div>`);\n        $('html, body, #page.drawers, .modal-body').animate({\n            scrollTop: $(\"#annotation-content\").offset().top\n        }, 1000, 'swing', function() {\n            return Promise.resolve();\n        });\n    };\n\n    const handleSideDisplay = (annotation, messageTitle) => {\n        $('body').addClass('hassidebar');\n        // Make sure all sidebar are hidden.\n        $('#wrapper .iv-sidebar').addClass('hide');\n        // Create sidebar if it does not exist.\n        if ($('#wrapper #annotation-sidebar').length == 0) {\n            $('#wrapper').append(`<div id=\"annotation-sidebar\" class=\"iv-sidebar p-0 hide\">\n                <div id=\"sidebar-nav\" class=\"d-flex w-100\"></div>\n                <div id=\"sidebar-content\" class=\"p-0\"></div>\n                </div>`);\n            // Initialize resizable.\n            $('#annotation-sidebar').resizable({\n                handles: 'w',\n                minWidth: 475,\n                container: 'body',\n                start: function() {\n                    $(this).css('left', 'auto');\n                    $(this).find('.ui-resizable-handle.ui-resizable-w').css({\n                        'width': '100%',\n                        'left': '-50%'\n                    });\n                    $(this).addClass('no-pointer-event');\n                },\n                resize: function(event, ui) {\n                    if (ui.position.left < 0) {\n                        ui.position.left = 0;\n                        ui.position.width = '100%';\n                    }\n                },\n                stop: function() {\n                    $(this).css('left', 'auto');\n                    $(this).find('.ui-resizable-handle.ui-resizable-w').css({\n                        'width': '7px',\n                        'left': '-3px'\n                    });\n                    $(this).removeClass('no-pointer-event');\n                }\n            });\n            // Switch between messages.\n            $(document).on('click', '#sidebar-nav .sidebar-nav-item', async function() {\n                const current = $(`#sidebar-nav .sidebar-nav-item.active`).data('id');\n                if (current) {\n                    $(`#sidebar-content #message[data-id='${current}']`).removeClass('active');\n                    dispatchEvent('interactionclose', {\n                        annotation: {\n                            id: current\n                        }\n                    });\n                }\n                const target = $(this).data('id');\n                $(this).addClass('active').siblings().removeClass('active');\n                $('#sidebar-content #message').fadeOut(300);\n                $(`#sidebar-content #message[data-id='${target}']`).fadeIn(300).addClass('active');\n                const isPaused = await player.isPaused();\n                if (isPaused) {\n                    dispatchEvent('interactionrun', {\n                        annotation: {\n                            id: target\n                        }\n                    });\n                }\n\n            });\n        }\n        // Add annotation toggle button if it does not exist.\n        if (isPlayerMode || isPreviewMode) {\n            if ($('#wrapper #toolbar #annotation-toggle').length == 0) {\n                $('#wrapper #toolbar')\n                    .append(`<button id=\"annotation-toggle\" class=\"btn btn-sm border-0\">\n                    <i class=\"bi bi-chevron-left\"></i></button>`);\n            }\n        }\n        // Show the sidebar.\n        $('#annotation-sidebar').removeClass('hide');\n        // Replace the navigation item if it exists.\n        if ($(`#sidebar-nav .sidebar-nav-item[data-id='${annotation.id}']`).length == 0) {\n            // Add a navigation item.\n            let clss = '';\n            if (annotation.hascompletion == 1 && annotation.completed == true) {\n                clss += ' completed';\n            }\n            if (annotation.hascompletion != 1) {\n                clss += ' no-completion';\n            }\n\n            $('#annotation-sidebar #sidebar-nav').append(`<div class=\"sidebar-nav-item active w-100 ${clss}\" data-toggle=\"tooltip\"\n            data-html=\"true\" title=\"<i class='${prop.icon} mr-2'></i>${annotation.formattedtitle}\"\n            data-id=\"${annotation.id}\" data-timestamp=\"${annotation.timestamp}\"></div>`);\n\n            // Sort the navigation items.\n            $('#annotation-sidebar #sidebar-nav .sidebar-nav-item').sort(function(a, b) {\n                return $(a).data('timestamp') - $(b).data('timestamp');\n            }).appendTo('#annotation-sidebar #sidebar-nav');\n        }\n        // Hide other messages on the sidebar.\n        $('#annotation-sidebar #message').fadeOut(300);\n        $('#annotation-sidebar #sidebar-nav .sidebar-nav-item:not([data-id=\"' + annotation.id + '\"])').removeClass('active');\n        if ($('#annotation-sidebar #message.active').length > 0) {\n            dispatchEvent('interactionclose', {\n                annotation: {\n                    id: $(`#annotation-sidebar #message.active`).data('id')\n                }\n            });\n        }\n        $(`#annotation-sidebar #message:not([data-id='${annotation.id}'])`).removeClass('active');\n        // Append the message to the sidebar.\n        $('#annotation-sidebar #sidebar-content').append(`<div id=\"message\" data-placement=\"side\"\n                    data-id=\"${annotation.id}\" class=\"${annotation.type} sticky active\">\n                    <div id=\"title\" class=\"modal-header shadow-sm pr-0\">${messageTitle}</div>\n                    <div class=\"modal-body\" id=\"content\"></div>\n                    </div>`);\n    };\n\n    switch (displayoptions) {\n        case 'popup':\n            handlePopupDisplay(annotation, messageTitle);\n            break;\n        case 'inline':\n            handleInlineDisplay(annotation, messageTitle);\n            break;\n        case 'bottom':\n            handleBottomDisplay(annotation, messageTitle, isDarkMode);\n            break;\n        case 'side':\n            handleSideDisplay(annotation, messageTitle, isDarkMode);\n            break;\n    }\n};\n\nexport {renderContent, defaultDisplayContent, formatText};\n"],"names":["async","annotation","format","annotationArgs","contextid","fragment","Fragment","loadFragment","error","Error","JSON","stringify","parse","text","shorttext","$","ajax","url","M","cfg","wwwroot","type","dataType","data","action","sesskey","player","isPlayerMode","attr","isPreviewMode","previewMode","advanced","isDarkMode","hasClass","Audio","play","displayoptions","window","width","height","responsiveDisplay","advdismissible","completed","hascompletion","addClass","completionbutton","xp","earned","Number","id","util","get_string","toast","prop","messageTitle","icon","formattedtitle","modal","document","off","on","e","preventDefault","anno","IVANNO","find","add","delay","isEnded","currentTime","getCurrentTime","end","advskippable","removeClass","this","closest","targetMessage","remove","setTimeout","handleSideDisplay","length","append","resizable","handles","minWidth","container","start","css","resize","event","ui","position","left","stop","current","target","siblings","fadeOut","fadeIn","isPaused","clss","timestamp","sort","a","b","appendTo","Promise","resolve","handlePopupDisplay","animate","top","handleInlineDisplay","empty","scrollTop","offset","handleBottomDisplay"],"mappings":"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"}