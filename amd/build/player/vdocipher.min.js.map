{"version":3,"file":"vdocipher.min.js","sources":["../../src/player/vdocipher.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * VdoCipher Player class\n *\n * @module     mod_interactivevideo/player/vdocipher\n * @copyright  2025 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport allowAutoplay from 'mod_interactivevideo/player/checkautoplay';\n\nlet player = {};\nclass VdoCipher {\n    /**\n     * Creates an instance of the Dyntube player.\n     *\n     * @constructor\n     */\n    constructor() {\n        this.type = 'vdocipher';\n        this.frequency = 0.25;\n        this.useAnimationFrame = false;\n        this.support = {\n            playbackrate: true,\n            quality: true,\n            password: false,\n        };\n        this.live = false; // Added flag for live video support\n    }\n    /**\n     * Get information about the video\n     * @param {string} url\n     * @param {string} node\n     * @return {Promise<Object>} A promise that resolves to an object containing information about the video.\n     */\n    async getInfo(url, node) {\n        this.node = node;\n        let self = this;\n\n        url = url.split('|')[0];\n\n        let regex = /(?:https?:\\/\\/)?(?:www\\.)?vdocipher\\.com\\/dashboard\\/video\\/(?:embed\\/|)([a-zA-Z0-9_-]+)/i;\n        var match = regex.exec(url);\n        var videoId = match ? match[1] : null;\n        this.videoId = videoId;\n\n        const getData = async() => {\n            const data = await $.ajax({\n                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                type: 'POST',\n                dataType: 'text',\n                data: {\n                    action: 'get_vdocipher',\n                    sesskey: M.cfg.sesskey,\n                    videoid: videoId,\n                    contextid: M.cfg.contextid,\n                    info: 'otp',\n                },\n            });\n            return data;\n        };\n\n        let data = await getData();\n        try {\n            data = JSON.parse(data);\n        } catch {\n            data = {error: true};\n        }\n\n        if (data.error) {\n            dispatchEvent('iv:playerError', {error: data});\n            return;\n        }\n\n        self.otp = data.otp;\n        self.playbackInfo = data.playbackInfo;\n\n        // Get video info.\n        const getVideoInfo = async() => {\n            const data = await $.ajax({\n                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                type: 'POST',\n                dataType: 'text',\n                data: {\n                    action: 'get_vdocipher',\n                    sesskey: M.cfg.sesskey,\n                    videoid: videoId,\n                    contextid: M.cfg.contextid,\n                    info: 'info',\n                },\n            });\n            return data;\n        };\n\n        let info = await getVideoInfo();\n        try {\n            info = JSON.parse(info);\n        } catch {\n            info = {error: true};\n        }\n        if (info.error) {\n            dispatchEvent('iv:playerError', {error: info});\n            return;\n        }\n        self.title = info.title;\n        self.posterImage = info.posters[0] ? info.posters[0].posterUrl : info.poster;\n        self.aspectratio = info.posters[0].width / info.posters[0].height;\n        self.duration = info.length; // Duration in seconds.\n        self.iframesrc = `https://player.vdocipher.com/v2/?otp=${self.otp}&playbackInfo=${self.playbackInfo}`;\n        // Load the Dyntube API script.\n        var tag = document.createElement('script');\n        tag.src = \"https://player.vdocipher.com/v2/api.js\";\n        tag.async = true;\n        tag.as = \"script\";\n        tag.rel = \"preload\";\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n        $(`#${node}`).replaceWith(`\n            <iframe id=\"${node}\"\n            src=\"${self.iframesrc}`\n            + `&controls=on\"\n             frameborder=0 allowFullScreen=\"true\" allow=\"encrypted-media\"></iframe>`);\n\n        let iframe = document.getElementById(node);\n        /**\n         * Waits for the Dyntube API to be available before initializing the player.\n         * @param {Function} resolve - The function to call when Dyntube is ready.\n         */\n        function waitForVdoPlayer(resolve) {\n            if (window.VdoPlayer) {\n                player[node] = window.VdoPlayer.getInstance(iframe);\n                resolve();\n            } else {\n                window.requestAnimationFrame(() => waitForVdoPlayer(resolve));\n            }\n        }\n\n        await new Promise(waitForVdoPlayer);\n\n        // eslint-disable-next-line consistent-return\n        return new Promise((resolve) => {\n            player[node].video.addEventListener('loadedmetadata', async function() {\n                resolve({\n                    duration: self.duration,\n                    title: self.title,\n                    posterImage: self.posterImage,\n                });\n            });\n        });\n    }\n    /**\n     * Load the video\n     * @param {string} url\n     * @param {number} start\n     * @param {number} end\n     * @param {object} opts\n     * @param {boolean} reloaded\n     * @return {Promise<Boolean>}\n     */\n    async load(url, start, end, opts = {}, reloaded = false) {\n        const showControls = opts.showControls || false;\n        const node = opts.node || 'player';\n        this.node = node;\n        this.url = url;\n        // Hide the player first.\n        this.allowAutoplay = await allowAutoplay(document.getElementById(node));\n        if (!this.allowAutoplay) {\n            dispatchEvent('iv:autoplayBlocked', {\n                requireVideoBlock: true,\n            });\n        }\n\n        var self = this;\n        this.start = start;\n        this.end = end;\n\n        // URL: https://www.vdocipher.com/dashboard/video/{videoId}/tab/settings\n        // URL: https://www.vdocipher.com/dashboard/video/embed/{videoId}\n        if (opts.editform) {\n            url = url.split('|')[0];\n\n            let regex = /(?:https?:\\/\\/)?(?:www\\.)?vdocipher\\.com\\/dashboard\\/video\\/(?:embed\\/|)([a-zA-Z0-9_-]+)/i;\n            var match = regex.exec(url);\n            var videoId = match ? match[1] : null;\n            this.videoId = videoId;\n\n            const getData = async() => {\n                const data = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    type: 'POST',\n                    dataType: 'text',\n                    data: {\n                        action: 'get_vdocipher',\n                        sesskey: M.cfg.sesskey,\n                        videoid: videoId,\n                        contextid: M.cfg.contextid,\n                        info: 'otp',\n                    },\n                });\n                return data;\n            };\n\n            let data = await getData();\n            try {\n                data = JSON.parse(data);\n            } catch {\n                data = {error: true};\n            }\n\n            if (data.error) {\n                dispatchEvent('iv:playerError', {error: data});\n                return;\n            }\n\n            self.otp = data.otp;\n            self.playbackInfo = data.playbackInfo;\n\n            // Get video info.\n            const getVideoInfo = async() => {\n                const data = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    type: 'POST',\n                    dataType: 'text',\n                    data: {\n                        action: 'get_vdocipher',\n                        sesskey: M.cfg.sesskey,\n                        videoid: videoId,\n                        contextid: M.cfg.contextid,\n                        info: 'info',\n                    },\n                });\n                return data;\n            };\n\n            let info = await getVideoInfo();\n            try {\n                info = JSON.parse(info);\n            } catch {\n                info = {error: true};\n            }\n            if (info.error) {\n                dispatchEvent('iv:playerError', {error: info});\n                return;\n            }\n            self.title = info.title;\n            self.posterImage = info.posters[0] ? info.posters[0].posterUrl : info.poster;\n            self.aspectratio = info.posters[0].width / info.posters[0].height;\n            self.duration = info.length; // Duration in seconds.\n            self.iframesrc = `https://player.vdocipher.com/v2/?otp=${self.otp}&playbackInfo=${self.playbackInfo}`;\n        } else {\n            self.iframesrc = url.split('|')[1];\n            let params = new URLSearchParams(self.iframesrc);\n            self.otp = params.get('otp');\n            self.playbackInfo = params.get('playbackInfo');\n        }\n\n        // Load the Dyntube API script.\n        var tag = document.createElement('script');\n        tag.src = \"https://player.vdocipher.com/v2/api.js\";\n        tag.async = true;\n        tag.as = \"script\";\n        tag.rel = \"preload\";\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n        $(`#${node}`).replaceWith(`\n            <iframe id=\"${node}\"\n            src=\"${self.iframesrc}`\n            + `&controls=${showControls ? \"on\" : \"off\"}\"\n             frameborder=0 allowFullScreen=\"true\" allow=\"encrypted-media\"></iframe>`);\n\n        let iframe = document.getElementById(node);\n        /**\n         * Waits for the Dyntube API to be available before initializing the player.\n         * @param {Function} resolve - The function to call when Dyntube is ready.\n         */\n        function waitForVdoPlayer(resolve) {\n            if (window.VdoPlayer) {\n                player[node] = window.VdoPlayer.getInstance(iframe);\n                resolve();\n            } else {\n                window.requestAnimationFrame(() => waitForVdoPlayer(resolve));\n            }\n        }\n\n        await new Promise(waitForVdoPlayer);\n\n        // Disable picture-in-picture.\n        player[node].video.setAttribute('disablePictureInPicture', '');\n\n        player[node].video.addEventListener('loadedmetadata', async function() {\n            self.aspectratio = self.ratio();\n            if (isNaN(self.aspectratio)) {\n                self.aspectratio = 16 / 9;\n            }\n            let totaltime = Number((player[node].video.duration).toFixed(2)) - self.frequency;\n            end = !end ? totaltime : Math.min(end, totaltime);\n            end = Number(end.toFixed(2));\n            self.end = end;\n            self.totaltime = totaltime;\n            self.duration = self.end - self.start;\n            player[node].video.currentTime = self.start;\n\n            let captions = await player[node].api.getCaptionLanguages();\n            captions = captions.languages || [];\n            let tracks = [];\n            if (captions && captions.length) {\n                captions.forEach((track) => {\n                    tracks.push({\n                        label: track.label,\n                        code: track.lang\n                    });\n                });\n            }\n\n            player[node].api.hideCaptions();\n            dispatchEvent('iv:playerLoaded', {\n                tracks,\n                reloaded\n            });\n            dispatchEvent('iv:playerReady', null, document.getElementById(node));\n            if (opts.editform && !self.url.includes('|')) {\n                $('#id_videourl').val(self.url + '|' + self.iframesrc);\n            }\n\n            // Remove the start screen on chrome.\n            if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n                setTimeout(() => {\n                    $('.video-block, #video-block').addClass('no-pointer');\n                }, 2000);\n\n                $('#start-screen').remove();\n            }\n        });\n\n        player[node].video.addEventListener('pause', function() {\n            self.paused = true;\n            dispatchEvent('iv:playerPaused');\n        });\n\n        player[node].video.addEventListener('play', function() {\n\n            self.paused = false;\n            dispatchEvent('iv:playerPlay');\n            $('.video-block, #video-block').removeClass('no-pointer');\n        });\n\n        player[node].video.addEventListener('timeupdate', function() {\n            if (self.paused) {\n                return;\n            }\n            if (player[node].video.currentTime < self.start) {\n                player[node].video.currentTime = self.start;\n            }\n            if (player[node].video.currentTime >= self.end + self.frequency && !self.live) {\n                player[node].video.currentTime = self.end - self.frequency;\n            }\n            dispatchEvent('iv:playerPlaying');\n            if (self.live) {\n                return;\n            }\n            if (self.ended) {\n                self.ended = false;\n            } else {\n                if (!self.ended && player[node].video.currentTime >= self.end) {\n                    self.ended = true;\n                    self.paused = true;\n                    player[node].video.pause();\n                    dispatchEvent('iv:playerEnded');\n                }\n            }\n        });\n\n        player[node].video.addEventListener('error', function(e) {\n            dispatchEvent('iv:playerError', {error: e});\n        });\n\n        player[node].video.addEventListener('ratechange', function() {\n            dispatchEvent('iv:playerRateChange', {rate: player[node].video.playbackRate});\n        });\n\n        player[node].video.addEventListener('waiting', function() {\n            dispatchEvent('iv:playerBuffering');\n        });\n\n        // Volume change event.\n        player[node].video.addEventListener('volumechange', function() {\n            dispatchEvent('iv:playerVolumeChange', {volume: player[node].video.volume});\n        });\n\n        // Quality change event.\n        player[node].api.addEventListener('videoQualityChange', function(quality) {\n            dispatchEvent('iv:playerQualityChange', {quality: quality});\n        });\n    }\n    /**\n     * Play the video\n     * @return {Void}\n     */\n    play() {\n        if (!player[this.node]) {\n            return;\n        }\n        try {\n            player[this.node].video.play();\n        } catch (e) {\n            player[this.node].api.loadVideo(this.otp, this.playbackInfo);\n            player[this.node].video.play();\n        }\n        this.paused = false;\n    }\n\n    /**\n     * Pause the video\n     * @return {Void}\n     */\n    pause() {\n        if (!player[this.node]) {\n            return;\n        }\n        player[this.node].video.pause();\n        this.paused = true;\n    }\n    /**\n     * Stop the video\n     * @param {Number} starttime\n     * @return {Void}\n     */\n    stop(starttime) {\n        if (!player[this.node]) {\n            return;\n        }\n        player[this.node].video.currentTime = starttime || this.start;\n        player[this.node].video.pause();\n    }\n    /**\n     * Seeks the video to a specified time.\n     *\n     * @param {number} time - The time in seconds to seek to.\n     * @returns {boolean} Returns true when the seek operation is initiated.\n     */\n    seek(time) {\n        if (!player[this.node]) {\n            return time;\n        }\n        let currentTime = this.getCurrentTime();\n        dispatchEvent('iv:playerSeekStart', {time: currentTime});\n        this.ended = false;\n        player[this.node].video.currentTime = time;\n        dispatchEvent('iv:playerSeek', {time});\n        return true;\n    }\n    /**\n     * Get the current time of the video\n     * @return {Number}\n     */\n    getCurrentTime() {\n        if (!player[this.node]) {\n            return 0;\n        }\n        return player[this.node].video.currentTime;\n    }\n    /**\n     * Get the duration of the video\n     * @return {Number}\n     */\n    getDuration() {\n        if (!player[this.node]) {\n            return 0;\n        }\n        return player[this.node].video.duration;\n    }\n    /**\n     * Check if the video is paused\n     * @return {Boolean}\n     */\n    isPaused() {\n        if (!player[this.node]) {\n            return true;\n        }\n        if (this.paused) {\n            return true;\n        }\n        return player[this.node].video.paused;\n    }\n    /**\n     * Check if the video is playing\n     * @return {Boolean}\n     */\n    isPlaying() {\n        if (!player[this.node]) {\n            return false;\n        }\n        if (this.paused) {\n            return false;\n        }\n        return !player[this.node].video.paused;\n    }\n    /**\n     * Check if the video is ended\n     * @return {Boolean}\n     */\n    isEnded() {\n        if (!player[this.node]) {\n            return false;\n        }\n        return player[this.node].video.ended || player[this.node].video.currentTime >= this.end;\n    }\n    /**\n     * Get the aspect ratio of the video\n     * @return {Number}\n     */\n    ratio() {\n        if (!player[this.node]) {\n            return 16 / 9;\n        }\n        return player[this.node].video.videoWidth / player[this.node].video.videoHeight;\n    }\n    /**\n     * Destroy the player\n     * @return {Void}\n     */\n    destroy() {\n        if (!player[this.node]) {\n            return;\n        }\n        player[this.node] = null;\n        $(`#${this.node}`).remove();\n        dispatchEvent('iv:playerDestroyed');\n    }\n    /**\n     * Get the state of the player\n     * @return {Number}\n     */\n    getState() {\n        if (!player[this.node]) {\n            return 0;\n        }\n        return player[this.node].video.paused ? 'paused' : 'playing';\n    }\n    /**\n     * Set playback rate of the video\n     * @param {Number} rate\n     */\n    setRate(rate) {\n        if (!player[this.node]) {\n            return 1;\n        }\n        player[this.node].video.playbackRate = rate;\n        return rate;\n    }\n    /**\n     * Mute the video\n     */\n    mute() {\n        if (!player[this.node]) {\n            return;\n        }\n        player[this.node].video.muted = true;\n        player[this.node].video.volume = 0;\n        dispatchEvent('iv:playerVolumeChange', {volume: 0});\n    }\n    /**\n     * Unmute the video\n     */\n    unMute() {\n        if (!player[this.node]) {\n            return;\n        }\n        player[this.node].video.muted = false;\n        player[this.node].video.volume = 1;\n        dispatchEvent('iv:playerVolumeChange', {volume: 1});\n    }\n\n    isMuted() {\n        if (!player[this.node]) {\n            return false;\n        }\n        return player[this.node].video.muted;\n    }\n    /**\n     * Get the original player object\n     */\n    originalPlayer() {\n        return player[this.node];\n    }\n\n    setQuality(quality) {\n        if (!player[this.node]) {\n            return quality;\n        }\n        player[this.node].api.setVideoQuality(quality);\n        return quality;\n    }\n\n    async getQualities() {\n        if (!player[this.node]) {\n            return null;\n        }\n        let qualities = await player[this.node].api.getVideoQualities();\n        let qualitiescode = qualities.qualities.map(x => x.id);\n        let qualitiesLabel = qualities.qualities.map(x => x.label);\n        let currentQuality = qualities.qualities.find(x => x.active) ?\n            qualities.qualities.find(x => x.active).id : null;\n        return {\n            qualities: qualitiescode,\n            qualitiesLabel: qualitiesLabel,\n            currentQuality: currentQuality,\n        };\n    }\n\n    setCaption(track) {\n        if (!player[this.node]) {\n            return track;\n        }\n        if (track === '') {\n            player[this.node].api.hideCaptions();\n            return track;\n        }\n        player[this.node].api.setCaptionLanguage(track);\n        return track;\n    }\n\n\n}\n\nexport default VdoCipher;"],"names":["player","constructor","type","frequency","useAnimationFrame","support","playbackrate","quality","password","live","url","node","self","this","split","match","exec","videoId","data","async","$","ajax","M","cfg","wwwroot","dataType","action","sesskey","videoid","contextid","info","getData","JSON","parse","error","otp","playbackInfo","getVideoInfo","title","posterImage","posters","posterUrl","poster","aspectratio","width","height","duration","length","iframesrc","tag","document","createElement","src","as","rel","firstScriptTag","getElementsByTagName","parentNode","insertBefore","replaceWith","iframe","getElementById","Promise","waitForVdoPlayer","resolve","window","VdoPlayer","getInstance","requestAnimationFrame","video","addEventListener","start","end","opts","reloaded","showControls","allowAutoplay","requireVideoBlock","editform","params","URLSearchParams","get","setAttribute","ratio","isNaN","totaltime","Number","toFixed","Math","min","currentTime","captions","api","getCaptionLanguages","languages","tracks","forEach","track","push","label","code","lang","hideCaptions","includes","val","navigator","userAgent","toLowerCase","indexOf","setTimeout","addClass","remove","paused","removeClass","ended","pause","e","rate","playbackRate","volume","play","loadVideo","stop","starttime","seek","time","getCurrentTime","getDuration","isPaused","isPlaying","isEnded","videoWidth","videoHeight","destroy","getState","setRate","mute","muted","unMute","isMuted","originalPlayer","setQuality","setVideoQuality","qualities","getVideoQualities","map","x","id","qualitiesLabel","currentQuality","find","active","setCaption","setCaptionLanguage"],"mappings":"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"}