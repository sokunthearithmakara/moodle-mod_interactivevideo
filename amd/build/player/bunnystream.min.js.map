{"version":3,"file":"bunnystream.min.js","sources":["../../src/player/bunnystream.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Bunny Stream Player class\n *\n * @module     mod_interactivevideo/player/bunnystream\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport $ from 'jquery';\nimport allowAutoplay from 'mod_interactivevideo/player/checkautoplay';\n\nvar player = {};\nclass BunnyStream {\n    /**\n     * Constructor of the bunnystream player.\n     */\n    constructor() {\n        this.useAnimationFrame = false;\n        this.type = 'bunnystream';\n        this.frequency = 0.25;\n        this.support = {\n            playbackrate: false,\n            quality: false,\n        };\n    }\n\n    async getInfo(url, node) {\n        this.node = node;\n        let self = this;\n\n        // URL: https://iframe.mediadelivery.net/embed/501013/66a7eb77-5878-4fde-8dc0-926a3c7f51bf\n        // URL: https://iframe.mediadelivery.net/watch/501013/66a7eb77-5878-4fde-8dc0-926a3c7f51bf\n        let regex = /https?:\\/\\/iframe\\.mediadelivery\\.net\\/(?:embed|watch)\\/\\d+\\/([a-zA-Z0-9-]+)/i;\n        var match = regex.exec(url);\n        var videoId = match ? match[1] : null;\n        this.videoId = videoId;\n\n        // Get data from oembed.\n        let oembedUrl = `https://video.bunnycdn.com/OEmbed?url=${encodeURIComponent(url)}`;\n\n        const getdata = await fetch(oembedUrl);\n        if (!getdata.ok) {\n            dispatchEvent('iv:playerError', {error: getdata});\n            return;\n        }\n        const getdatajson = await getdata.json();\n        if (getdatajson.error) {\n            dispatchEvent('iv:playerError', {error: getdatajson});\n            return;\n        }\n        self.title = getdatajson.title;\n        self.posterImage = getdatajson.thumbnail_url;\n\n        let $parent = $(`#${node}`).parent();\n        $(`#${node}`)\n            .replaceWith(getdatajson.html);\n        $parent.find('iframe').attr('id', node);\n        player[node] = new window.playerjs.Player(document.getElementById(node));\n\n        // eslint-disable-next-line consistent-return\n        return new Promise((resolve) => {\n            player[node].on('ready', () => {\n                player[node].getDuration(duration => {\n                    resolve({\n                        duration: duration,\n                        title: self.title,\n                        posterImage: self.posterImage,\n                    });\n                });\n\n            });\n        });\n    }\n    /**\n     * Creates an instance of the bunnystream player.\n     *\n     * @constructor\n     * @param {string} url - The URL of the bunnystream video.\n     * @param {number} start - The start time of the video in seconds.\n     * @param {number} end - The end time of the video in seconds.\n     * @param {object} opts - The options for the player.\n     */\n    async load(url, start, end, opts = {}) {\n            const node = opts.node || 'player';\n            this.node = node;\n            this.allowAutoplay = await allowAutoplay(document.getElementById(node));\n            if (!this.allowAutoplay) {\n            dispatchEvent('iv:autoplayBlocked', {\n                requireVideoBlock: true,\n            });\n        }\n\n        let self = this;\n\n        // URL: https://iframe.mediadelivery.net/embed/501013/66a7eb77-5878-4fde-8dc0-926a3c7f51bf\n        // URL: https://iframe.mediadelivery.net/watch/501013/66a7eb77-5878-4fde-8dc0-926a3c7f51bf\n        let regex = /https?:\\/\\/iframe\\.mediadelivery\\.net\\/(?:embed|watch|play)\\/\\d+\\/([a-zA-Z0-9-]+)/i;\n        var match = regex.exec(url);\n        var videoId = match ? match[1] : null;\n        this.videoId = videoId;\n\n        // Get data from oembed.\n        let oembedUrl = `https://video.bunnycdn.com/OEmbed?url=${encodeURIComponent(url)}`;\n\n        const getdata = await fetch(oembedUrl);\n        if (!getdata.ok) {\n            dispatchEvent('iv:playerError', {error: getdata});\n            return;\n        }\n        const getdatajson = await getdata.json();\n        if (getdatajson.error) {\n            dispatchEvent('iv:playerError', {error: getdatajson});\n            return;\n        }\n        self.title = getdatajson.title;\n        self.posterImage = getdatajson.thumbnail_url;\n        self.aspectratio = getdatajson.width / getdatajson.height;\n\n        let $parent = $(`#${node}`).parent();\n        $(`#${node}`)\n            .replaceWith(getdatajson.html);\n        $parent.find('iframe').attr('id', node);\n        $parent.removeClass('d-none w-0');\n        $('.video-block, #video-block').remove();\n        player[node] = new window.playerjs.Player(document.getElementById(node));\n\n        player[node].on('ready', () => {\n            self.start = start || 0;\n            player[node].play(); // We need to play the video to get the duration.\n            player[node].getDuration(duration => {\n                self.seek(self.start);\n                let totaltime = Number(duration.toFixed(2)) - self.frequency;\n                end = !end ? totaltime : Math.min(end, totaltime);\n                end = Number(end.toFixed(2));\n                self.end = end;\n                self.totaltime = Number(totaltime.toFixed(2));\n                self.duration = self.end - self.start;\n                dispatchEvent('iv:playerReady', null, document.getElementById(node));\n            });\n\n            player[node].on('play', () => {\n                self.paused = false;\n                self.ended = false;\n                dispatchEvent('iv:playerPlay');\n            });\n\n            player[node].on('pause', () => {\n                self.paused = true;\n                dispatchEvent('iv:playerPaused');\n            });\n\n            player[node].on('ended', () => {\n                self.ended = true;\n                dispatchEvent('iv:playerEnded');\n            });\n\n            player[node].on('timeupdate', (data) => {\n                dispatchEvent('iv:playerPlaying');\n                if (data.seconds >= self.end) {\n                    self.ended = true;\n                    player[node].pause();\n                    dispatchEvent('iv:playerEnded');\n                }\n                if (data.seconds < self.start) {\n                    self.seek(self.start);\n                }\n            });\n\n            player[node].on('seeked', () => {\n                player[node].getCurrentTime(value => {\n                    dispatchEvent('iv:playerSeek', {time: value});\n                });\n\n            });\n        });\n    }\n\n    /**\n     * Play the video\n     * @return {Void}\n     */\n    play() {\n        if (!player[this.node]) {\n            return;\n        }\n        player[this.node].play();\n        this.paused = false;\n    }\n    /**\n     * Pause the video\n     * @return {Void}\n     */\n    pause() {\n        if (!player[this.node]) {\n            return;\n        }\n        player[this.node].pause();\n        this.paused = true;\n    }\n    /**\n     * Stop the video\n     * @param {Number} starttime\n     * @return {Void}\n     */\n    stop(starttime) {\n        if (!player[this.node]) {\n            return;\n        }\n        player[this.node].setCurrentTime(starttime);\n        player[this.node].pause();\n    }\n    /**\n     * Seek the video to a specific time\n     * @param {Number} time\n     * @return {Promise<Boolean>}\n     */\n    seek(time) {\n        if (!player[this.node]) {\n            return time;\n        }\n\n        return new Promise((resolve) => {\n            player[this.node].getCurrentTime(value => {\n                let currentTime = value;\n                dispatchEvent('iv:playerSeekStart', {time: currentTime});\n                this.ended = false;\n                player[this.node].setCurrentTime(time, true);\n                resolve(true);\n            });\n        });\n    }\n    /**\n     * Get the current time of the video\n     * @return {Number}\n     */\n    getCurrentTime() {\n        if (!player[this.node]) {\n            return 0;\n        }\n        return new Promise((resolve) => {\n            player[this.node].getCurrentTime(value => resolve(value));\n        });\n    }\n    /**\n     * Get the duration of the video\n     * @return {Number}\n     */\n    getDuration() {\n        if (!player[this.node]) {\n            return 0;\n        }\n        return new Promise(resolve => {\n            player[this.node].getDuration(value => resolve(value));\n        });\n    }\n    /**\n     * Check if the video is paused\n     * @return {Boolean}\n     */\n    isPaused() {\n        if (!player[this.node]) {\n            return true;\n        }\n        return new Promise((resolve) => {\n            player[this.node].getPaused(value => resolve(value === true));\n        });\n    }\n    /**\n     * Check if the video is playing\n     * @return {Boolean}\n     */\n    isPlaying() {\n        if (!player[this.node]) {\n            return false;\n        }\n        return new Promise((resolve) => {\n            player[this.node].getPaused(value => resolve(value === false));\n        });\n    }\n    /**\n     * Check if the video is ended\n     * @return {Boolean}\n     */\n    isEnded() {\n        if (!player[this.node]) {\n            return false;\n        }\n        return this.ended;\n    }\n    /**\n     * Get the aspect ratio of the video\n     * @return {Number}\n     */\n    ratio() {\n        if (!player[this.node]) {\n            return 16 / 9;\n        }\n        return this.aspectratio;\n    }\n    /**\n     * Destroy the player\n     * @return {Void}\n     */\n    destroy() {\n        $(`#${this.node}`).remove();\n        player[this.node] = null;\n        dispatchEvent('iv:playerDestroyed');\n    }\n    /**\n     * Get the state of the player\n     * @return {Number}\n     */\n    getState() {\n        if (!player[this.node]) {\n            return 'paused';\n        }\n        return new Promise((resolve) => {\n            player[this.node].getPaused(value => resolve(value ? 'paused' : 'playing'));\n        });\n    }\n    /**\n     * Set playback rate of the video\n     * @param {Number} rate\n     */\n    setRate(rate) {\n        if (!player[this.node]) {\n            return rate;\n        }\n        return rate;\n    }\n    /**\n     * Mute the video\n     */\n    mute() {\n        if (!player[this.node]) {\n            return;\n        }\n        player[this.node].mute();\n        player[this.node].setVolume(0);\n        this.muted = true;\n        dispatchEvent('iv:playerVolumeChange', {volume: 0});\n    }\n    /**\n     * Unmute the video\n     */\n    unMute() {\n        if (!player[this.node]) {\n            return;\n        }\n        player[this.node].unmute();\n        player[this.node].setVolume(100);\n        this.muted = false;\n        dispatchEvent('iv:playerVolumeChange', {volume: 1});\n    }\n\n    isMuted() {\n        if (!player[this.node]) {\n            return false;\n        }\n        return new Promise((resolve) => {\n            player[this.node].getMuted(value => resolve(value));\n        });\n    }\n    /**\n     * Get the original player object\n     */\n    originalPlayer() {\n        return player[this.node];\n    }\n\n    /**\n     * Set subtitle\n     * @param {string} track language code\n     */\n    setCaption(track) {\n        if (!player[this.node]) {\n            return null;\n        }\n        return track;\n    }\n}\n\nexport default BunnyStream;"],"names":["player","constructor","useAnimationFrame","type","frequency","support","playbackrate","quality","url","node","self","this","match","exec","videoId","oembedUrl","encodeURIComponent","getdata","fetch","ok","error","getdatajson","json","title","posterImage","thumbnail_url","$parent","parent","replaceWith","html","find","attr","window","playerjs","Player","document","getElementById","Promise","resolve","on","getDuration","duration","start","end","allowAutoplay","requireVideoBlock","aspectratio","width","height","removeClass","remove","play","seek","totaltime","Number","toFixed","Math","min","paused","ended","data","seconds","pause","getCurrentTime","value","time","stop","starttime","setCurrentTime","currentTime","isPaused","getPaused","isPlaying","isEnded","ratio","destroy","getState","setRate","rate","mute","setVolume","muted","volume","unMute","unmute","isMuted","getMuted","originalPlayer","setCaption","track"],"mappings":";;;;;;;uLA2BIA,OAAS,sBAKTC,mBACSC,mBAAoB,OACpBC,KAAO,mBACPC,UAAY,SACZC,QAAU,CACXC,cAAc,EACdC,SAAS,iBAIHC,IAAKC,WACVA,KAAOA,SACRC,KAAOC,SAKPC,MADQ,gFACMC,KAAKL,KACnBM,QAAUF,MAAQA,MAAM,GAAK,UAC5BE,QAAUA,YAGXC,0DAAqDC,mBAAmBR,YAEtES,cAAgBC,MAAMH,eACvBE,QAAQE,kDACK,iBAAkB,CAACC,MAAOH,gBAGtCI,kBAAoBJ,QAAQK,UAC9BD,YAAYD,qDACE,iBAAkB,CAACA,MAAOC,cAG5CX,KAAKa,MAAQF,YAAYE,MACzBb,KAAKc,YAAcH,YAAYI,kBAE3BC,SAAU,8BAAMjB,OAAQkB,8CACtBlB,OACDmB,YAAYP,YAAYQ,MAC7BH,QAAQI,KAAK,UAAUC,KAAK,KAAMtB,MAClCT,OAAOS,MAAQ,IAAIuB,OAAOC,SAASC,OAAOC,SAASC,eAAe3B,OAG3D,IAAI4B,SAASC,UAChBtC,OAAOS,MAAM8B,GAAG,SAAS,KACrBvC,OAAOS,MAAM+B,aAAYC,WACrBH,QAAQ,CACJG,SAAUA,SACVlB,MAAOb,KAAKa,MACZC,YAAad,KAAKc,kCAgB3BhB,IAAKkC,MAAOC,WACTlC,6DADqB,IACTA,MAAQ,cACrBA,KAAOA,UACPmC,oBAAsB,0BAAcT,SAASC,eAAe3B,OAC5DE,KAAKiC,mDACI,qBAAsB,CAChCC,mBAAmB,QAIvBnC,KAAOC,SAKPC,MADQ,qFACMC,KAAKL,KACnBM,QAAUF,MAAQA,MAAM,GAAK,UAC5BE,QAAUA,YAGXC,0DAAqDC,mBAAmBR,YAEtES,cAAgBC,MAAMH,eACvBE,QAAQE,kDACK,iBAAkB,CAACC,MAAOH,gBAGtCI,kBAAoBJ,QAAQK,UAC9BD,YAAYD,qDACE,iBAAkB,CAACA,MAAOC,cAG5CX,KAAKa,MAAQF,YAAYE,MACzBb,KAAKc,YAAcH,YAAYI,cAC/Bf,KAAKoC,YAAczB,YAAY0B,MAAQ1B,YAAY2B,WAE/CtB,SAAU,8BAAMjB,OAAQkB,wCACtBlB,OACDmB,YAAYP,YAAYQ,MAC7BH,QAAQI,KAAK,UAAUC,KAAK,KAAMtB,MAClCiB,QAAQuB,YAAY,kCAClB,8BAA8BC,SAChClD,OAAOS,MAAQ,IAAIuB,OAAOC,SAASC,OAAOC,SAASC,eAAe3B,OAElET,OAAOS,MAAM8B,GAAG,SAAS,KACrB7B,KAAKgC,MAAQA,OAAS,EACtB1C,OAAOS,MAAM0C,OACbnD,OAAOS,MAAM+B,aAAYC,WACrB/B,KAAK0C,KAAK1C,KAAKgC,WACXW,UAAYC,OAAOb,SAASc,QAAQ,IAAM7C,KAAKN,UACnDuC,IAAOA,IAAkBa,KAAKC,IAAId,IAAKU,WAA1BA,UACbV,IAAMW,OAAOX,IAAIY,QAAQ,IACzB7C,KAAKiC,IAAMA,IACXjC,KAAK2C,UAAYC,OAAOD,UAAUE,QAAQ,IAC1C7C,KAAK+B,SAAW/B,KAAKiC,IAAMjC,KAAKgC,0CAClB,iBAAkB,KAAMP,SAASC,eAAe3B,UAGlET,OAAOS,MAAM8B,GAAG,QAAQ,KACpB7B,KAAKgD,QAAS,EACdhD,KAAKiD,OAAQ,sCACC,oBAGlB3D,OAAOS,MAAM8B,GAAG,SAAS,KACrB7B,KAAKgD,QAAS,sCACA,sBAGlB1D,OAAOS,MAAM8B,GAAG,SAAS,KACrB7B,KAAKiD,OAAQ,sCACC,qBAGlB3D,OAAOS,MAAM8B,GAAG,cAAeqB,2CACb,oBACVA,KAAKC,SAAWnD,KAAKiC,MACrBjC,KAAKiD,OAAQ,EACb3D,OAAOS,MAAMqD,4CACC,mBAEdF,KAAKC,QAAUnD,KAAKgC,OACpBhC,KAAK0C,KAAK1C,KAAKgC,UAIvB1C,OAAOS,MAAM8B,GAAG,UAAU,KACtBvC,OAAOS,MAAMsD,gBAAeC,4CACV,gBAAiB,CAACC,KAAMD,iBAWtDb,OACSnD,OAAOW,KAAKF,QAGjBT,OAAOW,KAAKF,MAAM0C,YACbO,QAAS,GAMlBI,QACS9D,OAAOW,KAAKF,QAGjBT,OAAOW,KAAKF,MAAMqD,aACbJ,QAAS,GAOlBQ,KAAKC,WACInE,OAAOW,KAAKF,QAGjBT,OAAOW,KAAKF,MAAM2D,eAAeD,WACjCnE,OAAOW,KAAKF,MAAMqD,SAOtBV,KAAKa,aACIjE,OAAOW,KAAKF,MAIV,IAAI4B,SAASC,UAChBtC,OAAOW,KAAKF,MAAMsD,gBAAeC,YACzBK,YAAcL,0CACJ,qBAAsB,CAACC,KAAMI,mBACtCV,OAAQ,EACb3D,OAAOW,KAAKF,MAAM2D,eAAeH,MAAM,GACvC3B,SAAQ,SATL2B,KAiBfF,wBACS/D,OAAOW,KAAKF,MAGV,IAAI4B,SAASC,UAChBtC,OAAOW,KAAKF,MAAMsD,gBAAeC,OAAS1B,QAAQ0B,YAH3C,EAUfxB,qBACSxC,OAAOW,KAAKF,MAGV,IAAI4B,SAAQC,UACftC,OAAOW,KAAKF,MAAM+B,aAAYwB,OAAS1B,QAAQ0B,YAHxC,EAUfM,kBACStE,OAAOW,KAAKF,OAGV,IAAI4B,SAASC,UAChBtC,OAAOW,KAAKF,MAAM8D,WAAUP,OAAS1B,SAAkB,IAAV0B,YAOrDQ,oBACSxE,OAAOW,KAAKF,OAGV,IAAI4B,SAASC,UAChBtC,OAAOW,KAAKF,MAAM8D,WAAUP,OAAS1B,SAAkB,IAAV0B,YAOrDS,kBACSzE,OAAOW,KAAKF,OAGVE,KAAKgD,MAMhBe,eACS1E,OAAOW,KAAKF,MAGVE,KAAKmC,YAFD,GAAK,EAQpB6B,yCACUhE,KAAKF,OAAQyC,SACnBlD,OAAOW,KAAKF,MAAQ,yCACN,sBAMlBmE,kBACS5E,OAAOW,KAAKF,MAGV,IAAI4B,SAASC,UAChBtC,OAAOW,KAAKF,MAAM8D,WAAUP,OAAS1B,QAAQ0B,MAAQ,SAAW,gBAHzD,SAUfa,QAAQC,aACC9E,OAAOW,KAAKF,MAGVqE,KAKXC,OACS/E,OAAOW,KAAKF,QAGjBT,OAAOW,KAAKF,MAAMsE,OAClB/E,OAAOW,KAAKF,MAAMuE,UAAU,QACvBC,OAAQ,sCACC,wBAAyB,CAACC,OAAQ,KAKpDC,SACSnF,OAAOW,KAAKF,QAGjBT,OAAOW,KAAKF,MAAM2E,SAClBpF,OAAOW,KAAKF,MAAMuE,UAAU,UACvBC,OAAQ,sCACC,wBAAyB,CAACC,OAAQ,KAGpDG,kBACSrF,OAAOW,KAAKF,OAGV,IAAI4B,SAASC,UAChBtC,OAAOW,KAAKF,MAAM6E,UAAStB,OAAS1B,QAAQ0B,YAMpDuB,wBACWvF,OAAOW,KAAKF,MAOvB+E,WAAWC,cACFzF,OAAOW,KAAKF,MAGVgF,MAFI"}