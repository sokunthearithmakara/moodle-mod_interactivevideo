{"version":3,"file":"editannotation.min.js","sources":["../src/editannotation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * Edit interactions module\n *\n * @module     mod_interactivevideo/editannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/toast',\n    'core/notification',\n    'core/event_dispatcher',\n    './quickform',\n    './libraries/jquery-ui',\n\n], function($, addToast, Notification, {dispatchEvent}, quickform) {\n    let ctRenderer = {};\n    let player;\n    let totaltime;\n    let currentTime;\n    let playerReady = false;\n    const isRTL = $('html').attr('dir') == 'rtl';\n    const isBS5 = $('body').hasClass('bs-5');\n    const bsAffix = isBS5 ? '-bs' : '';\n    let $loader = $('#background-loading');\n    /**\n     * Replace the progress bar on the video navigation.\n     * @param {Number} percentage - Percentage to replace the progress bar.\n     * @returns {void}\n     * */\n    const replaceProgressBars = (percentage) => {\n        percentage = percentage < 0 ? 0 : percentage;\n        percentage = percentage > 100 ? 100 : percentage;\n        $('#video-nav #progress').css('width', percentage + '%');\n        $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n    };\n    /**\n     * Render the annotations on the video navigation.\n     * @param {Array} annos - Annotations to render.\n     * @param {Number} start - Start time of the video.\n     * @param {Number} totaltime - Total time of the video.\n     * @returns {void}\n     * */\n    const renderVideoNav = async function(annos, start, totaltime) {\n        if (annos.length == 0) {\n            $(\"#video-nav ul\").empty();\n            return;\n        }\n\n        $(\"#video-nav ul\").empty();\n        $(\"#video-timeline-wrapper .skipsegment\").remove();\n        annos.forEach(async(x) => {\n            const render = ctRenderer[x.type];\n            await render.renderItemOnVideoNavigation(x);\n        });\n\n        const time = await player.getCurrentTime();\n        // Replace progress bar.\n        const percentage = (time - start) / totaltime * 100;\n        replaceProgressBars(percentage);\n        dispatchEvent('annotationitemsrendered', {'annotations': annos});\n    };\n\n    return {\n        /**\n         * Initialize function on page loads.\n         * @param {String} url video url\n         * @param {Number} coursemodule cm id\n         * @param {Number} interaction cm instance\n         * @param {Number} course course id\n         * @param {Number} start video start time\n         * @param {Number} end video end time\n         * @param {Number} coursecontextid course context id\n         * @param {String} type video type\n         * @param {Object} displayoptions display options\n         * @param {Number} userid user id\n         * @param {String} posterimage poster image\n         * @param {String} extendedcompletion extended completion\n         */\n        init: function(url, coursemodule, interaction, course, start, end, coursecontextid,\n            type = 'yt', displayoptions, userid, posterimage, extendedcompletion) {\n\n            quickform();\n\n            require(['theme_boost/bootstrap/modal']);\n            require(['theme_boost/bootstrap/tooltip']);\n            /**\n             * Util function to display notification\n             * @param {String} msg message text\n             * @param {String} type message type\n             */\n            const addNotification = (msg, type = \"info\") => {\n                addToast.add(msg, {\n                    type: type\n                });\n            };\n\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            let annotations = []; // Annotations.\n            let contentTypes; // Content types.\n\n            /**\n             * Convert seconds to HH:MM:SS format\n             * @param {Number} s second\n             * @param {Boolean} dynamic if true, only show minutes and seconds if less than one hour\n             * @param {Boolean} rounded if true, second is rounded\n             * @returns formatted timestamp\n             */\n            const convertSecondsToHMS = (s, dynamic = false, rounded = true) => {\n                if (rounded) {\n                    s = Math.round(s);\n                }\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - hours * 3600) / 60);\n                let seconds = s - hours * 3600 - minutes * 60;\n                if (rounded && seconds > 59.5) {\n                    seconds = 0;\n                    minutes++;\n                    if (minutes > 59) {\n                        minutes = 0;\n                        hours++;\n                    }\n                }\n                if (minutes < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                if (rounded) {\n                    seconds = Math.round(seconds);\n                } else {\n                    seconds = parseFloat(seconds).toFixed(2);\n                }\n\n                if (seconds < 10) {\n                    seconds = '0' + seconds;\n                }\n\n                if (dynamic && hours == 0) {\n                    return minutes + ':' + seconds;\n                }\n\n                return (hours < 10 ? '0' + hours : hours) + ':' + minutes + ':' + seconds;\n            };\n\n            let activeid = null; // Current active annotation id. Mainly used when editing to relaunch the interaction afte editing.\n\n            /**\n             * Handle rendering of annotation items on the list\n             * @param {Array} annotations array of annotation objects\n             * @returns\n             */\n            const renderAnnotationItems = (annotations) => {\n                $('#annotationwrapper .loader').remove();\n                $('#annotation-list').empty().removeClass(\"d-flex align-items-center justify-content-center\");\n                if (player.live) {\n                    $('#timeline-wrapper').addClass('no-pointer-events');\n                    $('#annotation-list').html(\n                        `${M.util.get_string('interactionsnotsupportedonlivevideo', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                renderVideoNav(annotations, start, totaltime);\n                if (annotations.length == 0) {\n                    $('#annotation-list').html(`${M.util.get_string('clickaddtoaddinteraction', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                annotations.sort(function(a, b) {\n                    return Number(a.timestamp) - Number(b.timestamp);\n                });\n\n                annotations.forEach(function(item) {\n                    let listItem = $('#annotation-template').clone();\n                    ctRenderer[item.type].renderEditItem(annotations, listItem, item);\n                });\n\n                let xp = annotations.filter(x => x.xp).map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n                $(\"#xp span\").text(xp);\n\n                if (activeid) {\n                    const activeAnno = annotations.find(x => x.id == activeid);\n                    if (activeAnno) {\n                        ctRenderer[activeAnno.type].postEditCallback(activeAnno);\n                    }\n                }\n            };\n\n            /**\n             * Get annotations from the server and execute the rendering function\n             * @returns\n             */\n            const getAnnotations = () => {\n                const getItems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_all_contenttypes',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                $.when(getItems, getContentTypes).done(async function(items, contenttypes) {\n                    annotations = JSON.parse(items[0]);\n                    if (player.live) {\n                        annotations = [];\n                    }\n                    contentTypes = JSON.parse(contenttypes[0]);\n                    // Remove all annotations that are not in the enabled content types.\n                    annotations = annotations.filter(x => contentTypes.find(y => y.name === x.type));\n                    const getRenderers = new Promise((resolve) => {\n                        let count = 0;\n                        contentTypes.forEach(x => {\n                            require(['' + x.amdmodule], function(Type) {\n                                ctRenderer[x.name] = new Type(player, annotations, interaction,\n                                    course, 0, 0, 0, 0, type, 0, totaltime, start, end, x, coursemodule,\n                                    null, displayoptions, null, extendedcompletion, {\n                                    isEditMode: true,\n                                });\n                                count++;\n                                ctRenderer[x.name].init();\n                                if (count == contentTypes.length) {\n                                    resolve(ctRenderer);\n                                }\n                            });\n                        });\n                    });\n                    annotations.map(x => {\n                        let prop = contentTypes.find(y => y.name === x.type);\n                        // Clean up the prop by removing author, authorlink, description;\n                        delete prop.author;\n                        delete prop.authorlink;\n                        delete prop.description;\n                        x.prop = JSON.stringify(prop);\n                        x.editMode = true;\n                        return x;\n                    });\n                    ctRenderer = await getRenderers;\n                    renderAnnotationItems(annotations);\n                });\n            };\n\n            /**\n             * Validate given timestamp against format\n             * @param {String} timestamp formatted timestamp hh:mm:ss\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @returns\n             */\n            const validateTimestampFormat = (timestamp, fld, existing) => {\n                const regex = /^([0-9]{2}):([0-5][0-9]):([0-5][0-9])(\\.\\d{2})?$/;\n                if (!regex.test(timestamp)) {\n                    addNotification(M.util.get_string('invalidtimestampformat', 'mod_interactivevideo'), 'danger');\n                    if (existing) {\n                        $(fld).val(existing);\n                    } else {\n                        $(fld).val(convertSecondsToHMS(start, false, false));\n                    }\n                    return false;\n                }\n                return true;\n            };\n\n            /**\n             * Validate timestamp against start and end time of the video, existing timestamp and skip segments\n             * @param {String} timestamp formatted timestamp\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @param {Number} seconds\n             * @param {Boolean} checkduration if true, check against start and end time\n             * @param {Boolean} checkexisting if true, check against existing annotations\n             * @param {Boolean} checkskipsegment if true, check against skip segments\n             * @returns\n             */\n            const validateTimeStartEnd = (timestamp, fld, existing, seconds, checkduration,\n                checkexisting, checkskipsegment) => {\n                // Convert the timestamp to seconds.\n                const parts = timestamp.split(':');\n                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                // Make sure the timestamp is between start and end.\n                if (checkduration) {\n                    if (timestamp > end || timestamp < start) {\n                        const message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(start, true, false),\n                            \"end\": convertSecondsToHMS(end, true, false)\n                        });\n                        addNotification(message, 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure the timestamp is not already in the list.\n                if (checkexisting) {\n                    if (annotations.find(x => x.timestamp == timestamp) && timestamp != seconds) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure timestamp is not in a skip segment.\n                if (checkskipsegment) {\n                    const skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(timestamp)\n                        && Number(x.title) > Number(timestamp));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(skip.timestamp, true, false),\n                            \"end\": convertSecondsToHMS(skip.title, true, false)\n                        }), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                return timestamp;\n            };\n\n            /**\n             * Run interaction\n             * @param {Object} annotation annotation object\n             */\n            const runInteraction = (annotation) => {\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').not('.sticky').remove();\n                $('#end-screen').remove();\n                player.pause();\n                const activityType = ctRenderer[annotation.type];\n                activityType.runInteraction(annotation);\n            };\n\n            /**\n             * Correct the start and end time.\n             * @param {Number} duration Total duration of the video.\n             * @returns {Object} Object containing start and end time.\n             */\n            const updateTime = async(duration) => {\n                duration = Number(duration);\n                let toUpdatetime = false;\n                if (!end || end == 0) {\n                    toUpdatetime = true;\n                }\n                if (!start || start >= duration || start < 0 || start >= duration) {\n                    toUpdatetime = true;\n                }\n                start = start > duration ? 0 : start;\n                if (toUpdatetime) {\n                    await $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_videotime',\n                            sesskey: M.cfg.sesskey,\n                            cmid: coursemodule,\n                            courseid: course,\n                            id: interaction,\n                            start: start,\n                            end: !end || end == 0 ? duration : end,\n                            contextid: M.cfg.contextid\n                        }\n                    });\n                }\n                end = !end || end == 0 || end > duration ? duration : end;\n                return {start, end};\n            };\n\n            /**\n             * Set of events to run after the video player is ready.\n             */\n            const onReady = async() => {\n                if (player.live) {\n                    end = Number.MAX_SAFE_INTEGER;\n                }\n                player.pause();\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    if (!player.live) {\n                        await player.seek(start);\n                    }\n                    onReady();\n                    return;\n                }\n                player.unMute();\n                if (player.audio) {\n                    $('#annotation-canvas').addClass('bg-black');\n                }\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#start-screen').removeClass('d-none');\n                    $('#video-block').removeClass('no-pointer bg-transparent');\n                }\n                if (player.type != 'vimeo'\n                    && player.type != 'html5video'\n                    && player.type != 'panopto'\n                    && player.type != \"peertube\") { // Vimeo/HTML5 does not pause/play on click.\n                    $('#video-block').addClass('no-pointer');\n                }\n\n                if (player.support.playbackrate == false) {\n                    $('#changerate').remove();\n                } else {\n                    $('#changerate').removeClass('d-none');\n                }\n\n                if (player.support.quality == false) {\n                    $('#changequality').remove();\n                } else {\n                    $('#changequality').removeClass('d-none');\n                }\n\n                let t = player.totaltime;\n\n                ({start, end} = await updateTime(t));\n\n                totaltime = end - start;\n                // Recalculate the ratio of the video.\n                let ratio = 16 / 9;\n                if (!displayoptions.usefixedratio || displayoptions.usefixedratio == 0) {\n                    ratio = player.aspectratio;\n                }\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                playerReady = true;\n                $('#annotation-canvas').removeClass('d-none w-0');\n\n                // Handle timeline block.\n                $(\"#timeline-wrapper #video-timeline\").css({\n                    'background-image': 'url(' + posterimage + ')',\n                    'background-size': 'contain',\n                    'background-repeat': 'no-repeat',\n                });\n                $(\"#timeline-wrapper #duration\").text(convertSecondsToHMS(end, true));\n                $(\"#timeline-wrapper #currenttime\").text(convertSecondsToHMS(start, true));\n                // Render minute markers.\n                const minutes = Math.floor(totaltime / 60);\n                $('#timeline-items-wrapper').css('width', (minutes * 300) + 'px'); // 300px per minute as default.\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let startPercentage = 0;\n                let newStart = start;\n                if (start % 60 != 0) {\n                    startPercentage = (60 - (start % 60)) / totaltime * 100;\n                    newStart = start + (60 - (start % 60));\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 0%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n                for (let i = newStart; i <= end; i += 60) {\n                    let percentage = ((i - newStart) / totaltime * 100) + startPercentage;\n                    let marker = '';\n                    // Format h:m (e.g 3h1m).\n                    if (i >= 3600) {\n                        marker = Math.floor(i / 3600) + 'h' + Math.floor((i % 3600) / 60) + 'm';\n                    } else {\n                        marker = Math.floor(i / 60) + 'm';\n                    }\n                    $('#minute-markers').append(`<div class=\"minute-marker position-absolute\"\n                         style=\"left: ${percentage}%;\"><div class=\"text-white minute-label\">${marker}</div></div>`);\n                    $('#minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                            style=\"left: ${percentage}%;\"></div>`);\n                }\n\n                if (end % 60 != 0) {\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 100%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n\n                // Set caption to null.\n                try {\n                    player.setCaption('');\n                } catch (e) {\n                    // Do nothing.\n                }\n\n                $('#scrollbar, #scrollhead-top').css('left', 0);\n\n                getAnnotations();\n            };\n\n            /**\n             * Run when video ended (i.e. arrives at 'end' time)\n             */\n            const onEnded = () => {\n                player.pause();\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n                // Cover the video with a message on a white background div.\n                $('#video-wrapper').append(`<div id=\"end-screen\" class=\"border position-absolute w-100 h-100 bg-white d-flex\n                     justify-content-center align-items-center\" style=\"top: 0; left: 0;\">\n                     <button class=\"btn btn-danger border-0 iv-rounded-circle\" style=\"font-size: 1.5rem;\" id=\"restart\">\n                    <i class=\"bi bi-arrow-repeat\" style=\"font-size: x-large;\"></i></button></div>`);\n                $('#video-nav #progress').css('width', '100%');\n                $('#scrollbar, #scrollhead-top').css('left', '100%');\n                // Focus on the restart button.\n                $('#message #restart').focus();\n\n                // If the current time matches the timestamp of an annotation, highlight the annotation.\n                const currentAnnotation = annotations.find((annotation) => annotation.timestamp == end);\n                if (currentAnnotation) {\n                    $('#annotation-list tr').removeClass('active');\n                    $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                    // Show tooltip for two seconds.\n                    $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                    setTimeout(function() {\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                    }, 2000);\n                }\n            };\n\n            /**\n             * Execute when video is sought\n             * @param {Number} t seconds\n             * @returns\n             */\n            const onSeek = async function(t) {\n                if (!playerReady) {\n                    return;\n                }\n                if (t) {\n                    t = Number(t);\n                } else {\n                    t = await player.getCurrentTime();\n                }\n                if (t > start && t < end) {\n                    $('#end-screen').remove();\n                }\n                const percentage = (t - start) / (totaltime) * 100;\n                $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(t, true));\n                dispatchEvent('timeupdate', {'time': t});\n            };\n\n            let onPlayingInterval;\n            let visualized = false;\n            /**\n             * Excute when video plays (i.e. start or resume)\n             */\n            const onPlaying = async() => {\n                $('#message, #end-screen').not('.sticky').remove();\n                $('#playpause').find('i').removeClass('bi-play-fill').addClass('bi-pause-fill').removeClass('rotate-360');\n                if (player.audio && !visualized) {\n                    player.visualizer();\n                    visualized = true;\n                }\n                if (player.live) {\n                    return;\n                }\n                const intervalFunction = async function() {\n                    let thisTime = await player.getCurrentTime();\n                    const isPlaying = await player.isPlaying();\n                    const isEnded = await player.isEnded();\n                    if (!isPlaying) {\n                        cancelAnimationFrame(onPlayingInterval);\n                        return;\n                    }\n\n                    if (thisTime < start) {\n                        await player.seek(start);\n                        thisTime = start;\n                    }\n\n                    if (thisTime >= end || isEnded) {\n                        player.stop(end);\n                        cancelAnimationFrame(onPlayingInterval);\n                        onEnded();\n                        return;\n                    }\n                    dispatchEvent('timeupdate', {'time': thisTime});\n                    $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(thisTime, true));\n                    let percentage = (thisTime - start) / (totaltime) * 100;\n                    $('#video-nav #progress').css('width', percentage + '%');\n                    $(\"#scrollbar, #scrollhead-top\").css('left', percentage + '%');\n\n                    // Scroll the timeline so that the current time is in the middle of the timeline.\n                    const scrollBar = document.getElementById('scrollbar');\n                    // Check if the scrollbar is in view.\n                    const rect = scrollBar.getBoundingClientRect();\n                    if (rect.left < 0 || rect.right > window.innerWidth) {\n                        scrollBar.scrollIntoView({behavior: \"instant\", block: \"center\", inline: \"center\"});\n                    }\n\n                    // If the current time matches the timestamp of an annotation, highlight the annotation\n                    const currentAnnotation = annotations.find(x => (thisTime - player.frequency) <= x.timestamp\n                        && (thisTime + player.frequency) >= x.timestamp);\n                    if (currentAnnotation) {\n                        $('#annotation-list tr').removeClass('active');\n                        $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                        setTimeout(function() {\n                            $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                        }, 2000);\n                    }\n\n                    // If current time is within the skipsegment, seek to the end of the segment.\n                    let skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    let skip = skipsegments.find(x => Number(x.timestamp) < Number(thisTime)\n                        && Number(x.title) > Number(thisTime));\n                    if (skip) {\n                        await player.seek(Number(skip.title));\n                        // Replace the progress bar.\n                        percentage = (skip.title - start) / totaltime * 100;\n                        replaceProgressBars(percentage);\n                    }\n                };\n                if (player.useAnimationFrame) {\n                    const animate = async() => {\n                        const isPlaying = await player.isPlaying();\n                        if (isPlaying) {\n                            intervalFunction();\n                            onPlayingInterval = requestAnimationFrame(animate);\n                        }\n                    };\n                    onPlayingInterval = requestAnimationFrame(animate);\n                } else {\n                    const isPlaying = await player.isPlaying();\n                    if (isPlaying) {\n                        intervalFunction();\n                    }\n                }\n            };\n\n            /**\n             * Excute when video is paused.\n             */\n            const onPause = () => {\n                cancelAnimationFrame(onPlayingInterval);\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + type], function(VideoPlayer) {\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#video-block').addClass('no-pointer bg-transparent');\n                    $('#annotation-canvas').removeClass('d-none');\n                }\n                player = new VideoPlayer();\n                player.load(\n                    url,\n                    start,\n                    end,\n                    {\n                        'customStart': true,\n                        'passwordprotected': displayoptions.passwordprotected == 1,\n                        'showControls': false,\n                    }\n                );\n                window.IVPLAYER = player;\n            });\n\n            $(document).on('iv:playerReady', function() {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function() {\n                onPause();\n            });\n\n            $(document).on('iv:playerPlaying', function() {\n                onPlaying();\n            });\n\n            $(document).on('iv:playerEnded', function() {\n                onEnded();\n            });\n\n            $(document).on('iv:playerSeek', function(e) {\n                onSeek(e.detail.time);\n            });\n\n            $(document).on('iv:playerError', function() {\n                addNotification(M.util.get_string('thereisanissueloadingvideo', 'mod_interactivevideo'), 'danger');\n                $('#annotation-canvas').removeClass('d-none');\n                $('#start-screen').addClass('d-none');\n                $('#video-block').addClass('no-pointer bg-transparent');\n                $('#spinner').remove();\n                $('.loader').removeClass('loader');\n            });\n\n            // Post annotation update (add, edit, clone).\n            let cacheCleared = false;\n            $(document).on('annotationupdated', function(e) {\n                if (!cacheCleared) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_ivitems_cache',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            cmid: interaction,\n                        },\n                        success: function() {\n                            cacheCleared = true;\n                        }\n                    });\n                }\n                const action = e.originalEvent.detail.action;\n                if (action == 'import') {\n                    annotations = e.originalEvent.detail.annotations;\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactionimported', 'mod_interactivevideo'), 'success');\n                    return;\n                }\n                let updated = e.originalEvent.detail.annotation;\n                if (action == 'edit' || action == 'draft' || action == 'savedraft') {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != updated.id;\n                    });\n                }\n                updated.prop = JSON.stringify(contentTypes.find(x => x.name === updated.type));\n                annotations.push(updated);\n                if (action == 'add') {\n                    activeid = updated.id;\n                } else {\n                    activeid = null;\n                }\n                annotations.map(x => {\n                    x.editMode = true;\n                    return x;\n                });\n                renderAnnotationItems(annotations);\n                if (action == 'add' || action == 'clone') {\n                    addNotification(M.util.get_string('interactionadded', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                } else if (action == 'edit') {\n                    addNotification(M.util.get_string('interactionupdated', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    setTimeout(function() {\n                        $(`tr[data-id=\"${updated.id}\"]`).removeClass('active');\n                    }, 1500);\n                }\n\n                // If draft exists, activate the save button.\n                if (annotations.find(x => x.status == 'draft')) {\n                    $('#timeline-wrapper #savedraft').removeAttr('disabled').addClass('pulse');\n                } else {\n                    $('#timeline-wrapper #savedraft').attr('disabled', 'disabled').removeClass('pulse');\n                }\n            });\n\n            // Re-render annotation list and timeline after an annotation is deleted.\n            $(document).on('annotationdeleted', function(e) {\n                const annotation = e.originalEvent.detail.annotation;\n                activeid = null;\n                $(`tr[data-id=\"${annotation.id}\"]`).addClass('deleted');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != annotation.id;\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactiondeleted', 'mod_interactivevideo'), 'success');\n                }, 1000);\n            });\n\n            // Implement create annotation\n            $(document).on('click', '#addcontentdropdown .dropdown-item', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                // Check if the target item is a link.\n                if ($(e.target).is('a')) {\n                    return;\n                }\n\n                const ctype = $(this).data('type');\n                player.pause();\n                let timestamp = currentTime || await player.getCurrentTime();\n                timestamp = Number(timestamp.toFixed(2));\n                const contenttype = contentTypes.find(x => x.name == ctype);\n                if (contenttype.hastimestamp) {\n                    if (annotations.find(x => x.timestamp == timestamp)) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                    // Check skip segments\n                    const skipsegments = annotations.filter(x => x.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(currentTime)\n                        && Number(x.title) > Number(currentTime));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                }\n                if (!contenttype.allowmultiple && annotations.find(x => x.type == ctype)) {\n                    addNotification(M.util.get_string(\n                        'thisinteractionalreadyexists', 'mod_interactivevideo', contenttype.title), 'danger');\n                    return;\n                }\n                currentTime = null;\n                ctRenderer[ctype].addAnnotation(annotations, contenttype.hastimestamp ? timestamp : -1, coursemodule);\n            });\n\n            // Implement edit annotation\n            $(document).on('click', 'tr.annotation .edit', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].editAnnotation(annotations, id, coursemodule);\n                const t = await player.getCurrentTime();\n                if (timestamp && t != timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                const isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                }\n            });\n\n            // Implement copy annotation\n            $(document).on('click', 'tr.annotation .copy', async function(e) {\n                e.preventDefault();\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                const time = await player.getCurrentTime();\n                ctRenderer[contenttype].cloneAnnotation(id, time);\n            });\n\n            // Implement delete annotation.\n            $(document).on('click', 'tr.annotation .delete', async function(e) {\n                e.preventDefault();\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    player.pause();\n                }\n                const id = $(this).closest('.annotation').data('id');\n                const annotation = annotations.find(annotation => annotation.id == id);\n                try {\n                    Notification.deleteCancelPromise(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                    ).then(() => {\n                        return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                    }).catch(() => {\n                        return;\n                    });\n                } catch {\n                    Notification.saveCancel(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                        function() {\n                            return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                        }\n                    );\n                }\n\n\n            });\n\n            // Implement view annotation.\n            $(document).on('click', 'tr.annotation .title', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                // Update the progress bar.\n                const percentage = (timestamp - start) / totaltime * 100;\n                replaceProgressBars(percentage);\n                let currentTime = await player.getCurrentTime();\n                if (currentTime != timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const theAnnotation = annotations.find(annotation => annotation.id == id);\n                setTimeout(() => {\n                    runInteraction(theAnnotation);\n                }, 500);\n            });\n\n            // Implement go to timestamp.\n            $(document).on('click', 'tr.annotation .timestamp', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).data('timestamp');\n                await player.seek(timestamp);\n                player.play();\n            });\n\n            // Right click on the video nav or video timeline to add a new interaction.\n            $(document).on('contextmenu', '#vseek, #video-timeline', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                currentTime = (percentage * totaltime) + start;\n                let t = await player.getCurrentTime();\n                if (t != currentTime) {\n                    await player.seek(currentTime);\n                }\n                player.pause();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Right click on the scrollbar to add a new interaction.\n            $(document).on('contextmenu', '#scrollbar, #scrollhead-top', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                currentTime = await player.getCurrentTime();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Click the play/pause button on the timeline region to pause/play video.\n            $(document).on('click', '#playpause', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                // Pause or resume the video.\n                let isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                } else {\n                    let t = await player.getCurrentTime();\n                    if (t >= end) {\n                        $('#end-screen #restart').trigger('click');\n                    } else {\n                        player.play();\n                    }\n                }\n            });\n\n            $(document).on('click', '#video-block', function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $('#playpause').trigger('click');\n            });\n\n            // Right click on the annotation indicator to edit the annotation.\n            $(document).on('contextmenu', '#video-nav .annotation', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                // Trigger click on the edit button.\n                $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n            });\n\n            // Quick edit.\n            $(document).on('contextmenu', '[data-editable]', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($('[data-field].editing').length > 0) {\n                    return;\n                }\n                const fld = $(this).data('editable');\n                $(this).hide();\n                $(this).siblings('[data-field=\"' + fld + '\"]').removeClass('d-none').focus().addClass('editing');\n                if (fld == 'timestamp') {\n                    $(this).closest('tr')\n                        .append(`<div class=\"timestamp-info position-absolute\">\n                        ${M.util.get_string('rightclicktosetcurrenttime', 'mod_interactivevideo')}</div>`);\n                }\n            });\n\n            $(document).on('contextmenu', '[data-field=\"timestamp\"]', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const time = await player.getCurrentTime();\n                $(this).val(convertSecondsToHMS(time, false, false));\n            });\n\n            $(document).on('keyup', '[data-field].editing', function(e) {\n                $(this).removeClass('is-invalid');\n                const initialValue = $(this).data('initial-value');\n                const val = $(this).val();\n                const fld = $(this).data('field');\n                if (val == '') {\n                    $(this).addClass('is-invalid');\n                }\n\n                // If escape key is pressed, revert the value.\n                if (e.key == 'Escape') {\n                    $(this).val(initialValue);\n                    $(this).removeClass('editing');\n                    $(this).addClass('d-none');\n                    $(this).siblings('[data-editable]').show();\n                    $('.timestamp-info').remove();\n                    return;\n                }\n                // If enter key is pressed, save the value.\n                if (e.key == 'Enter') {\n\n                    let seconds;\n                    if (fld == 'timestamp') {\n                        const parts = initialValue.split(':');\n                        seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!validateTimestampFormat(val, '[data-field].editing', initialValue)) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        const timestamp = validateTimeStartEnd(val, '[data-field].editing', initialValue, seconds,\n                            true, true, true);\n                        if (timestamp == -1) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        seconds = timestamp;\n                    }\n\n                    if ($(this).hasClass('is-invalid')) {\n                        return;\n                    }\n                    if (val == initialValue) {\n                        $(this).removeClass('editing');\n                        $(this).addClass('d-none');\n                        $(this).siblings('[data-editable]').show();\n                        return;\n                    }\n                    const id = $(this).data('id');\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: id,\n                            field: fld,\n                            contextid: M.cfg.contextid,\n                            value: fld == 'timestamp' ? seconds : val,\n                        },\n                        success: function(data) {\n                            $('.timestamp-info').remove();\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'edit'\n                            });\n                        }\n                    });\n                    return;\n                }\n            });\n\n            $(document).on('blur', '[data-field].editing', function() {\n                const initialValue = $(this).data('initial-value');\n                $(this).val(initialValue);\n                $(this).removeClass('editing');\n                $(this).addClass('d-none');\n                $(this).siblings('[data-editable]').show();\n                $('.timestamp-info').remove();\n            });\n            // End quick edit.\n\n            $(document).on('click', '#end-screen #restart', async function(e) {\n                e.preventDefault();\n                $('#end-screen').remove();\n                await player.seek(start);\n                player.play();\n            });\n\n            // Display tooltip on anntation indicator when annotation on the list is hovered.\n            $(document).on('mouseover', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseover');\n            });\n\n            // Remove tooltip when annotation on the list is not hovered.\n            $(document).on('mouseout', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseout');\n                $('.tooltip').remove();\n            });\n\n            // Highlight annotation on the list when annotation indicator is hovered.\n            $(document).on('mouseover', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).addClass('active');\n            });\n\n            // Remove highlight when annotation indicator is not hovered.\n            $(document).on('mouseout', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).removeClass('active');\n            });\n\n            // Validate timestamp when the timestamp field is changed.\n            $(document).on('change', '.timestamp-input, .timestamp-field input', function() {\n                $(this).removeClass('is-invalid');\n                const parts = $(this).val().split(':');\n                const seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                if (!validateTimestampFormat($(this).val(), this)) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n\n                const timestamp = validateTimeStartEnd($(this).val(), this, \"00:00:00\", seconds, true, false, true);\n\n                if (timestamp == -1) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n            });\n\n            const appendTimestampMarker = (seconds, rounded) => {\n                const formattedTime = convertSecondsToHMS(seconds, true, rounded);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n            };\n\n            $(document).on('annotationitemsrendered', function() {\n                $(`#timeline-wrapper [data${bsAffix}-toggle=\"tooltip\"]`).tooltip({\n                    'boundary': 'window',\n                    'container': '#timeline',\n                });\n                // Put the minute markers on the timeline;\n                let targetAnnotation = null;\n                // Destroy draggable and resizable if already initialized.\n                try {\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').draggable('destroy');\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').resizable('destroy');\n                } catch (e) {\n                    // Do nothing.\n                }\n                $('#timeline-items .annotation.li-draggable').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('.tooltip, #message').remove();\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        $('.tooltip').remove();\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            ui.position.left = -5;\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            ui.position.left = $('#timeline-items').width() - 5;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        $(this).css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('.tooltip').remove();\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            $(this).css('left', '-5px');\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            $(this).css('left', 'calc(100% - 5px)');\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                        }\n\n                        if (timestamp > end) {\n                            timestamp = end;\n                        }\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let skipduration = Number(targetAnnotation.title) - Number(targetAnnotation.timestamp);\n                        if (timestamp < 0 && timestamp + skipduration < start) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp > end) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp < start) {\n                            skipduration = skipduration - Math.abs(start - timestamp);\n                            timestamp = start;\n                        }\n                        if (timestamp + skipduration > end) {\n                            skipduration = Math.abs(end - timestamp);\n                            timestamp = end - skipduration;\n                        }\n                        if (skipduration <= 0) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.title = timestamp + skipduration;\n                        if (targetAnnotation.title > end) {\n                            targetAnnotation.title = end;\n                        }\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').resizable({\n                    'containment': '#video-timeline-wrapper',\n                    'handles': 'e, w',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'resize': async function(event, ui) {\n                        let timestamp;\n                        if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp, direction;\n                        if (ui.originalPosition.left != ui.position.left) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"left\";\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"right\";\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        if (direction == \"left\") {\n                            targetAnnotation.timestamp = timestamp;\n                        } else {\n                            targetAnnotation.title = timestamp;\n                            if (targetAnnotation.title > end) {\n                                targetAnnotation.title = end;\n                            }\n                        }\n                        targetAnnotation.status = 'draft';\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('contextmenu').on('contextmenu', function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    const id = $(this).data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('click').on('click', async function(e) {\n                    e.preventDefault();\n                    const timestamp = $(this).data('timestamp');\n                    await player.seek(timestamp);\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment .delete-skipsegment').off('click').on('click', function(e) {\n                    e.preventDefault();\n                    const id = $(this).closest('.skipsegment').data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .delete`).trigger('click');\n                });\n            });\n\n            $('#scrollbar').draggable({\n                'containment': '#timeline-items',\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#timeline-items').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#timeline-items').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#timeline-items').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            $('#scrollhead-top').draggable({\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#vseek').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#vseek').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#vseek').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    let t = await player.getCurrentTime();\n                    if (t === timestamp) {\n                        return;\n                    }\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            // Resize timeline.\n            $('#timeline-wrapper').resizable({\n                'handles': 'n',\n                'minHeight': 125,\n                'maxHeight': 500,\n                'start': function() {\n                    $('#top-region, #timeline-wrapper').addClass('no-pointer-events');\n                },\n                'resize': function(event, ui) {\n                    $('#top-region').css('height', `calc(100dvh - ${ui.size.height + 70}px)`);\n                },\n                'stop': function() {\n                    $('#top-region, #timeline-wrapper').removeClass('no-pointer-events');\n                    localStorage.setItem('timeline-height', $('#timeline-wrapper').height());\n                }\n            });\n\n            // Resize player region.\n            $('#separator').draggable({\n                'axis': 'x',\n                'containment': '#wrapper',\n                'grid': [1, 0],\n                'start': function() {\n                    $('#wrapper').addClass('no-pointer-events');\n                },\n                drag: function() {\n                    const parentOffset = $(this).offset();\n                    const width = parentOffset.left;\n                    if (!isRTL) {\n                        $('#player-region').css('width', width + 'px');\n                        $('#content-region').css('width', 'calc(100% - ' + width + 'px)');\n                    } else {\n                        $('#player-region').css('width', 'calc(100% - ' + width + 'px)');\n                        $('#content-region').css('width', width + 'px');\n                    }\n                },\n                stop: function() {\n                    const width = $(this).offset().left;\n                    // Save this to local storage\n                    localStorage.setItem('player-width', width);\n                    $('#wrapper').removeClass('no-pointer-events');\n                }\n            });\n\n            // Set player region width from the saved width in local storage.\n            const playerWidth = localStorage.getItem('player-width');\n            if (playerWidth > 0 && window.innerWidth > 992) {\n                $('#separator').css('left', playerWidth + 'px');\n                if (!isRTL) {\n                    $('#player-region').css('width', playerWidth + 'px');\n                    $('#content-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n                } else {\n                    $('#player-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n                    $('#content-region').css('width', playerWidth + 'px');\n                }\n            } else {\n                $('#separator').css('left', `50%`);\n                $('#player-region').css('width', `50%`);\n                $('#content-region').css('width', `50%`);\n            }\n\n            // Set timeline height from saved height in local storage.\n            const timelineHeight = localStorage.getItem('timeline-height');\n            if (timelineHeight) {\n                $('#timeline-wrapper').css('height', timelineHeight + 'px');\n                $('#top-region').css('height', `calc(100dvh - ${Number(timelineHeight) + 70}px)`);\n            }\n\n            // Seek bar functionalities\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseenter', function(e) {\n                $('#cursorbar, #position-marker').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                // First clone the #scrollbar and place it where the cursor is.\n                let $scrollbar = $('#scrollbar').clone();\n                $scrollbar.attr('id', 'cursorbar');\n\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n\n                $scrollbar.css('left', (relX + 5) + 'px');\n                $scrollbar.find('#scrollhead').remove();\n                const percentage = relX / $(this).width();\n                const time = percentage * (totaltime) + start;\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n                $('#vseek #position-marker').css('left', relX + 'px');\n                $('#timeline-items').append($scrollbar);\n            });\n\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseleave', function(e) {\n                e.stopImmediatePropagation();\n                $('#vseek #position-marker, #cursorbar').remove();\n            });\n\n            $('#vseek #bar, #video-timeline').on('mousemove', function(e) {\n                e.stopImmediatePropagation();\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                const percentage = relX / $(this).width();\n                let time = percentage * (totaltime) + start;\n                if (time < start) {\n                    time = start;\n                }\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                // Move the cursorbar\n                $('#cursorbar').css('left', (relX + 5) + 'px');\n                $('#vseek #position').text(formattedTime);\n                $('#vseek #position-marker').css('left', relX + 'px');\n            });\n\n            // Run interaction when annotation indicator is clicked.\n            $(document).on('click', '#video-nav .annotation', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                const annotation = annotations.find(x => x.id == id);\n                $loader.fadeIn(300);\n                if (await player.getCurrentTime() != annotation.timestamp) {\n                    await player.seek(annotation.timestamp);\n                }\n                $loader.fadeOut(300);\n                runInteraction(annotation);\n            });\n\n            // Seek video on click on timeline or video nav.\n            $(document).on('click', '#vseek #bar, #video-timeline', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                const time = percentage * (totaltime) + start;\n                const t = await player.getCurrentTime();\n                if (t === time) {\n                    return;\n                }\n                replaceProgressBars(percentage * 100);\n                $loader.fadeIn(300);\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    player.pause();\n                }\n                await player.seek(time);\n                $loader.fadeOut(300);\n                $(\"#message, #end-screen\").remove();\n            });\n\n            // Implement timeline zoom out.\n            $('#zoomout').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) - 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let timelineElement = document.getElementById('timeline');\n                if (timelineElement.scrollWidth <= timelineElement.clientWidth) {\n                    $(this).attr('disabled', 'disabled');\n                }\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement timeline zoom in.\n            $('#zoomin').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) + 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                $('#zoomout').removeAttr('disabled');\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement zoom in and zoom out on mouse scroll on timeline.\n            $(\"#timeline\").on('wheel', function(e) {\n                if (e.ctrlKey || e.metaKey) {\n                    e.preventDefault();\n                    if (e.originalEvent.deltaY < 0) {\n                        $('#zoomin').trigger('click');\n                    } else {\n                        $('#zoomout').trigger('click');\n                    }\n                }\n            });\n\n            document.getElementById('timeline').addEventListener('scroll', function() {\n                document.getElementById('minute-markers-wrapper').scrollLeft = this.scrollLeft;\n                document.getElementById('vseek').style.left = -this.scrollLeft + 'px';\n                document.getElementById('minute-markers-bg-wrapper').style.left = -this.scrollLeft + 'px';\n                document.getElementById('scrollbar').scrollHeight = this.scrollHeight;\n            });\n\n            // Save timeline changes.\n            $('#savedraft').on('click', function(e) {\n                e.stopImmediatePropagation();\n                let draftAnnotations = annotations.filter(x => x.status == 'draft');\n                let count = 0;\n                draftAnnotations.forEach(function(a) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: a.id,\n                            field: 'timestamp',\n                            contextid: M.cfg.contextid,\n                            value: a.timestamp,\n                        },\n                        success: function(data) {\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'savedraft'\n                            });\n                        }\n                    });\n                    if (a.type == 'skipsegment') {\n                        $.ajax({\n                            url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                            method: \"POST\",\n                            dataType: \"text\",\n                            data: {\n                                action: 'quick_edit_field',\n                                sesskey: M.cfg.sesskey,\n                                id: a.id,\n                                field: 'title',\n                                contextid: M.cfg.contextid,\n                                value: a.title,\n                            },\n                            success: function(data) {\n                                const updated = JSON.parse(data);\n                                dispatchEvent('annotationupdated', {\n                                    annotation: updated,\n                                    action: 'savedraft'\n                                });\n                            }\n                        });\n                    }\n                    count++;\n                    if (count == draftAnnotations.length) {\n                        addNotification(M.util.get_string('draftsaved', 'mod_interactivevideo'), 'success');\n                    }\n                });\n\n            });\n\n            // Launch content selection modal.\n            $('#addcontent').on('click', async function(e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n                $('#contentmodal').modal('show');\n            });\n\n            $('#contentmodal').on('show.bs.modal', function() {\n                player.pause();\n                $('#addcontentdropdown').addClass('modal-body');\n            });\n\n            $('#contentmodal').on('hide.bs.modal', function() {\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                $('#addcontentdropdown').removeClass('modal-body');\n            });\n\n            // Inform user to save changes before close or unload the current page.\n            window.addEventListener('beforeunload', (e) => {\n                if (annotations.find(x => x.status == 'draft')) {\n                    const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                    e.returnValue = confirmationMessage;\n                    return confirmationMessage;\n                }\n                return true;\n            });\n\n            // Implement the rate change.\n            $(document).on('click', '.changerate', function(e) {\n                e.preventDefault();\n                const rate = $(this).data('rate');\n                player.setRate(rate);\n                $('.changerate').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            $(document).on('iv:playerRateChange', function(e) {\n                $('.changerate').find('i').removeClass('bi-check');\n                $(`.changerate[data-rate=\"${e.originalEvent.detail.rate}\"]`).find('i').addClass('bi-check');\n            });\n\n            // Handle video control:: Quality change\n            $(\"#changequality\").on('shown.bs.dropdown', async function() {\n                let quality = await player.getQualities();\n                $('#qualitieslist').empty();\n                let currentQuality = quality.currentQuality;\n                if (currentQuality === null) {\n                    currentQuality = $(this).data('current');\n                }\n                let qualities = quality.qualities;\n                let qualitiesLabel = quality.qualitiesLabel;\n                qualities.forEach((q, i) => {\n                    $('#qualitieslist').append(`<a class=\"dropdown-item changequality px-3\" data-quality=\"${q}\"\n                         href=\"#\"><i class=\"bi ${q == currentQuality ? 'bi-check' : ''} fa-fw\"></i>${qualitiesLabel[i]}</a>`);\n                });\n                $(this).find(`[data${bsAffix}-toggle=dropdown]`).dropdown('update');\n            });\n\n            $(document).on('click', '.changequality', function(e) {\n                e.preventDefault();\n                const quality = $(this).data('quality');\n                player.setQuality(quality);\n                $('.changequality').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            // Observe timeline-wrapper width change.\n            let timelineWrapper = document.getElementById('timeline-wrapper');\n            let resizeObserver = new ResizeObserver(() => {\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n            });\n\n            resizeObserver.observe(timelineWrapper);\n\n            // Implement import content\n            $(document).on('click', '#importcontent', function(e) {\n                e.preventDefault();\n                const importmodal = `<div class=\"modal fade\" id=\"importmodal\" tabindex=\"-1\" aria-labelledby=\"importmodalLabel\"\n                 aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title flex-grow-1\" id=\"importmodalLabel\">\n                                ${M.util.get_string('importcontent', 'mod_interactivevideo')}</h5>\n                                <button type=\"button\" class=\"btn p-0 border-0\" data${bsAffix}-dismiss=\"modal\" aria-label=\"Close\">\n                                    <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary border-0\" data${bsAffix}-dismiss=\"modal\">\n                                ${M.util.get_string('cancel', 'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary border-0\" id=\"importcontentbutton\">\n                                ${M.util.get_string('import', 'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(importmodal);\n                $('#importmodal').modal('show');\n\n                $('#importmodal').on('hidden.bs.modal', function() {\n                    $('#importmodal').remove();\n                });\n\n                $('#importmodal').off('shown.bs.modal').on('shown.bs.modal', function() {\n                    // Make the modal draggable.\n                    $('#importmodal .modal-dialog').draggable({\n                        handle: \".modal-header\"\n                    });\n                    // Render the course select dropdown.\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'get_taught_courses',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            userid: userid\n                        },\n                        success: function(data) {\n                            let courses = JSON.parse(data);\n                            // Sort courses by name.\n                            courses.sort((a, b) => a.fullname.localeCompare(b.fullname));\n                            let courseSelect = `<select class=\"${isBS5 ? 'form' : 'custom'}-select w-100\" id=\"importcourse\">`;\n                            courses.forEach(course => {\n                                courseSelect += `<option value=\"${course.id}\">${course.fullname} (${course.shortname})</option>`;\n                            });\n                            courseSelect += `</select>`;\n                            let selectfield = `<div class=\"iv-form-group selectcourse\">\n                            <label class=\"iv-font-weight-bold form-label\" for=\"importcourse\">\n                            ${M.util.get_string('selectcourse', 'mod_interactivevideo')}</label>\n                            ${courseSelect}</div>`;\n                            $('#importmodal .modal-body').append(selectfield);\n                            // Default current course.\n                            $('#importmodal #importcourse').val(course);\n                            $('#importmodal #importcourse').trigger('change');\n                        }\n                    });\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcourse', function() {\n                $(`#importmodal .selectcm, #importmodal .select-interaction`).remove();\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_cm_by_courseid',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: $(this).val()\n                    },\n                    success: function(data) {\n                        let cms = JSON.parse(data);\n                        cms.sort((a, b) => a.name.localeCompare(b.name));\n                        let cmSelect = `<select class=\"${isBS5 ? 'form' : 'custom'}-select w-100\" id=\"importcm\">\n                        <option value=\"\">${M.util.get_string('select', 'mod_interactivevideo')}</option>`;\n                        cms.forEach(cm => {\n                            cmSelect += `<option value=\"${cm.id}\" ${cm.id == interaction ? 'disabled' : ''}>${cm.name}</option>`;\n                        });\n                        cmSelect += `</select>`;\n                        let selectfield = `<div class=\"iv-form-group selectcm\">\n                        <label for=\"importcm\" class=\"iv-font-weight-bold form-label\">\n                        ${M.util.get_string('selectactivity', 'mod_interactivevideo')}</label>\n                        ${cmSelect}</div>`;\n                        $(`#importmodal .selectcourse`).after(selectfield);\n                    }\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcm', async function() {\n                $(`#importmodal .select-interaction`).remove();\n                $(`#importmodal #importcm`).after(`<div class=\"select-interaction py-3\">\n                    <iframe src=\"${M.cfg.wwwroot + '/mod/interactivevideo/view.php?i=' + $(this).val()}&embed=1&preview=1\"\n                    frameborder=0 width=\"100%\" height=\"500\" class=\"loader\"></iframe></div>`);\n                let interactions = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: $(this).val(),\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n                interactions = JSON.parse(interactions);\n                interactions = interactions.filter(x => x.type != 'skipsegment');\n                if (interactions.length == 0) {\n                    $(`#importmodal .select-interaction`).append(`<div class=\"alert alert-warning mt-3\">\n                        ${M.util.get_string('nocontent', 'mod_interactivevideo')}</div>`);\n                    return;\n                }\n\n                $(`#importmodal .select-interaction`).append(`<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\n                     no-pointer\">\n                     <div class=\"input-group-prepend border-0 invisible\">\n                            <label class=\"input-group-text bg-white\">\n                                <input type=\"checkbox\"/>\n                                <i class=\"bi bi-plus iv-ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control border-0 iv-font-weight-bold\"\n                 value=\"${M.util.get_string('title', 'mod_interactivevideo')}\">\n                <input type=\"text\" class=\"form-control border-0 iv-font-weight-bold\" style=\"max-width: 50px;\"\n                value=\"XP\">\n                <input type=\"text\" style=\"max-width: 150px;\" value=\"${M.util.get_string('timestamp', 'mod_interactivevideo')}\"\n                 class=\"form-control border-0 iv-font-weight-bold\"></div>`);\n\n                interactions = interactions.map(int => {\n                    // Get the icon and check if the interaction is out of range (start, end time);\n                    const ctype = contentTypes.find(y => y.name === int.type);\n                    int.prop = JSON.stringify(ctype);\n                    int.icon = ctype.icon;\n                    if ((int.timestamp > end || int.timestamp < start) && int.timestamp > 0) {\n                        int.outside = true;\n                    } else {\n                        int.outside = false;\n                    }\n                    // Check if the interaction can be added (e.g. annotation content type can only be added once per activity);\n                    if (!ctype.allowmultiple && annotations.find(x => x.type == int.type)) {\n                        int.disabled = true;\n                    }\n                    return int;\n                });\n\n                interactions.sort((a, b) => a.timestamp - b.timestamp);\n                interactions.forEach(int => {\n                    const inputgroup = `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\"\n                     data-id=\"${int.id}\">\n                        <div class=\"input-group-prepend\">\n                            <label class=\"input-group-text\">\n                                <input type=\"checkbox\" ${int.disabled ? 'disabled' : ''}/>\n                                <i class=\"${int.icon} iv-ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control name\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 value=\"${int.title}\">\n                <input type=\"text\" style=\"max-width: 50px;\" ${int.timestamp < 0 || int.hascompletion == 0 ? 'readonly' : ''}\n                 class=\"form-control xp\" value=\"${int.xp}\">\n                <input type=\"text\" placeholder=\"00:00:00\" style=\"max-width: 150px;\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 class=\"form-control timestamp-input ${int.outside ? 'is-invalid' : ''}\"\n                value=\"${int.timestamp < 0 ? int.timestamp :\n                            convertSecondsToHMS(int.timestamp, false, false)}\"></div>`;\n                    $(`#importmodal .select-interaction`).append(inputgroup);\n                });\n\n                $(document).off('click', '#importmodal #importcontentbutton').on('click', '#importmodal #importcontentbutton',\n                    async function(e) {\n                        e.preventDefault();\n                        let $selected = $(`#importmodal .select-interaction input[type=\"checkbox\"]:checked`);\n                        let selectedInt = [];\n                        $selected.each(function() {\n                            let $row = $(this).closest('.input-group');\n                            const name = $row.find('.name').val();\n                            if (name.trim() == '') {\n                                return;\n                            }\n                            let timestamp = $row.find('.timestamp-input').val();\n                            if (timestamp == '') {\n                                return;\n                            }\n\n                            if (Number(timestamp) < 0) {\n                                timestamp = Number(timestamp);\n                            } else {\n                                const parts = timestamp.split(':');\n                                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                                if (annotations.find(x => x.timestamp == timestamp)) {\n                                    return;\n                                }\n                            }\n                            let id = $row.data('id');\n                            let int = interactions.find(x => x.id == id);\n                            int.title = name;\n                            int.timestamp = timestamp;\n                            let xp = Number($row.find('.xp').val());\n                            if (isNaN(xp) || xp == '') {\n                                xp = 0;\n                            }\n                            int.xp = xp;\n                            selectedInt.push(int);\n                        });\n                        if (selectedInt.length == 0) {\n                            addNotification(M.util.get_string('selectinteraction', 'mod_interactivevideo'), 'danger');\n                            return;\n                        } else {\n                            let interactions = await $.ajax({\n                                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                                method: \"POST\",\n                                dataType: \"text\",\n                                data: {\n                                    action: 'import_annotations',\n                                    sesskey: M.cfg.sesskey,\n                                    contextid: M.cfg.contextid,\n                                    annotations: JSON.stringify(selectedInt),\n                                    tocourse: M.cfg.courseId,\n                                    fromcourse: $('#importcourse').val(),\n                                    tocm: interaction,\n                                    fromcm: $('#importcm').val(),\n                                    module: coursemodule\n                                }\n                            });\n                            interactions = JSON.parse(interactions);\n\n                            // Dismiss modal.\n                            $('#importmodal').modal('hide');\n\n                            // Add the imported annotations to the current annotations.\n                            annotations = annotations.concat(interactions);\n                            dispatchEvent('annotationupdated', {\n                                annotations: annotations,\n                                action: 'import'\n                            });\n\n                            // Get interaction that allowmultiple false and init each one.\n                            interactions.forEach(int => {\n                                if (!int.allowmultiple) {\n                                    ctRenderer[int.type].init();\n                                }\n                            });\n                        }\n                    });\n            });\n\n            // Implement content type filter.\n            $(document).on('keyup', '#contentmodal #contentsearch', function() {\n                let search = $(this).val().toLowerCase();\n\n                $('#addcontentdropdown .dropdown-item').removeClass('d-none').addClass('d-flex');\n\n                if (search == '') {\n                    return;\n                }\n\n                $('#contentmodal #addcontentdropdown .dropdown-item').each(function() {\n                    let text = $(this).find('.contenttype-title').text().toLowerCase();\n                    if (text.includes(search)) {\n                        $(this).addClass('d-flex').removeClass('d-none');\n                    } else {\n                        $(this).addClass('d-none').removeClass('d-flex');\n                    }\n                });\n            });\n\n            // Implement fast forward and rewind.\n            const fastforward = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time >= end) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time += 1;\n                } else {\n                    time += 0.2;\n                }\n                if (time > end) {\n                    time = end;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastforward(e);\n            });\n\n            let fastForwardInterval;\n            $(document).on('mousedown', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastForwardInterval = setInterval(async() => {\n                    fastforward(e);\n                    if (await player.getCurrentTime() >= end) {\n                        clearInterval(fastForwardInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#fast-forward', function() {\n                clearInterval(fastForwardInterval);\n            });\n\n            const rewind = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time <= start) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time -= 1;\n                } else {\n                    time -= 0.2;\n                }\n                if (time < start) {\n                    time = start;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#rewind', async function(e) {\n                e.preventDefault();\n                rewind(e);\n            });\n\n            let rewindInterval;\n            $(document).on('mousedown', '#rewind', async function(e) {\n                e.preventDefault();\n                rewindInterval = setInterval(async() => {\n                    rewind(e);\n                    if (await player.getCurrentTime() <= start) {\n                        clearInterval(rewindInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#rewind', function() {\n                clearInterval(rewindInterval);\n            });\n\n            // Remove all event listeners before leaving the page.\n            window.addEventListener('beforeunload', function() {\n                $(document).off();\n                cancelAnimationFrame(onPlayingInterval);\n            });\n\n            // Event lister for bulk action.\n            $(document).on('click', '#annotation-list-bulk-edit', async function(e) {\n                e.preventDefault();\n                if ($(this).hasClass('active')) {\n                    // Remove all checkboxes.\n                    $('#annotation-list').find('.form-check').remove();\n                    $(this).removeClass('active');\n                    $('#annotation-list').find('tr').each(function() {\n                        $(this).removeClass('b-active');\n                    });\n                    $('body').removeClass('iv-bulk-edit');\n                    return;\n                }\n                $(this).addClass('active');\n                $('body').addClass('iv-bulk-edit');\n                let li = $('#annotation-list').find('tr');\n                li.each(function() {\n                    let id = $(this).data('id');\n                    let type = $(this).data('type');\n                    // Find first td.\n                    let td = $(this).find('td').first().find('div');\n                    td.prepend(`<div class=\"form-check form-check-inline iv-mr-0\">\n                        <input class=\"form-check-input\" type=\"checkbox\" data-type=\"${type}\" id=\"annotation-${id}\" value=\"${id}\">\n                        <label class=\"form-check-label\" for=\"annotation-${id}\"></label></div>`);\n                });\n            });\n\n            $(document).on('click', 'tr.annotation .form-check-input', function(e) {\n                e.stopImmediatePropagation();\n                if ($(this).is(':checked')) {\n                    $(this).closest('tr').addClass('b-active');\n                } else {\n                    $(this).closest('tr').removeClass('b-active');\n                }\n\n                let checked = $('#annotation-list').find('tr .form-check-input:checked');\n\n                if (checked.length == 0) {\n                    $('#annotation-list-bulk .bulk-actions').hide();\n                } else {\n                    $('#annotation-list-bulk .bulk-actions').show();\n                }\n            });\n\n            $(document).on('click', '#annotation-list-bulk-delete', async function(e) {\n                e.preventDefault();\n                let ids = [];\n                let types = [];\n                let checked = $('#annotation-list').find('tr .form-check-input:checked');\n                checked.each(function() {\n                    ids.push($(this).val());\n                    types.push($(this).data('type'));\n                });\n                if (ids.length == 0) {\n                    return;\n                }\n                const promises = ids.map((id, index) => {\n                    return new Promise((resolve) => {\n                        let type = types[index];\n                        ctRenderer[type].deleteAnnotation(annotations, id, true);\n                        resolve();\n                    });\n                });\n\n                await Promise.all(promises);\n                dispatchEvent('annotationsdeleted', {\n                    annotations: this.annotations,\n                    ids: ids,\n                });\n            });\n\n            // Bulk deleted\n            $(document).on('annotationsdeleted', function(e) {\n                const ids = e.originalEvent.detail.ids;\n                ids.forEach(function(id) {\n                    $(`tr[data-id=\"${id}\"]`).addClass('deleted');\n                });\n                $('#annotation-list-bulk-edit').trigger('click');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return !ids.includes(item.id);\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactionsdeleted', 'mod_interactivevideo', ids.length), 'success');\n                }, 1000);\n            });\n        }\n    };\n});"],"names":["define","$","addToast","Notification","quickform","player","totaltime","currentTime","dispatchEvent","ctRenderer","playerReady","isRTL","attr","isBS5","hasClass","bsAffix","$loader","replaceProgressBars","percentage","css","renderVideoNav","async","annos","start","length","empty","remove","forEach","render","x","type","renderItemOnVideoNavigation","time","getCurrentTime","init","url","coursemodule","interaction","course","end","coursecontextid","displayoptions","userid","posterimage","extendedcompletion","require","addNotification","msg","add","Number","isNaN","contentTypes","annotations","convertSecondsToHMS","s","dynamic","rounded","Math","round","hours","floor","minutes","seconds","parseFloat","toFixed","activeid","renderAnnotationItems","removeClass","live","addClass","html","M","util","get_string","sort","a","b","timestamp","item","listItem","clone","renderEditItem","xp","filter","map","reduce","text","activeAnno","find","id","postEditCallback","getAnnotations","getItems","ajax","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","courseContextId","getContentTypes","when","done","items","contenttypes","JSON","parse","y","name","getRenderers","Promise","resolve","count","amdmodule","Type","isEditMode","prop","author","authorlink","description","stringify","editMode","validateTimestampFormat","fld","existing","test","val","validateTimeStartEnd","checkduration","checkexisting","checkskipsegment","parts","split","message","skip","annotation","title","runInteraction","modal","not","pause","updateTime","duration","toUpdatetime","cmid","courseid","onReady","MAX_SAFE_INTEGER","isPaused","seek","unMute","audio","passwordprotected","support","playbackrate","quality","t","ratio","usefixedratio","aspectratio","relWidth","width","startPercentage","newStart","append","i","marker","setCaption","e","onEnded","toggleClass","focus","currentAnnotation","tooltip","setTimeout","onSeek","onPlayingInterval","visualized","onPlaying","visualizer","intervalFunction","thisTime","isPlaying","isEnded","cancelAnimationFrame","stop","scrollBar","document","getElementById","rect","getBoundingClientRect","left","right","window","innerWidth","scrollIntoView","behavior","block","inline","frequency","useAnimationFrame","animate","requestAnimationFrame","onPause","VideoPlayer","load","IVPLAYER","on","detail","cacheCleared","success","originalEvent","updated","push","status","removeAttr","target","is","ctype","this","contenttype","hastimestamp","allowmultiple","addAnnotation","preventDefault","closest","editAnnotation","cloneAnnotation","deleteCancelPromise","then","deleteAnnotation","catch","saveCancel","theAnnotation","play","stopImmediatePropagation","offsetX","trigger","hide","siblings","initialValue","key","show","field","value","appendTimestampMarker","formattedTime","targetAnnotation","draggable","resizable","event","ui","position","skipduration","abs","originalPosition","originalSize","size","direction","off","height","localStorage","setItem","drag","offset","playerWidth","getItem","timelineHeight","$scrollbar","parentOffset","relX","pageX","fadeIn","fadeOut","currentLevel","newLevel","parseInt","timelineElement","scrollWidth","clientWidth","ctrlKey","metaKey","deltaY","addEventListener","scrollLeft","style","scrollHeight","draftAnnotations","confirmationMessage","returnValue","rate","setRate","getQualities","currentQuality","qualities","qualitiesLabel","q","dropdown","setQuality","timelineWrapper","resizeObserver","ResizeObserver","observe","importmodal","handle","courses","fullname","localeCompare","courseSelect","shortname","selectfield","cms","cmSelect","cm","after","interactions","int","icon","outside","disabled","inputgroup","hascompletion","$selected","selectedInt","each","$row","trim","tocourse","courseId","fromcourse","tocm","fromcm","module","concat","search","toLowerCase","includes","fastforward","fastForwardInterval","setInterval","clearInterval","rewind","rewindInterval","first","prepend","ids","types","promises","index","all"],"mappings":"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"}