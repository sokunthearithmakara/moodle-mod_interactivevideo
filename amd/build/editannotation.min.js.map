{"version":3,"file":"editannotation.min.js","sources":["../src/editannotation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * Edit interactions module\n *\n * @module     mod_interactivevideo/editannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/toast',\n    'core/notification',\n    'core/event_dispatcher',\n    './quickform',\n    './libraries/jquery-ui',\n\n], function($, addToast, Notification, {dispatchEvent}, quickform) {\n    let ctRenderer = {};\n    let player;\n    let totaltime;\n    let currentTime;\n    let playerReady = false;\n    let $loader = $('#background-loading');\n    /**\n     * Replace the progress bar on the video navigation.\n     * @param {Number} percentage - Percentage to replace the progress bar.\n     * @returns {void}\n     * */\n    const replaceProgressBars = (percentage) => {\n        percentage = percentage < 0 ? 0 : percentage;\n        percentage = percentage > 100 ? 100 : percentage;\n        $('#video-nav #progress').css('width', percentage + '%');\n        $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n    };\n    /**\n     * Render the annotations on the video navigation.\n     * @param {Array} annos - Annotations to render.\n     * @param {Number} start - Start time of the video.\n     * @param {Number} totaltime - Total time of the video.\n     * @returns {void}\n     * */\n    const renderVideoNav = async function(annos, start, totaltime) {\n        if (annos.length == 0) {\n            $(\"#video-nav ul\").empty();\n            return;\n        }\n\n        $(\"#video-nav ul\").empty();\n        $(\"#video-timeline-wrapper .skipsegment\").remove();\n        annos.forEach(async(x) => {\n            const render = ctRenderer[x.type];\n            await render.renderItemOnVideoNavigation(x);\n        });\n\n        const time = await player.getCurrentTime();\n        // Replace progress bar.\n        const percentage = (time - start) / totaltime * 100;\n        replaceProgressBars(percentage);\n        dispatchEvent('annotationitemsrendered', {'annotations': annos});\n    };\n\n    return {\n        /**\n         * Initialize function on page loads.\n         * @param {String} url video url\n         * @param {Number} coursemodule cm id\n         * @param {Number} interaction cm instance\n         * @param {Number} course course id\n         * @param {Number} start video start time\n         * @param {Number} end video end time\n         * @param {Number} coursecontextid course context id\n         * @param {String} type video type\n         * @param {Object} displayoptions display options\n         * @param {Number} userid user id\n         * @param {String} posterimage poster image\n         * @param {String} extendedcompletion extended completion\n         */\n        init: function(url, coursemodule, interaction, course, start, end, coursecontextid,\n            type = 'yt', displayoptions, userid, posterimage, extendedcompletion) {\n\n            quickform();\n\n            /**\n             * Util function to display notification\n             * @param {String} msg message text\n             * @param {String} type message type\n             */\n            const addNotification = (msg, type = \"info\") => {\n                addToast.add(msg, {\n                    type: type\n                });\n            };\n\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            let annotations = []; // Annotations.\n            let contentTypes; // Content types.\n\n            /**\n             * Convert seconds to HH:MM:SS format\n             * @param {Number} s second\n             * @param {Boolean} dynamic if true, only show minutes and seconds if less than one hour\n             * @param {Boolean} rounded if true, second is rounded\n             * @returns formatted timestamp\n             */\n            const convertSecondsToHMS = (s, dynamic = false, rounded = true) => {\n                if (rounded) {\n                    s = Math.round(s);\n                }\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - hours * 3600) / 60);\n                let seconds = s - hours * 3600 - minutes * 60;\n                if (rounded && seconds > 59.5) {\n                    seconds = 0;\n                    minutes++;\n                    if (minutes > 59) {\n                        minutes = 0;\n                        hours++;\n                    }\n                }\n                if (minutes < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                if (rounded) {\n                    seconds = Math.round(seconds);\n                } else {\n                    seconds = parseFloat(seconds).toFixed(2);\n                }\n\n                if (seconds < 10) {\n                    seconds = '0' + seconds;\n                }\n\n                if (dynamic && hours == 0) {\n                    return minutes + ':' + seconds;\n                }\n\n                return (hours < 10 ? '0' + hours : hours) + ':' + minutes + ':' + seconds;\n            };\n\n            let activeid = null; // Current active annotation id. Mainly used when editing to relaunch the interaction afte editing.\n\n            /**\n             * Handle rendering of annotation items on the list\n             * @param {Array} annotations array of annotation objects\n             * @returns\n             */\n            const renderAnnotationItems = (annotations) => {\n                renderVideoNav(annotations, start, totaltime);\n                $('#annotationwrapper .loader').remove();\n                $('#annotation-list').empty().removeClass(\"d-flex align-items-center justify-content-center\");\n                if (annotations.length == 0) {\n                    $('#annotation-list').html(`${M.util.get_string('clickaddtoaddinteraction', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                annotations.sort(function(a, b) {\n                    return Number(a.timestamp) - Number(b.timestamp);\n                });\n\n                annotations.forEach(function(item) {\n                    let listItem = $('#annotation-template').clone();\n                    ctRenderer[item.type].renderEditItem(annotations, listItem, item);\n                });\n\n                let xp = annotations.filter(x => x.xp).map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n                $(\"#xp span\").text(xp);\n\n                if (activeid) {\n                    const activeAnno = annotations.find(x => x.id == activeid);\n                    if (activeAnno) {\n                        ctRenderer[activeAnno.type].postEditCallback(activeAnno);\n                    }\n                }\n            };\n\n            /**\n             * Get annotations from the server and execute the rendering function\n             * @returns\n             */\n            const getAnnotations = () => {\n                const getItems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_all_contenttypes',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                $.when(getItems, getContentTypes).done(async function(items, contenttypes) {\n                    annotations = JSON.parse(items[0]);\n                    contentTypes = JSON.parse(contenttypes[0]);\n                    // Remove all annotations that are not in the enabled content types.\n                    annotations = annotations.filter(x => contentTypes.find(y => y.name === x.type));\n                    const getRenderers = new Promise((resolve) => {\n                        let count = 0;\n                        contentTypes.forEach(x => {\n                            require(['' + x.amdmodule], function(Type) {\n                                ctRenderer[x.name] = new Type(player, annotations, interaction,\n                                    course, 0, 0, 0, 0, type, 0, totaltime, start, end, x, coursemodule,\n                                    null, displayoptions, null, extendedcompletion, {\n                                        isEditMode: true,\n                                    });\n                                count++;\n                                ctRenderer[x.name].init();\n                                if (count == contentTypes.length) {\n                                    resolve(ctRenderer);\n                                }\n                            });\n                        });\n                    });\n                    annotations.map(x => {\n                        let prop = contentTypes.find(y => y.name === x.type);\n                        // Clean up the prop by removing author, authorlink, description;\n                        delete prop.author;\n                        delete prop.authorlink;\n                        delete prop.description;\n                        x.prop = JSON.stringify(prop);\n                        x.editMode = true;\n                        return x;\n                    });\n                    ctRenderer = await getRenderers;\n                    renderAnnotationItems(annotations);\n                });\n            };\n\n            /**\n             * Validate given timestamp against format\n             * @param {String} timestamp formatted timestamp hh:mm:ss\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @returns\n             */\n            const validateTimestampFormat = (timestamp, fld, existing) => {\n                const regex = /^([0-9]{2}):([0-5][0-9]):([0-5][0-9])(\\.\\d{2})?$/;\n                if (!regex.test(timestamp)) {\n                    addNotification(M.util.get_string('invalidtimestampformat', 'mod_interactivevideo'), 'danger');\n                    if (existing) {\n                        $(fld).val(existing);\n                    } else {\n                        $(fld).val(convertSecondsToHMS(start, false, false));\n                    }\n                    return false;\n                }\n                return true;\n            };\n\n            /**\n             * Validate timestamp against start and end time of the video, existing timestamp and skip segments\n             * @param {String} timestamp formatted timestamp\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @param {Number} seconds\n             * @param {Boolean} checkduration if true, check against start and end time\n             * @param {Boolean} checkexisting if true, check against existing annotations\n             * @param {Boolean} checkskipsegment if true, check against skip segments\n             * @returns\n             */\n            const validateTimeStartEnd = (timestamp, fld, existing, seconds, checkduration,\n                checkexisting, checkskipsegment) => {\n                // Convert the timestamp to seconds.\n                const parts = timestamp.split(':');\n                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                // Make sure the timestamp is between start and end.\n                if (checkduration) {\n                    if (timestamp > end || timestamp < start) {\n                        const message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(start, true, false),\n                            \"end\": convertSecondsToHMS(end, true, false)\n                        });\n                        addNotification(message, 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure the timestamp is not already in the list.\n                if (checkexisting) {\n                    if (annotations.find(x => x.timestamp == timestamp) && timestamp != seconds) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure timestamp is not in a skip segment.\n                if (checkskipsegment) {\n                    const skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(timestamp)\n                        && Number(x.title) > Number(timestamp));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(skip.timestamp, true, false),\n                            \"end\": convertSecondsToHMS(skip.title, true, false)\n                        }), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                return timestamp;\n            };\n\n            /**\n             * Run interaction\n             * @param {Object} annotation annotation object\n             */\n            const runInteraction = (annotation) => {\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').not('.sticky').remove();\n                $('#end-screen').remove();\n                player.pause();\n                const activityType = ctRenderer[annotation.type];\n                activityType.runInteraction(annotation);\n            };\n\n            /**\n             * Correct the start and end time.\n             * @param {Number} duration Total duration of the video.\n             * @returns {Object} Object containing start and end time.\n             */\n            const updateTime = async(duration) => {\n                duration = Number(duration);\n                let toUpdatetime = false;\n                if (!end || end == 0) {\n                    toUpdatetime = true;\n                }\n                if (!start || start >= duration || start < 0 || start >= duration) {\n                    toUpdatetime = true;\n                }\n                start = start > duration ? 0 : start;\n                if (toUpdatetime) {\n                    await $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_videotime',\n                            sesskey: M.cfg.sesskey,\n                            cmid: coursemodule,\n                            courseid: course,\n                            id: interaction,\n                            start: start,\n                            end: !end || end == 0 ? duration : end,\n                            contextid: M.cfg.contextid\n                        }\n                    });\n                }\n                end = !end || end == 0 || end > duration ? duration : end;\n                return {start, end};\n            };\n\n            /**\n             * Set of events to run after the video player is ready.\n             */\n            const onReady = async() => {\n                player.pause();\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    await player.seek(start);\n                    onReady();\n                    return;\n                }\n                player.unMute();\n                if (player.audio) {\n                    $('#annotation-canvas').addClass('bg-black');\n                }\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#start-screen').removeClass('d-none');\n                    $('#video-block').removeClass('no-pointer bg-transparent');\n                }\n                if (player.type != 'vimeo'\n                    && player.type != 'html5video'\n                    && player.type != 'panopto'\n                    && player.type != \"peertube\") { // Vimeo/HTML5 does not pause/play on click.\n                    $('#video-block').addClass('no-pointer');\n                }\n\n                if (player.support.playbackrate == false) {\n                    $('#changerate').remove();\n                } else {\n                    $('#changerate').removeClass('d-none');\n                }\n\n                if (player.support.quality == false) {\n                    $('#changequality').remove();\n                } else {\n                    $('#changequality').removeClass('d-none');\n                }\n\n                let t = player.totaltime;\n\n                ({start, end} = await updateTime(t));\n\n                totaltime = end - start;\n                // Recalculate the ratio of the video.\n                let ratio = 16 / 9;\n                if (!displayoptions.usefixedratio || displayoptions.usefixedratio == 0) {\n                    ratio = player.aspectratio;\n                }\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                playerReady = true;\n                $('#annotation-canvas').removeClass('d-none');\n\n                // Handle timeline block.\n                $(\"#timeline-wrapper #video-timeline\").css({\n                    'background-image': 'url(' + posterimage + ')',\n                    'background-size': 'contain',\n                    'background-repeat': 'no-repeat',\n                });\n                $(\"#timeline-wrapper #duration\").text(convertSecondsToHMS(end, true));\n                $(\"#timeline-wrapper #currenttime\").text(convertSecondsToHMS(start, true));\n                // Render minute markers.\n                const minutes = Math.floor(totaltime / 60);\n                $('#timeline-items-wrapper').css('width', (minutes * 300) + 'px'); // 300px per minute as default.\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let startPercentage = 0;\n                let newStart = start;\n                if (start % 60 != 0) {\n                    startPercentage = (60 - (start % 60)) / totaltime * 100;\n                    newStart = start + (60 - (start % 60));\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 0%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n                for (let i = newStart; i <= end; i += 60) {\n                    let percentage = ((i - newStart) / totaltime * 100) + startPercentage;\n                    let marker = '';\n                    // Format h:m (e.g 3h1m).\n                    if (i >= 3600) {\n                        marker = Math.floor(i / 3600) + 'h' + Math.floor((i % 3600) / 60) + 'm';\n                    } else {\n                        marker = Math.floor(i / 60) + 'm';\n                    }\n                    $('#minute-markers').append(`<div class=\"minute-marker position-absolute\"\n                         style=\"left: ${percentage}%;\"><div class=\"text-white minute-label\">${marker}</div></div>`);\n                    $('#minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                            style=\"left: ${percentage}%;\"></div>`);\n                }\n\n                if (end % 60 != 0) {\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 100%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n\n                // Set caption to null.\n                try {\n                    player.setCaption('');\n                } catch (e) {\n                    // Do nothing.\n                }\n\n                $('#scrollbar, #scrollhead-top').css('left', 0);\n\n                getAnnotations();\n            };\n\n            /**\n             * Run when video ended (i.e. arrives at 'end' time)\n             */\n            const onEnded = () => {\n                player.pause();\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n                // Cover the video with a message on a white background div.\n                $('#video-wrapper').append(`<div id=\"end-screen\" class=\"border position-absolute w-100 h-100 bg-white d-flex\n                     justify-content-center align-items-center\" style=\"top: 0; left: 0;\">\n                     <button class=\"btn btn-danger border-0 rounded-circle\" style=\"font-size: 1.5rem;\" id=\"restart\">\n                    <i class=\"bi bi-arrow-repeat\" style=\"font-size: x-large;\"></i></button></div>`);\n                $('#video-nav #progress').css('width', '100%');\n                $('#scrollbar, #scrollhead-top').css('left', '100%');\n                // Focus on the restart button.\n                $('#message #restart').focus();\n\n                // If the current time matches the timestamp of an annotation, highlight the annotation.\n                const currentAnnotation = annotations.find((annotation) => annotation.timestamp == end);\n                if (currentAnnotation) {\n                    $('#annotation-list tr').removeClass('active');\n                    $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                    // Show tooltip for two seconds.\n                    $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                    setTimeout(function() {\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                    }, 2000);\n                }\n            };\n\n            /**\n             * Execute when video is sought\n             * @param {Number} t seconds\n             * @returns\n             */\n            const onSeek = async function(t) {\n                if (!playerReady) {\n                    return;\n                }\n                if (t) {\n                    t = Number(t);\n                } else {\n                    t = await player.getCurrentTime();\n                }\n                if (t > start && t < end) {\n                    $('#end-screen').remove();\n                }\n                const percentage = (t - start) / (totaltime) * 100;\n                $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(t, true));\n                dispatchEvent('timeupdate', {'time': t});\n            };\n\n            let onPlayingInterval;\n            let visualized = false;\n            /**\n             * Excute when video plays (i.e. start or resume)\n             */\n            const onPlaying = async() => {\n                $('#message, #end-screen').not('.sticky').remove();\n                $('#playpause').find('i').removeClass('bi-play-fill').addClass('bi-pause-fill').removeClass('rotate-360');\n                if (player.audio && !visualized) {\n                    player.visualizer();\n                    visualized = true;\n                }\n                const intervalFunction = async function() {\n                    let thisTime = await player.getCurrentTime();\n                    const isPlaying = await player.isPlaying();\n                    const isEnded = await player.isEnded();\n                    if (!isPlaying) {\n                        cancelAnimationFrame(onPlayingInterval);\n                        return;\n                    }\n\n                    if (thisTime < start) {\n                        await player.seek(start);\n                        thisTime = start;\n                    }\n\n                    if (thisTime >= end || isEnded) {\n                        player.stop(end);\n                        cancelAnimationFrame(onPlayingInterval);\n                        onEnded();\n                        return;\n                    }\n                    dispatchEvent('timeupdate', {'time': thisTime});\n                    $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(thisTime, true));\n                    let percentage = (thisTime - start) / (totaltime) * 100;\n                    $('#video-nav #progress').css('width', percentage + '%');\n                    $(\"#scrollbar, #scrollhead-top\").css('left', percentage + '%');\n\n                    // Scroll the timeline so that the current time is in the middle of the timeline.\n                    const scrollBar = document.getElementById('scrollbar');\n                    // Check if the scrollbar is in view.\n                    const rect = scrollBar.getBoundingClientRect();\n                    if (rect.left < 0 || rect.right > window.innerWidth) {\n                        scrollBar.scrollIntoView({behavior: \"instant\", block: \"center\", inline: \"center\"});\n                    }\n\n                    // If the current time matches the timestamp of an annotation, highlight the annotation\n                    const currentAnnotation = annotations.find(x => (thisTime - player.frequency) <= x.timestamp\n                        && (thisTime + player.frequency) >= x.timestamp);\n                    if (currentAnnotation) {\n                        $('#annotation-list tr').removeClass('active');\n                        $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                        setTimeout(function() {\n                            $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                        }, 2000);\n                    }\n\n                    // If current time is within the skipsegment, seek to the end of the segment.\n                    let skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    let skip = skipsegments.find(x => Number(x.timestamp) < Number(thisTime)\n                        && Number(x.title) > Number(thisTime));\n                    if (skip) {\n                        await player.seek(Number(skip.title));\n                        // Replace the progress bar.\n                        percentage = (skip.title - start) / totaltime * 100;\n                        replaceProgressBars(percentage);\n                    }\n                };\n                if (player.useAnimationFrame) {\n                    const animate = async() => {\n                        const isPlaying = await player.isPlaying();\n                        if (isPlaying) {\n                            intervalFunction();\n                            onPlayingInterval = requestAnimationFrame(animate);\n                        }\n                    };\n                    onPlayingInterval = requestAnimationFrame(animate);\n                } else {\n                    const isPlaying = await player.isPlaying();\n                    if (isPlaying) {\n                        intervalFunction();\n                    }\n                }\n            };\n\n            /**\n             * Excute when video is paused.\n             */\n            const onPause = () => {\n                cancelAnimationFrame(onPlayingInterval);\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + type], function(VideoPlayer) {\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#video-block').addClass('no-pointer bg-transparent');\n                    $('#annotation-canvas').removeClass('d-none');\n                }\n                player = new VideoPlayer();\n                player.load(\n                    url,\n                    start,\n                    end,\n                    {\n                        'customStart': true,\n                        'passwordprotected': displayoptions.passwordprotected == 1,\n                        'showControls': false,\n                    }\n                );\n                window.IVPLAYER = player;\n            });\n\n            $(document).on('iv:playerReady', function() {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function() {\n                onPause();\n            });\n\n            $(document).on('iv:playerPlaying', function() {\n                onPlaying();\n            });\n\n            $(document).on('iv:playerEnded', function() {\n                onEnded();\n            });\n\n            $(document).on('iv:playerSeek', function(e) {\n                onSeek(e.detail.time);\n            });\n\n            $(document).on('iv:playerError', function() {\n                addNotification(M.util.get_string('thereisanissueloadingvideo', 'mod_interactivevideo'), 'danger');\n                $('#annotation-canvas').removeClass('d-none');\n                $('#start-screen').addClass('d-none');\n                $('#video-block').addClass('no-pointer bg-transparent');\n                $('#spinner').remove();\n                $('.loader').removeClass('loader');\n            });\n\n            // Post annotation update (add, edit, clone).\n            let cacheCleared = false;\n            $(document).on('annotationupdated', function(e) {\n                if (!cacheCleared) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_ivitems_cache',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            cmid: interaction,\n                        },\n                        success: function() {\n                            cacheCleared = true;\n                        }\n                    });\n                }\n                const action = e.originalEvent.detail.action;\n                if (action == 'import') {\n                    annotations = e.originalEvent.detail.annotations;\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactionimported', 'mod_interactivevideo'), 'success');\n                    return;\n                }\n                let updated = e.originalEvent.detail.annotation;\n                if (action == 'edit' || action == 'draft' || action == 'savedraft') {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != updated.id;\n                    });\n                }\n                updated.prop = JSON.stringify(contentTypes.find(x => x.name === updated.type));\n                annotations.push(updated);\n                if (action == 'add') {\n                    activeid = updated.id;\n                } else {\n                    activeid = null;\n                }\n                annotations.map(x => {\n                    x.editMode = true;\n                    return x;\n                });\n                renderAnnotationItems(annotations);\n                if (action == 'add' || action == 'clone') {\n                    addNotification(M.util.get_string('interactionadded', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                } else if (action == 'edit') {\n                    addNotification(M.util.get_string('interactionupdated', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    setTimeout(function() {\n                        $(`tr[data-id=\"${updated.id}\"]`).removeClass('active');\n                    }, 1500);\n                }\n\n                // If draft exists, activate the save button.\n                if (annotations.find(x => x.status == 'draft')) {\n                    $('#timeline-wrapper #savedraft').removeAttr('disabled').addClass('pulse');\n                } else {\n                    $('#timeline-wrapper #savedraft').attr('disabled', 'disabled').removeClass('pulse');\n                }\n            });\n\n            // Re-render annotation list and timeline after an annotation is deleted.\n            $(document).on('annotationdeleted', function(e) {\n                const annotation = e.originalEvent.detail.annotation;\n                activeid = null;\n                $(`tr[data-id=\"${annotation.id}\"]`).addClass('deleted');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != annotation.id;\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactiondeleted', 'mod_interactivevideo'), 'success');\n                }, 1000);\n            });\n\n            // Implement create annotation\n            $(document).on('click', '#addcontentdropdown .dropdown-item', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                // Check if the target item is a link.\n                if ($(e.target).is('a')) {\n                    return;\n                }\n\n                const ctype = $(this).data('type');\n                player.pause();\n                let timestamp = currentTime || await player.getCurrentTime();\n                timestamp = Number(timestamp.toFixed(2));\n                const contenttype = contentTypes.find(x => x.name == ctype);\n                if (contenttype.hastimestamp) {\n                    if (annotations.find(x => x.timestamp == timestamp)) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                    // Check skip segments\n                    const skipsegments = annotations.filter(x => x.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(currentTime)\n                        && Number(x.title) > Number(currentTime));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                }\n                if (!contenttype.allowmultiple && annotations.find(x => x.type == ctype)) {\n                    addNotification(M.util.get_string(\n                        'thisinteractionalreadyexists', 'mod_interactivevideo', contenttype.title), 'danger');\n                    return;\n                }\n                currentTime = null;\n                ctRenderer[ctype].addAnnotation(annotations, timestamp, coursemodule);\n            });\n\n            // Implement edit annotation\n            $(document).on('click', 'tr.annotation .edit', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].editAnnotation(annotations, id, coursemodule);\n                if (timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n            });\n\n            // Implement copy annotation\n            $(document).on('click', 'tr.annotation .copy', async function(e) {\n                e.preventDefault();\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                const time = await player.getCurrentTime();\n                ctRenderer[contenttype].cloneAnnotation(id, time);\n            });\n\n            // Implement delete annotation.\n            $(document).on('click', 'tr.annotation .delete', function(e) {\n                e.preventDefault();\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const annotation = annotations.find(annotation => annotation.id == id);\n                try {\n                    Notification.deleteCancelPromise(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                    ).then(() => {\n                        return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                    }).catch(() => {\n                        return;\n                    });\n                } catch {\n                    Notification.saveCancel(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                        function() {\n                            return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                        }\n                    );\n                }\n\n\n            });\n\n            // Implement view annotation.\n            $(document).on('click', 'tr.annotation .title', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                // Update the progress bar.\n                const percentage = (timestamp - start) / totaltime * 100;\n                replaceProgressBars(percentage);\n                let currentTime = await player.getCurrentTime();\n                if (currentTime != timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const theAnnotation = annotations.find(annotation => annotation.id == id);\n                setTimeout(() => {\n                    runInteraction(theAnnotation);\n                }, 500);\n            });\n\n            // Implement go to timestamp.\n            $(document).on('click', 'tr.annotation .timestamp', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).data('timestamp');\n                await player.seek(timestamp);\n                player.play();\n            });\n\n            // Right click on the video nav or video timeline to add a new interaction.\n            $(document).on('contextmenu', '#vseek, #video-timeline', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                currentTime = (percentage * totaltime) + start;\n                await player.seek(currentTime);\n                player.pause();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Right click on the scrollbar to add a new interaction.\n            $(document).on('contextmenu', '#scrollbar, #scrollhead-top', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                currentTime = await player.getCurrentTime();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Click the play/pause button on the timeline region to pause/play video.\n            $(document).on('click', '#playpause', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                // Pause or resume the video.\n                let isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                } else {\n                    let t = await player.getCurrentTime();\n                    if (t >= end) {\n                        $('#end-screen #restart').trigger('click');\n                    } else {\n                        player.play();\n                    }\n                }\n            });\n\n            $(document).on('click', '#video-block', function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $('#playpause').trigger('click');\n            });\n\n            // Right click on the annotation indicator to edit the annotation.\n            $(document).on('contextmenu', '#video-nav .annotation', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                // Trigger click on the edit button.\n                $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n            });\n\n            // Quick edit.\n            $(document).on('contextmenu', '[data-editable]', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($('[data-field].editing').length > 0) {\n                    return;\n                }\n                const fld = $(this).data('editable');\n                $(this).hide();\n                $(this).siblings('[data-field=\"' + fld + '\"]').removeClass('d-none').focus().addClass('editing');\n                if (fld == 'timestamp') {\n                    $(this).closest('tr')\n                        .append(`<div class=\"timestamp-info position-absolute\">\n                        ${M.util.get_string('rightclicktosetcurrenttime', 'mod_interactivevideo')}</div>`);\n                }\n            });\n\n            $(document).on('contextmenu', '[data-field=\"timestamp\"]', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const time = await player.getCurrentTime();\n                $(this).val(convertSecondsToHMS(time, false, false));\n            });\n\n            $(document).on('keyup', '[data-field].editing', function(e) {\n                $(this).removeClass('is-invalid');\n                const initialValue = $(this).data('initial-value');\n                const val = $(this).val();\n                const fld = $(this).data('field');\n                if (val == '') {\n                    $(this).addClass('is-invalid');\n                }\n\n                // If escape key is pressed, revert the value.\n                if (e.key == 'Escape') {\n                    $(this).val(initialValue);\n                    $(this).removeClass('editing');\n                    $(this).addClass('d-none');\n                    $(this).siblings('[data-editable]').show();\n                    $('.timestamp-info').remove();\n                    return;\n                }\n                // If enter key is pressed, save the value.\n                if (e.key == 'Enter') {\n\n                    let seconds;\n                    if (fld == 'timestamp') {\n                        const parts = initialValue.split(':');\n                        seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!validateTimestampFormat(val, '[data-field].editing', initialValue)) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        const timestamp = validateTimeStartEnd(val, '[data-field].editing', initialValue, seconds,\n                            true, true, true);\n                        if (timestamp == -1) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        seconds = timestamp;\n                    }\n\n                    if ($(this).hasClass('is-invalid')) {\n                        return;\n                    }\n                    if (val == initialValue) {\n                        $(this).removeClass('editing');\n                        $(this).addClass('d-none');\n                        $(this).siblings('[data-editable]').show();\n                        return;\n                    }\n                    const id = $(this).data('id');\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: id,\n                            field: fld,\n                            contextid: M.cfg.contextid,\n                            value: fld == 'timestamp' ? seconds : val,\n                        },\n                        success: function(data) {\n                            $('.timestamp-info').remove();\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'edit'\n                            });\n                        }\n                    });\n                    return;\n                }\n            });\n\n            $(document).on('blur', '[data-field].editing', function() {\n                const initialValue = $(this).data('initial-value');\n                $(this).val(initialValue);\n                $(this).removeClass('editing');\n                $(this).addClass('d-none');\n                $(this).siblings('[data-editable]').show();\n                $('.timestamp-info').remove();\n            });\n            // End quick edit.\n\n            $(document).on('click', '#end-screen #restart', async function(e) {\n                e.preventDefault();\n                $('#end-screen').remove();\n                await player.seek(start);\n                player.play();\n            });\n\n            // Display tooltip on anntation indicator when annotation on the list is hovered.\n            $(document).on('mouseover', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseover');\n            });\n\n            // Remove tooltip when annotation on the list is not hovered.\n            $(document).on('mouseout', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseout');\n                $('.tooltip').remove();\n            });\n\n            // Highlight annotation on the list when annotation indicator is hovered.\n            $(document).on('mouseover', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).addClass('active');\n            });\n\n            // Remove highlight when annotation indicator is not hovered.\n            $(document).on('mouseout', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).removeClass('active');\n            });\n\n            // Validate timestamp when the timestamp field is changed.\n            $(document).on('change', '.timestamp-input, .timestamp-field input', function() {\n                $(this).removeClass('is-invalid');\n                const parts = $(this).val().split(':');\n                const seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                if (!validateTimestampFormat($(this).val(), this)) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n\n                const timestamp = validateTimeStartEnd($(this).val(), this, \"00:00:00\", seconds, true, false, true);\n\n                if (timestamp == -1) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n            });\n\n            const appendTimestampMarker = (seconds, rounded) => {\n                const formattedTime = convertSecondsToHMS(seconds, true, rounded);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n            };\n\n            $(document).on('annotationitemsrendered', function() {\n                $('#timeline-wrapper [data-toggle=\"tooltip\"]').tooltip({\n                    'boundary': 'window',\n                    'container': '#timeline',\n                });\n                // Put the minute markers on the timeline;\n                let targetAnnotation = null;\n                // Destroy draggable and resizable if already initialized.\n                try {\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').draggable('destroy');\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').resizable('destroy');\n                } catch (e) {\n                    // Do nothing.\n                }\n                $('#timeline-items .annotation.li-draggable').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('.tooltip, #message').remove();\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        $('.tooltip').remove();\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            ui.position.left = -5;\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            ui.position.left = $('#timeline-items').width() - 5;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        $(this).css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('.tooltip').remove();\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            $(this).css('left', '-5px');\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            $(this).css('left', 'calc(100% - 5px)');\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                        }\n\n                        if (timestamp > end) {\n                            timestamp = end;\n                        }\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let skipduration = Number(targetAnnotation.title) - Number(targetAnnotation.timestamp);\n                        if (timestamp < 0 && timestamp + skipduration < start) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp > end) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp < start) {\n                            skipduration = skipduration - Math.abs(start - timestamp);\n                            timestamp = start;\n                        }\n                        if (timestamp + skipduration > end) {\n                            skipduration = Math.abs(end - timestamp);\n                            timestamp = end - skipduration;\n                        }\n                        if (skipduration <= 0) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.title = timestamp + skipduration;\n                        if (targetAnnotation.title > end) {\n                            targetAnnotation.title = end;\n                        }\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').resizable({\n                    'containment': '#video-timeline-wrapper',\n                    'handles': 'e, w',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'resize': async function(event, ui) {\n                        let timestamp;\n                        if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp, direction;\n                        if (ui.originalPosition.left != ui.position.left) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"left\";\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"right\";\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        if (direction == \"left\") {\n                            targetAnnotation.timestamp = timestamp;\n                        } else {\n                            targetAnnotation.title = timestamp;\n                            if (targetAnnotation.title > end) {\n                                targetAnnotation.title = end;\n                            }\n                        }\n                        targetAnnotation.status = 'draft';\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('contextmenu').on('contextmenu', function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    const id = $(this).data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('click').on('click', async function(e) {\n                    e.preventDefault();\n                    const timestamp = $(this).data('timestamp');\n                    await player.seek(timestamp);\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment .delete-skipsegment').off('click').on('click', function(e) {\n                    e.preventDefault();\n                    const id = $(this).closest('.skipsegment').data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .delete`).trigger('click');\n                });\n            });\n\n            $('#scrollbar').draggable({\n                'containment': '#timeline-items',\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#timeline-items').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#timeline-items').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#timeline-items').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            $('#scrollhead-top').draggable({\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#vseek').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#vseek').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#vseek').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            // Resize timeline.\n            $('#timeline-wrapper').resizable({\n                'handles': 'n',\n                'minHeight': 125,\n                'maxHeight': 500,\n                'start': function() {\n                    $('#top-region, #timeline-wrapper').addClass('no-pointer-events');\n                },\n                'resize': function(event, ui) {\n                    $('#top-region').css('height', `calc(100dvh - ${ui.size.height + 70}px)`);\n                },\n                'stop': function() {\n                    $('#top-region, #timeline-wrapper').removeClass('no-pointer-events');\n                    localStorage.setItem('timeline-height', $('#timeline-wrapper').height());\n                }\n            });\n\n            // Resize player region.\n            $('#separator').draggable({\n                'axis': 'x',\n                'containment': '#wrapper',\n                'grid': [1, 0],\n                'start': function() {\n                    $('#wrapper').addClass('no-pointer-events');\n                },\n                drag: function() {\n                    const parentOffset = $(this).offset();\n                    const width = parentOffset.left;\n                    $('#player-region').css('width', width + 'px');\n                    $('#content-region').css('width', 'calc(100% - ' + width + 'px)');\n                },\n                stop: function() {\n                    const width = $(this).offset().left;\n                    // Save this to local storage\n                    localStorage.setItem('player-width', width);\n                    $('#wrapper').removeClass('no-pointer-events');\n                }\n            });\n\n            // Set player region width from the saved width in local storage.\n            const playerWidth = localStorage.getItem('player-width');\n            if (playerWidth && window.innerWidth > 992) {\n                $('#separator').css('left', playerWidth + 'px');\n                $('#player-region').css('width', playerWidth + 'px');\n                $('#content-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n            }\n\n            // Set timeline height from saved height in local storage.\n            const timelineHeight = localStorage.getItem('timeline-height');\n            if (timelineHeight) {\n                $('#timeline-wrapper').css('height', timelineHeight + 'px');\n                $('#top-region').css('height', `calc(100dvh - ${Number(timelineHeight) + 70}px)`);\n            }\n\n            // Seek bar functionalities\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseenter', function(e) {\n                $('#cursorbar, #position-marker').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                // First clone the #scrollbar and place it where the cursor is.\n                let $scrollbar = $('#scrollbar').clone();\n                $scrollbar.attr('id', 'cursorbar');\n\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n\n                $scrollbar.css('left', (relX + 5) + 'px');\n                $scrollbar.find('#scrollhead').remove();\n                const percentage = relX / $(this).width();\n                const time = percentage * (totaltime) + start;\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n                $('#vseek #position-marker').css('left', relX + 'px');\n                $('#timeline-items').append($scrollbar);\n            });\n\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseleave', function(e) {\n                e.stopImmediatePropagation();\n                $('#vseek #position-marker, #cursorbar').remove();\n            });\n\n            $('#vseek #bar, #video-timeline').on('mousemove', function(e) {\n                e.stopImmediatePropagation();\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                const percentage = relX / $(this).width();\n                let time = percentage * (totaltime) + start;\n                if (time < start) {\n                    time = start;\n                }\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                // Move the cursorbar\n                $('#cursorbar').css('left', (relX + 5) + 'px');\n                $('#vseek #position').text(formattedTime);\n                $('#vseek #position-marker').css('left', relX + 'px');\n            });\n\n            // Run interaction when annotation indicator is clicked.\n            $(document).on('click', '#video-nav .annotation', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                const annotation = annotations.find(x => x.id == id);\n                $loader.fadeIn(300);\n                if (await player.getCurrentTime() != annotation.timestamp) {\n                    await player.seek(annotation.timestamp);\n                }\n                $loader.fadeOut(300);\n                runInteraction(annotation);\n            });\n\n            // Seek video on click on timeline or video nav.\n            $(document).on('click', '#vseek #bar, #video-timeline', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                $loader.fadeIn(300);\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    player.pause();\n                }\n                await player.seek((percentage * totaltime) + start);\n                $loader.fadeOut(300);\n                $(\"#message, #end-screen\").remove();\n            });\n\n            // Implement timeline zoom out.\n            $('#zoomout').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) - 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let timelineElement = document.getElementById('timeline');\n                if (timelineElement.scrollWidth <= timelineElement.clientWidth) {\n                    $(this).attr('disabled', 'disabled');\n                }\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement timeline zoom in.\n            $('#zoomin').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) + 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                $('#zoomout').removeAttr('disabled');\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement zoom in and zoom out on mouse scroll on timeline.\n            $(\"#timeline\").on('wheel', function(e) {\n                if (e.ctrlKey || e.metaKey) {\n                    e.preventDefault();\n                    if (e.originalEvent.deltaY < 0) {\n                        $('#zoomin').trigger('click');\n                    } else {\n                        $('#zoomout').trigger('click');\n                    }\n                }\n            });\n\n            document.getElementById('timeline').addEventListener('scroll', function() {\n                document.getElementById('minute-markers-wrapper').scrollLeft = this.scrollLeft;\n                document.getElementById('vseek').style.left = -this.scrollLeft + 'px';\n                document.getElementById('minute-markers-bg-wrapper').style.left = -this.scrollLeft + 'px';\n                document.getElementById('scrollbar').scrollHeight = this.scrollHeight;\n            });\n\n            // Save timeline changes.\n            $('#savedraft').on('click', function(e) {\n                e.stopImmediatePropagation();\n                let draftAnnotations = annotations.filter(x => x.status == 'draft');\n                let count = 0;\n                draftAnnotations.forEach(function(a) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: a.id,\n                            field: 'timestamp',\n                            contextid: M.cfg.contextid,\n                            value: a.timestamp,\n                        },\n                        success: function(data) {\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'savedraft'\n                            });\n                        }\n                    });\n                    if (a.type == 'skipsegment') {\n                        $.ajax({\n                            url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                            method: \"POST\",\n                            dataType: \"text\",\n                            data: {\n                                action: 'quick_edit_field',\n                                sesskey: M.cfg.sesskey,\n                                id: a.id,\n                                field: 'title',\n                                contextid: M.cfg.contextid,\n                                value: a.title,\n                            },\n                            success: function(data) {\n                                const updated = JSON.parse(data);\n                                dispatchEvent('annotationupdated', {\n                                    annotation: updated,\n                                    action: 'savedraft'\n                                });\n                            }\n                        });\n                    }\n                    count++;\n                    if (count == draftAnnotations.length) {\n                        addNotification(M.util.get_string('draftsaved', 'mod_interactivevideo'), 'success');\n                    }\n                });\n\n            });\n\n            // Launch content selection modal.\n            $('#addcontent').on('click', async function(e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n                $('#contentmodal').modal('show');\n            });\n\n            $('#contentmodal').on('show.bs.modal', function() {\n                player.pause();\n                $('#addcontentdropdown').addClass('modal-body');\n            });\n\n            $('#contentmodal').on('hide.bs.modal', function() {\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                $('#addcontentdropdown').removeClass('modal-body');\n            });\n\n            // Inform user to save changes before close or unload the current page.\n            window.addEventListener('beforeunload', (e) => {\n                if (annotations.find(x => x.status == 'draft')) {\n                    const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                    e.returnValue = confirmationMessage;\n                    return confirmationMessage;\n                }\n                return true;\n            });\n\n            // Implement the rate change.\n            $(document).on('click', '.changerate', function(e) {\n                e.preventDefault();\n                const rate = $(this).data('rate');\n                player.setRate(rate);\n                $('.changerate').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            $(document).on('iv:playerRateChange', function(e) {\n                $('.changerate').find('i').removeClass('bi-check');\n                $(`.changerate[data-rate=\"${e.originalEvent.detail.rate}\"]`).find('i').addClass('bi-check');\n            });\n\n            // Handle video control:: Quality change\n            $(\"#changequality\").on('shown.bs.dropdown', async function() {\n                let quality = await player.getQualities();\n                $('#qualitieslist').empty();\n                let currentQuality = quality.currentQuality;\n                if (currentQuality === null) {\n                    currentQuality = $(this).data('current');\n                }\n                let qualities = quality.qualities;\n                let qualitiesLabel = quality.qualitiesLabel;\n                qualities.forEach((q, i) => {\n                    $('#qualitieslist').append(`<a class=\"dropdown-item changequality\" data-quality=\"${q}\"\n                         href=\"#\"><i class=\"bi ${q == currentQuality ? 'bi-check' : ''} fa-fw ml-n3\"></i>${qualitiesLabel[i]}</a>`);\n                });\n                $(this).find('[data-toggle=dropdown]').dropdown('update');\n            });\n\n            $(document).on('click', '.changequality', function(e) {\n                e.preventDefault();\n                const quality = $(this).data('quality');\n                player.setQuality(quality);\n                $('.changequality').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            // Observe timeline-wrapper width change.\n            let timelineWrapper = document.getElementById('timeline-wrapper');\n            let resizeObserver = new ResizeObserver(() => {\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n            });\n\n            resizeObserver.observe(timelineWrapper);\n\n            // Implement import content\n            $(document).on('click', '#importcontent', function(e) {\n                e.preventDefault();\n                const importmodal = `<div class=\"modal fade\" id=\"importmodal\" tabindex=\"-1\" aria-labelledby=\"importmodalLabel\"\n                 aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"importmodalLabel\">\n                                ${M.util.get_string('importcontent', 'mod_interactivevideo')}</h5>\n                                <button type=\"button\" class=\"btn p-0 border-0\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary border-0\" data-dismiss=\"modal\">\n                                ${M.util.get_string('cancel', 'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary border-0\" id=\"importcontentbutton\">\n                                ${M.util.get_string('import', 'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(importmodal);\n                $('#importmodal').modal('show');\n\n                $('#importmodal').on('hidden.bs.modal', function() {\n                    $('#importmodal').remove();\n                });\n\n                $('#importmodal').off('shown.bs.modal').on('shown.bs.modal', function() {\n                    // Make the modal draggable.\n                    $('#importmodal .modal-dialog').draggable({\n                        handle: \".modal-header\"\n                    });\n                    // Render the course select dropdown.\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'get_taught_courses',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            userid: userid\n                        },\n                        success: function(data) {\n                            let courses = JSON.parse(data);\n                            // Sort courses by name.\n                            courses.sort((a, b) => a.fullname.localeCompare(b.fullname));\n                            let courseSelect = `<select class=\"custom-select w-100\" id=\"importcourse\">`;\n                            courses.forEach(course => {\n                                courseSelect += `<option value=\"${course.id}\">${course.fullname} (${course.shortname})</option>`;\n                            });\n                            courseSelect += `</select>`;\n                            let selectfield = `<div class=\"form-group selectcourse\">\n                            <label class=\"font-weight-bold\" for=\"importcourse\">\n                            ${M.util.get_string('selectcourse', 'mod_interactivevideo')}</label>\n                            ${courseSelect}</div>`;\n                            $('#importmodal .modal-body').append(selectfield);\n                            // Default current course.\n                            $('#importmodal #importcourse').val(course);\n                            $('#importmodal #importcourse').trigger('change');\n                        }\n                    });\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcourse', function() {\n                $(`#importmodal .selectcm, #importmodal .select-interaction`).remove();\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_cm_by_courseid',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: $(this).val()\n                    },\n                    success: function(data) {\n                        let cms = JSON.parse(data);\n                        cms.sort((a, b) => a.name.localeCompare(b.name));\n                        let cmSelect = `<select class=\"custom-select w-100\" id=\"importcm\">\n                        <option value=\"\">${M.util.get_string('select', 'mod_interactivevideo')}</option>`;\n                        cms.forEach(cm => {\n                            cmSelect += `<option value=\"${cm.id}\" ${cm.id == interaction ? 'disabled' : ''}>${cm.name}</option>`;\n                        });\n                        cmSelect += `</select>`;\n                        let selectfield = `<div class=\"form-group selectcm\">\n                        <label for=\"importcm\" class=\"font-weight-bold\">\n                        ${M.util.get_string('selectactivity', 'mod_interactivevideo')}</label>\n                        ${cmSelect}</div>`;\n                        $(`#importmodal .selectcourse`).after(selectfield);\n                    }\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcm', async function() {\n                $(`#importmodal .select-interaction`).remove();\n                $(`#importmodal #importcm`).after(`<div class=\"select-interaction py-3\">\n                    <iframe src=\"${M.cfg.wwwroot + '/mod/interactivevideo/view.php?i=' + $(this).val()}&embed=1&preview=1\"\n                    frameborder=0 width=\"100%\" height=\"500\" class=\"loader\"></iframe></div>`);\n                let interactions = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: $(this).val(),\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n                interactions = JSON.parse(interactions);\n                interactions = interactions.filter(x => x.type != 'skipsegment');\n                if (interactions.length == 0) {\n                    $(`#importmodal .select-interaction`).append(`<div class=\"alert alert-warning mt-3\">\n                        ${M.util.get_string('nocontent', 'mod_interactivevideo')}</div>`);\n                    return;\n                }\n\n                $(`#importmodal .select-interaction`).append(`<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\n                     no-pointer\">\n                     <div class=\"input-group-prepend border-0 invisible\">\n                            <label class=\"input-group-text bg-white\">\n                                <input type=\"checkbox\"/>\n                                <i class=\"bi bi-plus ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control border-0 font-weight-bold\"\n                 value=\"${M.util.get_string('title', 'mod_interactivevideo')}\">\n                <input type=\"text\" class=\"form-control border-0 font-weight-bold\" style=\"max-width: 50px;\"\n                value=\"XP\">\n                <input type=\"text\" style=\"max-width: 150px;\" value=\"${M.util.get_string('timestamp', 'mod_interactivevideo')}\"\n                 class=\"form-control border-0 font-weight-bold\"></div>`);\n\n                interactions = interactions.map(int => {\n                    // Get the icon and check if the interaction is out of range (start, end time);\n                    const ctype = contentTypes.find(y => y.name === int.type);\n                    int.prop = JSON.stringify(ctype);\n                    int.icon = ctype.icon;\n                    if ((int.timestamp > end || int.timestamp < start) && int.timestamp > 0) {\n                        int.outside = true;\n                    } else {\n                        int.outside = false;\n                    }\n                    // Check if the interaction can be added (e.g. annotation content type can only be added once per activity);\n                    if (!ctype.allowmultiple && annotations.find(x => x.type == int.type)) {\n                        int.disabled = true;\n                    }\n                    return int;\n                });\n\n                interactions.sort((a, b) => a.timestamp - b.timestamp);\n                interactions.forEach(int => {\n                    const inputgroup = `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\"\n                     data-id=\"${int.id}\">\n                        <div class=\"input-group-prepend\">\n                            <label class=\"input-group-text\">\n                                <input type=\"checkbox\" ${int.disabled ? 'disabled' : ''}/>\n                                <i class=\"${int.icon} ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control name\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 value=\"${int.title}\">\n                <input type=\"text\" style=\"max-width: 50px;\" ${int.timestamp < 0 || int.hascompletion == 0 ? 'readonly' : ''}\n                 class=\"form-control xp\" value=\"${int.xp}\">\n                <input type=\"text\" placeholder=\"00:00:00\" style=\"max-width: 150px;\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 class=\"form-control timestamp-input ${int.outside ? 'is-invalid' : ''}\"\n                value=\"${int.timestamp < 0 ? int.timestamp :\n                            convertSecondsToHMS(int.timestamp, false, false)}\"></div>`;\n                    $(`#importmodal .select-interaction`).append(inputgroup);\n                });\n\n                $(document).off('click', '#importmodal #importcontentbutton').on('click', '#importmodal #importcontentbutton',\n                    async function(e) {\n                        e.preventDefault();\n                        let $selected = $(`#importmodal .select-interaction input[type=\"checkbox\"]:checked`);\n                        let selectedInt = [];\n                        $selected.each(function() {\n                            let $row = $(this).closest('.input-group');\n                            const name = $row.find('.name').val();\n                            if (name.trim() == '') {\n                                return;\n                            }\n                            let timestamp = $row.find('.timestamp-input').val();\n                            if (timestamp == '') {\n                                return;\n                            }\n\n                            if (Number(timestamp) < 0) {\n                                timestamp = Number(timestamp);\n                            } else {\n                                const parts = timestamp.split(':');\n                                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                                if (annotations.find(x => x.timestamp == timestamp)) {\n                                    return;\n                                }\n                            }\n                            let id = $row.data('id');\n                            let int = interactions.find(x => x.id == id);\n                            int.title = name;\n                            int.timestamp = timestamp;\n                            let xp = Number($row.find('.xp').val());\n                            if (isNaN(xp) || xp == '') {\n                                xp = 0;\n                            }\n                            int.xp = xp;\n                            selectedInt.push(int);\n                        });\n                        if (selectedInt.length == 0) {\n                            addNotification(M.util.get_string('selectinteraction', 'mod_interactivevideo'), 'danger');\n                            return;\n                        } else {\n                            let interactions = await $.ajax({\n                                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                                method: \"POST\",\n                                dataType: \"text\",\n                                data: {\n                                    action: 'import_annotations',\n                                    sesskey: M.cfg.sesskey,\n                                    contextid: M.cfg.contextid,\n                                    annotations: JSON.stringify(selectedInt),\n                                    tocourse: M.cfg.courseId,\n                                    fromcourse: $('#importcourse').val(),\n                                    tocm: interaction,\n                                    fromcm: $('#importcm').val(),\n                                    module: coursemodule\n                                }\n                            });\n                            interactions = JSON.parse(interactions);\n\n                            // Dismiss modal.\n                            $('#importmodal').modal('hide');\n\n                            // Add the imported annotations to the current annotations.\n                            annotations = annotations.concat(interactions);\n                            dispatchEvent('annotationupdated', {\n                                annotations: annotations,\n                                action: 'import'\n                            });\n\n                            // Get interaction that allowmultiple false and init each one.\n                            interactions.forEach(int => {\n                                if (!int.allowmultiple) {\n                                    ctRenderer[int.type].init();\n                                }\n                            });\n                        }\n                    });\n            });\n\n            // Implement content type filter.\n            $(document).on('keyup', '#contentmodal #contentsearch', function() {\n                let search = $(this).val().toLowerCase();\n\n                $('#addcontentdropdown .dropdown-item').removeClass('d-none').addClass('d-flex');\n\n                if (search == '') {\n                    return;\n                }\n\n                $('#contentmodal #addcontentdropdown .dropdown-item').each(function() {\n                    let text = $(this).find('.contenttype-title').text().toLowerCase();\n                    if (text.includes(search)) {\n                        $(this).addClass('d-flex').removeClass('d-none');\n                    } else {\n                        $(this).addClass('d-none').removeClass('d-flex');\n                    }\n                });\n            });\n\n            // Implement fast forward and rewind.\n            const fastforward = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time >= end) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time += 1;\n                } else {\n                    time += 0.2;\n                }\n                if (time > end) {\n                    time = end;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastforward(e);\n            });\n\n            let fastForwardInterval;\n            $(document).on('mousedown', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastForwardInterval = setInterval(async() => {\n                    fastforward(e);\n                    if (await player.getCurrentTime() >= end) {\n                        clearInterval(fastForwardInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#fast-forward', function() {\n                clearInterval(fastForwardInterval);\n            });\n\n            const rewind = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time <= start) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time -= 1;\n                } else {\n                    time -= 0.2;\n                }\n                if (time < start) {\n                    time = start;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#rewind', async function(e) {\n                e.preventDefault();\n                rewind(e);\n            });\n\n            let rewindInterval;\n            $(document).on('mousedown', '#rewind', async function(e) {\n                e.preventDefault();\n                rewindInterval = setInterval(async() => {\n                    rewind(e);\n                    if (await player.getCurrentTime() <= start) {\n                        clearInterval(rewindInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#rewind', function() {\n                clearInterval(rewindInterval);\n            });\n\n            // Remove all event listeners before leaving the page.\n            window.addEventListener('beforeunload', function() {\n                $(document).off();\n                cancelAnimationFrame(onPlayingInterval);\n            });\n        }\n    };\n});"],"names":["define","$","addToast","Notification","quickform","player","totaltime","currentTime","dispatchEvent","ctRenderer","playerReady","$loader","replaceProgressBars","percentage","css","renderVideoNav","async","annos","start","length","empty","remove","forEach","render","x","type","renderItemOnVideoNavigation","time","getCurrentTime","init","url","coursemodule","interaction","course","end","coursecontextid","displayoptions","userid","posterimage","extendedcompletion","addNotification","msg","add","Number","isNaN","contentTypes","annotations","convertSecondsToHMS","s","dynamic","rounded","Math","round","hours","floor","minutes","seconds","parseFloat","toFixed","activeid","renderAnnotationItems","removeClass","html","M","util","get_string","addClass","sort","a","b","timestamp","item","listItem","clone","renderEditItem","xp","filter","map","reduce","text","activeAnno","find","id","postEditCallback","getAnnotations","getItems","ajax","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","courseContextId","getContentTypes","when","done","items","contenttypes","JSON","parse","y","name","getRenderers","Promise","resolve","count","require","amdmodule","Type","isEditMode","prop","author","authorlink","description","stringify","editMode","validateTimestampFormat","fld","existing","test","val","validateTimeStartEnd","checkduration","checkexisting","checkskipsegment","parts","split","message","skip","annotation","title","runInteraction","modal","not","pause","updateTime","duration","toUpdatetime","cmid","courseid","onReady","isPaused","seek","unMute","audio","passwordprotected","support","playbackrate","quality","t","ratio","usefixedratio","aspectratio","relWidth","width","startPercentage","newStart","append","i","marker","setCaption","e","onEnded","toggleClass","focus","currentAnnotation","tooltip","setTimeout","onSeek","onPlayingInterval","visualized","onPlaying","visualizer","intervalFunction","thisTime","isPlaying","isEnded","cancelAnimationFrame","stop","scrollBar","document","getElementById","rect","getBoundingClientRect","left","right","window","innerWidth","scrollIntoView","behavior","block","inline","frequency","useAnimationFrame","animate","requestAnimationFrame","onPause","VideoPlayer","load","IVPLAYER","on","detail","cacheCleared","success","originalEvent","updated","push","status","removeAttr","attr","target","is","ctype","this","contenttype","hastimestamp","allowmultiple","addAnnotation","preventDefault","closest","editAnnotation","cloneAnnotation","deleteCancelPromise","then","deleteAnnotation","catch","saveCancel","theAnnotation","play","stopImmediatePropagation","offsetX","trigger","hide","siblings","initialValue","key","show","hasClass","field","value","appendTimestampMarker","formattedTime","targetAnnotation","draggable","resizable","event","ui","position","skipduration","abs","originalPosition","originalSize","size","direction","off","height","localStorage","setItem","drag","offset","playerWidth","getItem","timelineHeight","$scrollbar","parentOffset","relX","pageX","fadeIn","fadeOut","currentLevel","newLevel","parseInt","timelineElement","scrollWidth","clientWidth","ctrlKey","metaKey","deltaY","addEventListener","scrollLeft","style","scrollHeight","draftAnnotations","confirmationMessage","returnValue","rate","setRate","getQualities","currentQuality","qualities","qualitiesLabel","q","dropdown","setQuality","timelineWrapper","resizeObserver","ResizeObserver","observe","importmodal","handle","courses","fullname","localeCompare","courseSelect","shortname","selectfield","cms","cmSelect","cm","after","interactions","int","icon","outside","disabled","inputgroup","hascompletion","$selected","selectedInt","each","$row","trim","tocourse","courseId","fromcourse","tocm","fromcm","module","concat","search","toLowerCase","includes","fastforward","fastForwardInterval","setInterval","clearInterval","rewind","rewindInterval"],"mappings":"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"}