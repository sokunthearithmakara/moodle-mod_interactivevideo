{"version":3,"file":"editannotation.min.js","sources":["../src/editannotation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Edit interactions module\n *\n * @module     mod_interactivevideo/editannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/toast',\n    'core/notification',\n    'core/event_dispatcher',\n    'mod_interactivevideo/libraries/jquery-ui',\n], function($, addToast, Notification, {dispatchEvent}) {\n    let ctRenderer = {};\n    let player;\n    let totaltime;\n    let currentTime;\n    let playerReady = false;\n    let $loader = $('#background-loading');\n    /**\n     * Replace the progress bar on the video navigation.\n     * @param {Number} percentage - Percentage to replace the progress bar.\n     * @returns {void}\n     * */\n    const replaceProgressBars = (percentage) => {\n        percentage = percentage < 0 ? 0 : percentage;\n        percentage = percentage > 100 ? 100 : percentage;\n        $('#video-nav #progress').css('width', percentage + '%');\n        $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n    };\n    /**\n     * Render the annotations on the video navigation.\n     * @param {Array} annos - Annotations to render.\n     * @param {Number} start - Start time of the video.\n     * @param {Number} totaltime - Total time of the video.\n     * @returns {void}\n     * */\n    const renderVideoNav = async function(annos, start, totaltime) {\n        if (annos.length == 0) {\n            $(\"#video-nav ul\").empty();\n            return;\n        }\n\n        $(\"#video-nav ul\").empty();\n        $(\"#video-timeline-wrapper .skipsegment\").remove();\n        annos.forEach(async(x) => {\n            const render = ctRenderer[x.type];\n            await render.renderItemOnVideoNavigation(x);\n        });\n\n        const time = await player.getCurrentTime();\n        // Replace progress bar.\n        const percentage = (time - start) / totaltime * 100;\n        replaceProgressBars(percentage);\n        dispatchEvent('annotationitemsrendered', {'annotations': annos});\n    };\n\n    return {\n        /**\n         * Initialize function on page loads.\n         * @param {String} url video url\n         * @param {Number} coursemodule cm id\n         * @param {Number} interaction cm instance\n         * @param {Number} course course id\n         * @param {Number} start video start time\n         * @param {Number} end video end time\n         * @param {Number} coursecontextid course context id\n         * @param {String} type video type\n         * @param {Object} displayoptions display options\n         * @param {Number} userid user id\n         * @param {String} posterimage poster image\n         * @param {String} extendedcompletion extended completion\n         */\n        init: function(url, coursemodule, interaction, course, start, end, coursecontextid,\n            type = 'yt', displayoptions, userid, posterimage, extendedcompletion) {\n\n            /**\n             * Util function to display notification\n             * @param {String} msg message text\n             * @param {String} type message type\n             */\n            const addNotification = (msg, type = \"info\") => {\n                addToast.add(msg, {\n                    type: type\n                });\n            };\n\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            let annotations = []; // Annotations.\n            let contentTypes; // Content types.\n\n            /**\n             * Convert seconds to HH:MM:SS format\n             * @param {Number} s second\n             * @param {Boolean} dynamic if true, only show minutes and seconds if less than one hour\n             * @param {Boolean} rounded if true, second is rounded\n             * @returns formatted timestamp\n             */\n            const convertSecondsToHMS = (s, dynamic = false, rounded = true) => {\n                if (rounded) {\n                    s = Math.round(s);\n                }\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - hours * 3600) / 60);\n                let seconds = s - hours * 3600 - minutes * 60;\n                if (rounded && seconds > 59.5) {\n                    seconds = 0;\n                    minutes++;\n                    if (minutes > 59) {\n                        minutes = 0;\n                        hours++;\n                    }\n                }\n                if (minutes < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                if (rounded) {\n                    seconds = Math.round(seconds);\n                } else {\n                    seconds = parseFloat(seconds).toFixed(2);\n                }\n\n                if (seconds < 10) {\n                    seconds = '0' + seconds;\n                }\n\n                if (dynamic && hours == 0) {\n                    return minutes + ':' + seconds;\n                }\n\n                return (hours < 10 ? '0' + hours : hours) + ':' + minutes + ':' + seconds;\n            };\n\n            let activeid = null; // Current active annotation id. Mainly used when editing to relaunch the interaction afte editing.\n\n            /**\n             * Handle rendering of annotation items on the list\n             * @param {Array} annotations array of annotation objects\n             * @returns\n             */\n            const renderAnnotationItems = (annotations) => {\n                renderVideoNav(annotations, start, totaltime);\n                $('#annotationwrapper .loader').remove();\n                $('#annotation-list').empty().removeClass(\"d-flex align-items-center justify-content-center\");\n                if (annotations.length == 0) {\n                    $('#annotation-list').html(`${M.util.get_string('clickaddtoaddinteraction', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                annotations.sort(function(a, b) {\n                    return Number(a.timestamp) - Number(b.timestamp);\n                });\n\n                annotations.forEach(function(item) {\n                    let listItem = $('#annotation-template').clone();\n                    ctRenderer[item.type].renderEditItem(annotations, listItem, item);\n                });\n\n                let xp = annotations.filter(x => x.xp).map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n                $(\"#xp span\").text(xp);\n\n                if (activeid) {\n                    const activeAnno = annotations.find(x => x.id == activeid);\n                    if (activeAnno) {\n                        ctRenderer[activeAnno.type].postEditCallback(activeAnno);\n                    }\n                }\n            };\n\n            /**\n             * Get annotations from the server and execute the rendering function\n             * @returns\n             */\n            const getAnnotations = () => {\n                const getItems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_all_contenttypes',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                $.when(getItems, getContentTypes).done(async function(items, contenttypes) {\n                    annotations = JSON.parse(items[0]);\n                    contentTypes = JSON.parse(contenttypes[0]);\n                    // Remove all annotations that are not in the enabled content types.\n                    annotations = annotations.filter(x => contentTypes.find(y => y.name === x.type));\n                    const getRenderers = new Promise((resolve) => {\n                        let count = 0;\n                        contentTypes.forEach(x => {\n                            require(['' + x.amdmodule], function(Type) {\n                                ctRenderer[x.name] = new Type(player, annotations, interaction,\n                                    course, 0, 0, 0, 0, type, 0, totaltime, start, end, x, coursemodule,\n                                    null, displayoptions, null, extendedcompletion);\n                                count++;\n                                ctRenderer[x.name].init();\n                                if (count == contentTypes.length) {\n                                    resolve(ctRenderer);\n                                }\n                            });\n                        });\n                    });\n                    annotations.map(x => {\n                        let prop = contentTypes.find(y => y.name === x.type);\n                        // Clean up the prop by removing author, authorlink, description;\n                        delete prop.author;\n                        delete prop.authorlink;\n                        delete prop.description;\n                        x.prop = JSON.stringify(prop);\n                        return x;\n                    });\n                    ctRenderer = await getRenderers;\n                    renderAnnotationItems(annotations);\n                });\n            };\n\n            /**\n             * Validate given timestamp against format\n             * @param {String} timestamp formatted timestamp hh:mm:ss\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @returns\n             */\n            const validateTimestampFormat = (timestamp, fld, existing) => {\n                const regex = /^([0-9]{2}):([0-5][0-9]):([0-5][0-9])(\\.\\d{2})?$/;\n                if (!regex.test(timestamp)) {\n                    addNotification(M.util.get_string('invalidtimestampformat', 'mod_interactivevideo'), 'danger');\n                    if (existing) {\n                        $(fld).val(existing);\n                    } else {\n                        $(fld).val(convertSecondsToHMS(start, false, false));\n                    }\n                    return false;\n                }\n                return true;\n            };\n\n            /**\n             * Validate timestamp against start and end time of the video, existing timestamp and skip segments\n             * @param {String} timestamp formatted timestamp\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @param {Number} seconds\n             * @param {Boolean} checkduration if true, check against start and end time\n             * @param {Boolean} checkexisting if true, check against existing annotations\n             * @param {Boolean} checkskipsegment if true, check against skip segments\n             * @returns\n             */\n            const validateTimeStartEnd = (timestamp, fld, existing, seconds, checkduration,\n                checkexisting, checkskipsegment) => {\n                // Convert the timestamp to seconds.\n                const parts = timestamp.split(':');\n                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                // Make sure the timestamp is between start and end.\n                if (checkduration) {\n                    if (timestamp > end || timestamp < start) {\n                        const message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(start, true, false),\n                            \"end\": convertSecondsToHMS(end, true, false)\n                        });\n                        addNotification(message, 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure the timestamp is not already in the list.\n                if (checkexisting) {\n                    if (annotations.find(x => x.timestamp == timestamp) && timestamp != seconds) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure timestamp is not in a skip segment.\n                if (checkskipsegment) {\n                    const skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(timestamp)\n                        && Number(x.title) > Number(timestamp));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(skip.timestamp, true, false),\n                            \"end\": convertSecondsToHMS(skip.title, true, false)\n                        }), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                return timestamp;\n            };\n\n            /**\n             * Run interaction\n             * @param {Object} annotation annotation object\n             */\n            const runInteraction = (annotation) => {\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').not('.sticky').remove();\n                $('#end-screen').remove();\n                player.pause();\n                const activityType = ctRenderer[annotation.type];\n                activityType.runInteraction(annotation);\n            };\n\n            /**\n             * Correct the start and end time.\n             * @param {Number} duration Total duration of the video.\n             * @returns {Object} Object containing start and end time.\n             */\n            const updateTime = async(duration) => {\n                duration = Number(duration);\n                let toUpdatetime = false;\n                if (!end || end == 0) {\n                    toUpdatetime = true;\n                }\n                if (!start || start >= duration || start < 0 || start >= duration) {\n                    toUpdatetime = true;\n                }\n                start = start > duration ? 0 : start;\n                if (toUpdatetime) {\n                    await $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_videotime',\n                            sesskey: M.cfg.sesskey,\n                            id: interaction,\n                            start: start,\n                            end: !end || end == 0 ? duration : end,\n                            contextid: M.cfg.contextid\n                        }\n                    });\n                }\n                end = !end || end == 0 || end > duration ? duration : end;\n                return {start, end};\n            };\n\n            /**\n             * Set of events to run after the video player is ready.\n             */\n            const onReady = async() => {\n                player.pause();\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    await player.seek(start);\n                    onReady();\n                    return;\n                }\n                if (player.audio) {\n                    $('#annotation-canvas').addClass('bg-black');\n                }\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#start-screen').removeClass('d-none');\n                    $('#video-block').removeClass('no-pointer bg-transparent');\n                }\n                if (player.type != 'vimeo'\n                    && player.type != 'html5video'\n                    && player.type != 'panopto'\n                    && player.type != \"peertube\") { // Vimeo/HTML5 does not pause/play on click.\n                    $('#video-block').addClass('no-pointer');\n                }\n\n                if (player.support.playbackrate == false) {\n                    $('#changerate').remove();\n                } else {\n                    $('#changerate').removeClass('d-none');\n                }\n\n                if (player.support.quality == false) {\n                    $('#changequality').remove();\n                } else {\n                    $('#changequality').removeClass('d-none');\n                }\n\n                let t = player.totaltime;\n\n                ({start, end} = await updateTime(t));\n\n                totaltime = end - start;\n                // Recalculate the ratio of the video.\n                let ratio = 16 / 9;\n                if (!displayoptions.usefixedratio || displayoptions.usefixedratio == 0) {\n                    ratio = player.aspectratio;\n                }\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                playerReady = true;\n                $('#annotation-canvas').removeClass('d-none');\n\n                // Handle timeline block.\n                $(\"#timeline-wrapper #video-timeline\").css({\n                    'background-image': 'url(' + posterimage + ')',\n                    'background-size': 'contain',\n                    'background-repeat': 'no-repeat',\n                });\n                $(\"#timeline-wrapper #duration\").text(convertSecondsToHMS(end, true));\n                $(\"#timeline-wrapper #currenttime\").text(convertSecondsToHMS(start, true));\n                // Render minute markers.\n                const minutes = Math.floor(totaltime / 60);\n                $('#timeline-items-wrapper').css('width', (minutes * 300) + 'px'); // 300px per minute as default.\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let startPercentage = 0;\n                let newStart = start;\n                if (start % 60 != 0) {\n                    startPercentage = (60 - (start % 60)) / totaltime * 100;\n                    newStart = start + (60 - (start % 60));\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 0%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n                for (let i = newStart; i <= end; i += 60) {\n                    let percentage = ((i - newStart) / totaltime * 100) + startPercentage;\n                    let marker = '';\n                    // Format h:m (e.g 3h1m).\n                    if (i >= 3600) {\n                        marker = Math.floor(i / 3600) + 'h' + Math.floor((i % 3600) / 60) + 'm';\n                    } else {\n                        marker = Math.floor(i / 60) + 'm';\n                    }\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                         style=\"left: ${percentage}%;\"><div class=\"text-white minute-label\">${marker}</div></div>`);\n                }\n\n                if (end % 60 != 0) {\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 100%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n\n                // Set caption to null.\n                try {\n                    player.setCaption('');\n                } catch (e) {\n                    // Do nothing.\n                }\n\n                $('#scrollbar, #scrollhead-top').css('left', 0);\n\n                getAnnotations();\n            };\n\n            /**\n             * Run when video ended (i.e. arrives at 'end' time)\n             */\n            const onEnded = () => {\n                player.pause();\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n                // Cover the video with a message on a white background div.\n                $('#video-wrapper').append(`<div id=\"end-screen\" class=\"border position-absolute w-100 h-100 bg-white d-flex\n                     justify-content-center align-items-center\" style=\"top: 0; left: 0;\">\n                     <button class=\"btn btn-danger border-0 rounded-circle\" style=\"font-size: 1.5rem;\" id=\"restart\">\n                    <i class=\"bi bi-arrow-repeat\" style=\"font-size: x-large;\"></i></button></div>`);\n                $('#video-nav #progress').css('width', '100%');\n                $('#scrollbar, #scrollhead-top').css('left', '100%');\n                // Focus on the restart button.\n                $('#message #restart').focus();\n\n                // If the current time matches the timestamp of an annotation, highlight the annotation.\n                const currentAnnotation = annotations.find((annotation) => annotation.timestamp == end);\n                if (currentAnnotation) {\n                    $('#annotation-list tr').removeClass('active');\n                    $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                    // Show tooltip for two seconds.\n                    $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                    setTimeout(function() {\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                    }, 2000);\n                }\n            };\n\n            /**\n             * Execute when video is sought\n             * @param {Number} t seconds\n             * @returns\n             */\n            const onSeek = async function(t) {\n                if (!playerReady) {\n                    return;\n                }\n                if (t) {\n                    t = Number(t);\n                } else {\n                    t = await player.getCurrentTime();\n                }\n                if (t > start && t < end) {\n                    $('#end-screen').remove();\n                }\n                const percentage = (t - start) / (totaltime) * 100;\n                $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(t, true));\n                dispatchEvent('timeupdate', {'time': t});\n            };\n\n            let onPlayingInterval;\n            let visualized = false;\n            /**\n             * Excute when video plays (i.e. start or resume)\n             */\n            const onPlaying = async() => {\n                $('#message, #end-screen').not('.sticky').remove();\n                $('#playpause').find('i').removeClass('bi-play-fill').addClass('bi-pause-fill').removeClass('rotate-360');\n                if (player.audio && !visualized) {\n                    player.visualizer();\n                    visualized = true;\n                }\n                const intervalFunction = async function() {\n                    let thisTime = await player.getCurrentTime();\n                    const isPlaying = await player.isPlaying();\n                    const isEnded = await player.isEnded();\n                    if (!isPlaying || isEnded) {\n                        cancelAnimationFrame(onPlayingInterval);\n                        return;\n                    }\n\n                    if (thisTime < start) {\n                        await player.seek(start);\n                        thisTime = start;\n                    }\n\n                    if (thisTime >= end) {\n                        player.stop(end);\n                        cancelAnimationFrame(onPlayingInterval);\n                        onEnded();\n                        return;\n                    }\n                    dispatchEvent('timeupdate', {'time': thisTime});\n                    $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(thisTime, true));\n                    let percentage = (thisTime - start) / (totaltime) * 100;\n                    $('#video-nav #progress').css('width', percentage + '%');\n                    $(\"#scrollbar, #scrollhead-top\").css('left', percentage + '%');\n\n                    // Scroll the timeline so that the current time is in the middle of the timeline.\n                    const scrollBar = document.getElementById('scrollbar');\n                    // Check if the scrollbar is in view.\n                    const rect = scrollBar.getBoundingClientRect();\n                    if (rect.left < 0 || rect.right > window.innerWidth) {\n                        scrollBar.scrollIntoView({behavior: \"instant\", block: \"center\", inline: \"center\"});\n                    }\n\n                    // If the current time matches the timestamp of an annotation, highlight the annotation\n                    const currentAnnotation = annotations.find(x => (thisTime - player.frequency) <= x.timestamp\n                        && (thisTime + player.frequency) >= x.timestamp);\n                    if (currentAnnotation) {\n                        $('#annotation-list tr').removeClass('active');\n                        $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                        setTimeout(function() {\n                            $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                        }, 2000);\n                    }\n\n                    // If current time is within the skipsegment, seek to the end of the segment.\n                    let skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    let skip = skipsegments.find(x => Number(x.timestamp) < Number(thisTime)\n                        && Number(x.title) > Number(thisTime));\n                    if (skip) {\n                        await player.seek(Number(skip.title));\n                        // Replace the progress bar.\n                        percentage = (skip.title - start) / totaltime * 100;\n                        replaceProgressBars(percentage);\n                    }\n                };\n                if (player.useAnimationFrame) {\n                    const animate = async() => {\n                        const isPlaying = await player.isPlaying();\n                        if (isPlaying) {\n                            intervalFunction();\n                            onPlayingInterval = requestAnimationFrame(animate);\n                        }\n                    };\n                    onPlayingInterval = requestAnimationFrame(animate);\n                } else {\n                    const isPlaying = await player.isPlaying();\n                    if (isPlaying) {\n                        intervalFunction();\n                    }\n                }\n            };\n\n            /**\n             * Excute when video is paused.\n             */\n            const onPause = () => {\n                cancelAnimationFrame(onPlayingInterval);\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + type], function(VideoPlayer) {\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#video-block').addClass('no-pointer bg-transparent');\n                    $('#annotation-canvas').removeClass('d-none');\n                }\n                player = new VideoPlayer();\n                player.load(\n                    url,\n                    start,\n                    end,\n                    {\n                        'customStart': true,\n                        'passwordprotected': displayoptions.passwordprotected == 1,\n                        'showControls': false,\n                    }\n                );\n                window.IVPLAYER = player;\n            });\n\n            $(document).on('iv:playerReady', function() {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function() {\n                onPause();\n            });\n\n            $(document).on('iv:playerPlaying', function() {\n                onPlaying();\n            });\n\n            $(document).on('iv:playerEnded', function() {\n                onEnded();\n            });\n\n            $(document).on('iv:playerSeek', function(e) {\n                onSeek(e.detail.time);\n            });\n\n            $(document).on('iv:playerError', function() {\n                addNotification(M.util.get_string('thereisanissueloadingvideo', 'mod_interactivevideo'), 'danger');\n                $('#annotation-canvas').removeClass('d-none');\n                $('#start-screen').addClass('d-none');\n                $('#video-block').addClass('no-pointer bg-transparent');\n                $('#spinner').remove();\n                $('.loader').removeClass('loader');\n            });\n\n            // Post annotation update (add, edit, clone).\n            $(document).on('annotationupdated', function(e) {\n                const action = e.originalEvent.detail.action;\n                if (action == 'import') {\n                    annotations = e.originalEvent.detail.annotations;\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactionimported', 'mod_interactivevideo'), 'success');\n                    return;\n                }\n                let updated = e.originalEvent.detail.annotation;\n                if (action == 'edit' || action == 'draft' || action == 'savedraft') {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != updated.id;\n                    });\n                }\n                updated.prop = JSON.stringify(contentTypes.find(x => x.name === updated.type));\n                annotations.push(updated);\n                if (action == 'add') {\n                    activeid = updated.id;\n                } else {\n                    activeid = null;\n                }\n\n                renderAnnotationItems(annotations);\n                if (action == 'add' || action == 'clone') {\n                    addNotification(M.util.get_string('interactionadded', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                } else if (action == 'edit') {\n                    addNotification(M.util.get_string('interactionupdated', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    setTimeout(function() {\n                        $(`tr[data-id=\"${updated.id}\"]`).removeClass('active');\n                    }, 1500);\n                }\n\n                // If draft exists, activate the save button.\n                if (annotations.find(x => x.status == 'draft')) {\n                    $('#timeline-wrapper #savedraft').removeAttr('disabled').addClass('pulse');\n                } else {\n                    $('#timeline-wrapper #savedraft').attr('disabled', 'disabled').removeClass('pulse');\n                }\n            });\n\n            // Re-render annotation list and timeline after an annotation is deleted.\n            $(document).on('annotationdeleted', function(e) {\n                const annotation = e.originalEvent.detail.annotation;\n                activeid = null;\n                $(`tr[data-id=\"${annotation.id}\"]`).addClass('deleted');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != annotation.id;\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactiondeleted', 'mod_interactivevideo'), 'success');\n                }, 1000);\n            });\n\n            // Implement create annotation\n            $(document).on('click', '#addcontentdropdown .dropdown-item', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                // Check if the target item is a link.\n                if ($(e.target).is('a')) {\n                    return;\n                }\n\n                const ctype = $(this).data('type');\n                player.pause();\n                let timestamp = currentTime || await player.getCurrentTime();\n                timestamp = Number(timestamp.toFixed(2));\n                const contenttype = contentTypes.find(x => x.name == ctype);\n                if (contenttype.hastimestamp) {\n                    if (annotations.find(x => x.timestamp == timestamp)) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                    // Check skip segments\n                    const skipsegments = annotations.filter(x => x.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(currentTime)\n                        && Number(x.title) > Number(currentTime));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                }\n                if (!contenttype.allowmultiple && annotations.find(x => x.type == ctype)) {\n                    addNotification(M.util.get_string(\n                        'thisinteractionalreadyexists', 'mod_interactivevideo', contenttype.title), 'danger');\n                    return;\n                }\n                currentTime = null;\n                ctRenderer[ctype].addAnnotation(annotations, timestamp, coursemodule);\n            });\n\n            // Implement edit annotation\n            $(document).on('click', 'tr.annotation .edit', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].editAnnotation(annotations, id, coursemodule);\n                if (timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n            });\n\n            // Implement copy annotation\n            $(document).on('click', 'tr.annotation .copy', async function(e) {\n                e.preventDefault();\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                const time = await player.getCurrentTime();\n                ctRenderer[contenttype].cloneAnnotation(id, time);\n            });\n\n            // Implement delete annotation.\n            $(document).on('click', 'tr.annotation .delete', function(e) {\n                e.preventDefault();\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const annotation = annotations.find(annotation => annotation.id == id);\n                try {\n                    Notification.deleteCancelPromise(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                    ).then(() => {\n                        return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                    }).catch(() => {\n                        return;\n                    });\n                } catch {\n                    Notification.saveCancel(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                        function() {\n                            return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                        }\n                    );\n                }\n\n\n            });\n\n            // Implement view annotation.\n            $(document).on('click', 'tr.annotation .title', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                // Update the progress bar.\n                const percentage = (timestamp - start) / totaltime * 100;\n                replaceProgressBars(percentage);\n                let currentTime = await player.getCurrentTime();\n                if (currentTime != timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const theAnnotation = annotations.find(annotation => annotation.id == id);\n                setTimeout(() => {\n                    runInteraction(theAnnotation);\n                }, 500);\n            });\n\n            // Implement go to timestamp.\n            $(document).on('click', 'tr.annotation .timestamp', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).data('timestamp');\n                await player.seek(timestamp);\n                player.play();\n            });\n\n            // Right click on the video nav or video timeline to add a new interaction.\n            $(document).on('contextmenu', '#vseek, #video-timeline', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                currentTime = (percentage * totaltime) + start;\n                await player.seek(currentTime);\n                player.pause();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Right click on the scrollbar to add a new interaction.\n            $(document).on('contextmenu', '#scrollbar, #scrollhead-top', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                currentTime = await player.getCurrentTime();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Click the play/pause button on the timeline region to pause/play video.\n            $(document).on('click', '#playpause', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                // Pause or resume the video.\n                let isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                } else {\n                    let t = await player.getCurrentTime();\n                    if (t >= end) {\n                        $('#end-screen #restart').trigger('click');\n                    } else {\n                        player.play();\n                    }\n                }\n            });\n\n            $(document).on('click', '#video-block', function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $('#playpause').trigger('click');\n            });\n\n            // Right click on the annotation indicator to edit the annotation.\n            $(document).on('contextmenu', '#video-nav .annotation', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                // Trigger click on the edit button.\n                $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n            });\n\n            // Quick edit.\n            $(document).on('contextmenu', '[data-editable]', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($('[data-field].editing').length > 0) {\n                    return;\n                }\n                const fld = $(this).data('editable');\n                $(this).hide();\n                $(this).siblings('[data-field=\"' + fld + '\"]').removeClass('d-none').focus().addClass('editing');\n                if (fld == 'timestamp') {\n                    $(this).closest('tr')\n                    .append(`<div class=\"timestamp-info position-absolute\">\n                        ${M.util.get_string('rightclicktosetcurrenttime', 'mod_interactivevideo')}</div>`);\n                }\n            });\n\n            $(document).on('contextmenu', '[data-field=\"timestamp\"]', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const time = await player.getCurrentTime();\n                $(this).val(convertSecondsToHMS(time, false, false));\n            });\n\n            $(document).on('keyup', '[data-field].editing', function(e) {\n                $(this).removeClass('is-invalid');\n                const initialValue = $(this).data('initial-value');\n                const val = $(this).val();\n                const fld = $(this).data('field');\n                if (val == '') {\n                    $(this).addClass('is-invalid');\n                }\n\n                // If escape key is pressed, revert the value.\n                if (e.key == 'Escape') {\n                    $(this).val(initialValue);\n                    $(this).removeClass('editing');\n                    $(this).addClass('d-none');\n                    $(this).siblings('[data-editable]').show();\n                    $('.timestamp-info').remove();\n                    return;\n                }\n                // If enter key is pressed, save the value.\n                if (e.key == 'Enter') {\n\n                    let seconds;\n                    if (fld == 'timestamp') {\n                        const parts = initialValue.split(':');\n                        seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!validateTimestampFormat(val, '[data-field].editing', initialValue)) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        const timestamp = validateTimeStartEnd(val, '[data-field].editing', initialValue, seconds,\n                            true, true, true);\n                        if (timestamp == -1) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        seconds = timestamp;\n                    }\n\n                    if ($(this).hasClass('is-invalid')) {\n                        return;\n                    }\n                    if (val == initialValue) {\n                        $(this).removeClass('editing');\n                        $(this).addClass('d-none');\n                        $(this).siblings('[data-editable]').show();\n                        return;\n                    }\n                    const id = $(this).data('id');\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: id,\n                            field: fld,\n                            contextid: M.cfg.contextid,\n                            value: fld == 'timestamp' ? seconds : val,\n                        },\n                        success: function(data) {\n                            $('.timestamp-info').remove();\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'edit'\n                            });\n                        }\n                    });\n                    return;\n                }\n            });\n\n            $(document).on('blur', '[data-field].editing', function() {\n                const initialValue = $(this).data('initial-value');\n                $(this).val(initialValue);\n                $(this).removeClass('editing');\n                $(this).addClass('d-none');\n                $(this).siblings('[data-editable]').show();\n                $('.timestamp-info').remove();\n            });\n            // End quick edit.\n\n            $(document).on('click', '#end-screen #restart', async function(e) {\n                e.preventDefault();\n                $('#end-screen').remove();\n                await player.seek(start);\n                player.play();\n            });\n\n            // Display tooltip on anntation indicator when annotation on the list is hovered.\n            $(document).on('mouseover', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseover');\n            });\n\n            // Remove tooltip when annotation on the list is not hovered.\n            $(document).on('mouseout', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseout');\n                $('.tooltip').remove();\n            });\n\n            // Highlight annotation on the list when annotation indicator is hovered.\n            $(document).on('mouseover', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).addClass('active');\n            });\n\n            // Remove highlight when annotation indicator is not hovered.\n            $(document).on('mouseout', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).removeClass('active');\n            });\n\n            // Validate timestamp when the timestamp field is changed.\n            $(document).on('change', '.timestamp-input, .timestamp-field input', function() {\n                $(this).removeClass('is-invalid');\n                const parts = $(this).val().split(':');\n                const seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                if (!validateTimestampFormat($(this).val(), this)) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n\n                const timestamp = validateTimeStartEnd($(this).val(), this, \"00:00:00\", seconds, true, false, true);\n\n                if (timestamp == -1) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n            });\n\n            const appendTimestampMarker = (seconds, rounded) => {\n                const formattedTime = convertSecondsToHMS(seconds, true, rounded);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n            };\n\n            $(document).on('annotationitemsrendered', function() {\n                $('#timeline-wrapper [data-toggle=\"tooltip\"]').tooltip({\n                    'boundary': 'window',\n                    'container': '#timeline',\n                });\n                // Put the minute markers on the timeline;\n                let targetAnnotation = null;\n                // Destroy draggable and resizable if already initialized.\n                try {\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').draggable('destroy');\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').resizable('destroy');\n                } catch (e) {\n                    // Do nothing.\n                }\n                $('#timeline-items .annotation.li-draggable').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('.tooltip, #message').remove();\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        $('.tooltip').remove();\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            ui.position.left = -5;\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            ui.position.left = $('#timeline-items').width() - 5;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        $(this).css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('.tooltip').remove();\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            $(this).css('left', '-5px');\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            $(this).css('left', 'calc(100% - 5px)');\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(timestamp); // Seek to the new position\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                        }\n\n                        if (timestamp > end) {\n                            timestamp = end;\n                        }\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let skipduration = Number(targetAnnotation.title) - Number(targetAnnotation.timestamp);\n                        if (timestamp < 0 && timestamp + skipduration < start) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp > end) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp < start) {\n                            skipduration = skipduration - Math.abs(start - timestamp);\n                            timestamp = start;\n                        }\n                        if (timestamp + skipduration > end) {\n                            skipduration = Math.abs(end - timestamp);\n                            timestamp = end - skipduration;\n                        }\n                        if (skipduration <= 0) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.title = timestamp + skipduration;\n                        if (targetAnnotation.title > end) {\n                            targetAnnotation.title = end;\n                        }\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(timestamp); // Seek to the new position\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').resizable({\n                    'containment': '#video-timeline-wrapper',\n                    'handles': 'e, w',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'resize': async function(event, ui) {\n                        let timestamp;\n                        if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp, direction;\n                        if (ui.originalPosition.left != ui.position.left) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"left\";\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"right\";\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        if (direction == \"left\") {\n                            targetAnnotation.timestamp = timestamp;\n                        } else {\n                            targetAnnotation.title = timestamp;\n                            if (targetAnnotation.title > end) {\n                                targetAnnotation.title = end;\n                            }\n                        }\n                        targetAnnotation.status = 'draft';\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(timestamp);\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('contextmenu').on('contextmenu', function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    const id = $(this).data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('click').on('click', async function(e) {\n                    e.preventDefault();\n                    const timestamp = $(this).data('timestamp');\n                    await player.seek(timestamp);\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment .delete-skipsegment').off('click').on('click', function(e) {\n                    e.preventDefault();\n                    const id = $(this).closest('.skipsegment').data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .delete`).trigger('click');\n                });\n            });\n\n            $('#scrollbar').draggable({\n                'containment': '#timeline-items',\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#timeline-items').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#timeline-items').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#timeline-items').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            $('#scrollhead-top').draggable({\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#vseek').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#vseek').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#vseek').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            // Resize timeline.\n            $('#timeline-wrapper').resizable({\n                'handles': 'n',\n                'minHeight': 125,\n                'maxHeight': 500,\n                'start': function() {\n                    $('#top-region, #timeline-wrapper').addClass('no-pointer-events');\n                },\n                'resize': function(event, ui) {\n                    $('#top-region').css('height', `calc(100dvh - ${ui.size.height + 70}px)`);\n                },\n                'stop': function() {\n                    $('#top-region, #timeline-wrapper').removeClass('no-pointer-events');\n                    localStorage.setItem('timeline-height', $('#timeline-wrapper').height());\n                }\n            });\n\n            // Resize player region.\n            $('#separator').draggable({\n                'axis': 'x',\n                'containment': '#wrapper',\n                'grid': [1, 0],\n                'start': function() {\n                    $('#wrapper').addClass('no-pointer-events');\n                },\n                drag: function() {\n                    const parentOffset = $(this).offset();\n                    const width = parentOffset.left;\n                    $('#player-region').css('width', width + 'px');\n                    $('#content-region').css('width', 'calc(100% - ' + width + 'px)');\n                },\n                stop: function() {\n                    const width = $(this).offset().left;\n                    // Save this to local storage\n                    localStorage.setItem('player-width', width);\n                    $('#wrapper').removeClass('no-pointer-events');\n                }\n            });\n\n            // Set player region width from the saved width in local storage.\n            const playerWidth = localStorage.getItem('player-width');\n            if (playerWidth && window.innerWidth > 992) {\n                $('#separator').css('left', playerWidth + 'px');\n                $('#player-region').css('width', playerWidth + 'px');\n                $('#content-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n            }\n\n            // Set timeline height from saved height in local storage.\n            const timelineHeight = localStorage.getItem('timeline-height');\n            if (timelineHeight) {\n                $('#timeline-wrapper').css('height', timelineHeight + 'px');\n                $('#top-region').css('height', `calc(100dvh - ${Number(timelineHeight) + 70}px)`);\n            }\n\n            // Seek bar functionalities\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseenter', function(e) {\n                $('#cursorbar, #position-marker').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                // First clone the #scrollbar and place it where the cursor is.\n                let $scrollbar = $('#scrollbar').clone();\n                $scrollbar.attr('id', 'cursorbar');\n\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n\n                $scrollbar.css('left', (relX + 5) + 'px');\n                $scrollbar.find('#scrollhead').remove();\n                const percentage = relX / $(this).width();\n                const time = percentage * (totaltime) + start;\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n                $('#vseek #position-marker').css('left', relX + 'px');\n                $('#timeline-items').append($scrollbar);\n            });\n\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseleave', function(e) {\n                e.stopImmediatePropagation();\n                $('#vseek #position-marker, #cursorbar').remove();\n            });\n\n            $('#vseek #bar, #video-timeline').on('mousemove', function(e) {\n                e.stopImmediatePropagation();\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                const percentage = relX / $(this).width();\n                let time = percentage * (totaltime) + start;\n                if (time < start) {\n                    time = start;\n                }\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                // Move the cursorbar\n                $('#cursorbar').css('left', (relX + 5) + 'px');\n                $('#vseek #position').text(formattedTime);\n                $('#vseek #position-marker').css('left', relX + 'px');\n            });\n\n            // Run interaction when annotation indicator is clicked.\n            $(document).on('click', '#video-nav .annotation', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                const annotation = annotations.find(x => x.id == id);\n                $loader.fadeIn(300);\n                if (await player.getCurrentTime() != annotation.timestamp) {\n                    await player.seek(annotation.timestamp);\n                }\n                $loader.fadeOut(300);\n                runInteraction(annotation);\n            });\n\n            // Seek video on click on timeline or video nav.\n            $(document).on('click', '#vseek #bar, #video-timeline', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                $loader.fadeIn(300);\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    player.pause();\n                }\n                await player.seek((percentage * totaltime) + start);\n                $loader.fadeOut(300);\n                $(\"#message, #end-screen\").remove();\n            });\n\n            // Implement timeline zoom out.\n            $('#zoomout').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) - 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let timelineElement = document.getElementById('timeline');\n                if (timelineElement.scrollWidth <= timelineElement.clientWidth) {\n                    $(this).attr('disabled', 'disabled');\n                }\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement timeline zoom in.\n            $('#zoomin').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) + 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                $('#zoomout').removeAttr('disabled');\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement zoom in and zoom out on mouse scroll on timeline.\n            $(\"#timeline\").on('wheel', function(e) {\n                if (e.ctrlKey || e.metaKey) {\n                    e.preventDefault();\n                    if (e.originalEvent.deltaY < 0) {\n                        $('#zoomin').trigger('click');\n                    } else {\n                        $('#zoomout').trigger('click');\n                    }\n                }\n            });\n\n            document.getElementById('timeline').addEventListener('scroll', function() {\n                document.getElementById('minute-markers-wrapper').scrollLeft = this.scrollLeft;\n                document.getElementById('vseek').style.left = -this.scrollLeft + 'px';\n                document.getElementById('minute-markers-bg-wrapper').style.left = -this.scrollLeft + 'px';\n                document.getElementById('scrollbar').scrollHeight = this.scrollHeight;\n            });\n\n            // Save timeline changes.\n            $('#savedraft').on('click', function(e) {\n                e.stopImmediatePropagation();\n                let draftAnnotations = annotations.filter(x => x.status == 'draft');\n                let count = 0;\n                draftAnnotations.forEach(function(a) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: a.id,\n                            field: 'timestamp',\n                            contextid: M.cfg.contextid,\n                            value: a.timestamp,\n                        },\n                        success: function(data) {\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'savedraft'\n                            });\n                        }\n                    });\n                    if (a.type == 'skipsegment') {\n                        $.ajax({\n                            url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                            method: \"POST\",\n                            dataType: \"text\",\n                            data: {\n                                action: 'quick_edit_field',\n                                sesskey: M.cfg.sesskey,\n                                id: a.id,\n                                field: 'title',\n                                contextid: M.cfg.contextid,\n                                value: a.title,\n                            },\n                            success: function(data) {\n                                const updated = JSON.parse(data);\n                                dispatchEvent('annotationupdated', {\n                                    annotation: updated,\n                                    action: 'savedraft'\n                                });\n                            }\n                        });\n                    }\n                    count++;\n                    if (count == draftAnnotations.length) {\n                        addNotification(M.util.get_string('draftsaved', 'mod_interactivevideo'), 'success');\n                    }\n                });\n\n            });\n\n            // Launch content selection modal.\n            $('#addcontent').on('click', async function(e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n                $('#contentmodal').modal('show');\n            });\n\n            $('#contentmodal').on('show.bs.modal', function() {\n                player.pause();\n                $('#addcontentdropdown').addClass('modal-body');\n            });\n\n            $('#contentmodal').on('hide.bs.modal', function() {\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                $('#addcontentdropdown').removeClass('modal-body');\n            });\n\n            // Inform user to save changes before close or unload the current page.\n            window.addEventListener('beforeunload', (e) => {\n                if (annotations.find(x => x.status == 'draft')) {\n                    const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                    e.returnValue = confirmationMessage;\n                    return confirmationMessage;\n                }\n                return true;\n            });\n\n            // Implement the rate change.\n            $(document).on('click', '.changerate', function(e) {\n                e.preventDefault();\n                const rate = $(this).data('rate');\n                player.setRate(rate);\n                $('.changerate').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            $(document).on('iv:playerRateChange', function(e) {\n                $('.changerate').find('i').removeClass('bi-check');\n                $(`.changerate[data-rate=\"${e.originalEvent.detail.rate}\"]`).find('i').addClass('bi-check');\n            });\n\n            // Handle video control:: Quality change\n            $(\"#changequality\").on('shown.bs.dropdown', async function() {\n                let quality = await player.getQualities();\n                $('#qualitieslist').empty();\n                let currentQuality = quality.currentQuality;\n                if (currentQuality === null) {\n                    currentQuality = $(this).data('current');\n                }\n                let qualities = quality.qualities;\n                let qualitiesLabel = quality.qualitiesLabel;\n                qualities.forEach((q, i) => {\n                    $('#qualitieslist').append(`<a class=\"dropdown-item text-white changequality\" data-quality=\"${q}\"\n                         href=\"#\"><i class=\"bi ${q == currentQuality ? 'bi-check' : ''} fa-fw ml-n3\"></i>${qualitiesLabel[i]}</a>`);\n                });\n                $(this).find('[data-toggle=dropdown]').dropdown('update');\n            });\n\n            $(document).on('click', '.changequality', function(e) {\n                e.preventDefault();\n                const quality = $(this).data('quality');\n                player.setQuality(quality);\n                $('.changequality').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            // Observe timeline-wrapper width change.\n            let timelineWrapper = document.getElementById('timeline-wrapper');\n            let resizeObserver = new ResizeObserver(() => {\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n            });\n\n            resizeObserver.observe(timelineWrapper);\n\n            // Implement import content\n            $(document).on('click', '#importcontent', function(e) {\n                e.preventDefault();\n                const importmodal = `<div class=\"modal fade\" id=\"importmodal\" tabindex=\"-1\" aria-labelledby=\"importmodalLabel\"\n                 aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"importmodalLabel\">\n                                ${M.util.get_string('importcontent', 'mod_interactivevideo')}</h5>\n                                <button type=\"button\" class=\"btn p-0 border-0\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary border-0\" data-dismiss=\"modal\">\n                                ${M.util.get_string('cancel', 'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary border-0\" id=\"importcontentbutton\">\n                                ${M.util.get_string('import', 'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(importmodal);\n                $('#importmodal').modal('show');\n\n                $('#importmodal').on('hidden.bs.modal', function() {\n                    $('#importmodal').remove();\n                });\n\n                $('#importmodal').off('shown.bs.modal').on('shown.bs.modal', function() {\n                    // Make the modal draggable.\n                    $('#importmodal .modal-dialog').draggable({\n                        handle: \".modal-header\"\n                    });\n                    // Render the course select dropdown.\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'get_taught_courses',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            userid: userid\n                        },\n                        success: function(data) {\n                            let courses = JSON.parse(data);\n                            // Sort courses by name.\n                            courses.sort((a, b) => a.fullname.localeCompare(b.fullname));\n                            let courseSelect = `<select class=\"custom-select w-100\" id=\"importcourse\">`;\n                            courses.forEach(course => {\n                                courseSelect += `<option value=\"${course.id}\">${course.fullname} (${course.shortname})</option>`;\n                            });\n                            courseSelect += `</select>`;\n                            let selectfield = `<div class=\"form-group selectcourse\">\n                            <label class=\"font-weight-bold\" for=\"importcourse\">\n                            ${M.util.get_string('selectcourse', 'mod_interactivevideo')}</label>\n                            ${courseSelect}</div>`;\n                            $('#importmodal .modal-body').append(selectfield);\n                            // Default current course.\n                            $('#importmodal #importcourse').val(course);\n                            $('#importmodal #importcourse').trigger('change');\n                        }\n                    });\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcourse', function() {\n                $(`#importmodal .selectcm, #importmodal .select-interaction`).remove();\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_cm_by_courseid',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: $(this).val()\n                    },\n                    success: function(data) {\n                        let cms = JSON.parse(data);\n                        cms.sort((a, b) => a.name.localeCompare(b.name));\n                        let cmSelect = `<select class=\"custom-select w-100\" id=\"importcm\">\n                        <option value=\"\">${M.util.get_string('select', 'mod_interactivevideo')}</option>`;\n                        cms.forEach(cm => {\n                            cmSelect += `<option value=\"${cm.id}\" ${cm.id == interaction ? 'disabled' : ''}>${cm.name}</option>`;\n                        });\n                        cmSelect += `</select>`;\n                        let selectfield = `<div class=\"form-group selectcm\">\n                        <label for=\"importcm\" class=\"font-weight-bold\">\n                        ${M.util.get_string('selectactivity', 'mod_interactivevideo')}</label>\n                        ${cmSelect}</div>`;\n                        $(`#importmodal .selectcourse`).after(selectfield);\n                    }\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcm', async function() {\n                $(`#importmodal .select-interaction`).remove();\n                $(`#importmodal #importcm`).after(`<div class=\"select-interaction py-3\">\n                    <iframe src=\"${M.cfg.wwwroot + '/mod/interactivevideo/view.php?i=' + $(this).val()}&embed=1&preview=1\"\n                    frameborder=0 width=\"100%\" height=\"500\" class=\"loader\"></iframe></div>`);\n                let interactions = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: $(this).val(),\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n                interactions = JSON.parse(interactions);\n                interactions = interactions.filter(x => x.type != 'skipsegment');\n                if (interactions.length == 0) {\n                    $(`#importmodal .select-interaction`).append(`<div class=\"alert alert-warning mt-3\">\n                        ${M.util.get_string('nocontent', 'mod_interactivevideo')}</div>`);\n                    return;\n                }\n\n                $(`#importmodal .select-interaction`).append(`<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\n                     no-pointer\">\n                     <div class=\"input-group-prepend border-0 invisible\">\n                            <label class=\"input-group-text bg-white\">\n                                <input type=\"checkbox\"/>\n                                <i class=\"bi bi-plus ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control border-0 font-weight-bold\"\n                 value=\"${M.util.get_string('title', 'mod_interactivevideo')}\">\n                <input type=\"text\" class=\"form-control border-0 font-weight-bold\" style=\"max-width: 50px;\"\n                value=\"XP\">\n                <input type=\"text\" style=\"max-width: 150px;\" value=\"${M.util.get_string('timestamp', 'mod_interactivevideo')}\"\n                 class=\"form-control border-0 font-weight-bold\"></div>`);\n\n                interactions = interactions.map(int => {\n                    // Get the icon and check if the interaction is out of range (start, end time);\n                    const ctype = contentTypes.find(y => y.name === int.type);\n                    int.prop = JSON.stringify(ctype);\n                    int.icon = ctype.icon;\n                    if ((int.timestamp > end || int.timestamp < start) && int.timestamp > 0) {\n                        int.outside = true;\n                    } else {\n                        int.outside = false;\n                    }\n                    // Check if the interaction can be added (e.g. annotation content type can only be added once per activity);\n                    if (!ctype.allowmultiple && annotations.find(x => x.type == int.type)) {\n                        int.disabled = true;\n                    }\n                    return int;\n                });\n\n                interactions.sort((a, b) => a.timestamp - b.timestamp);\n                interactions.forEach(int => {\n                    const inputgroup = `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\"\n                     data-id=\"${int.id}\">\n                        <div class=\"input-group-prepend\">\n                            <label class=\"input-group-text\">\n                                <input type=\"checkbox\" ${int.disabled ? 'disabled' : ''}/>\n                                <i class=\"${int.icon} ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control name\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 value=\"${int.title}\">\n                <input type=\"text\" style=\"max-width: 50px;\" ${int.timestamp < 0 || int.hascompletion == 0 ? 'readonly' : ''}\n                 class=\"form-control xp\" value=\"${int.xp}\">\n                <input type=\"text\" placeholder=\"00:00:00\" style=\"max-width: 150px;\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 class=\"form-control timestamp-input ${int.outside ? 'is-invalid' : ''}\"\n                value=\"${int.timestamp < 0 ? int.timestamp :\n                            convertSecondsToHMS(int.timestamp, false, false)}\"></div>`;\n                    $(`#importmodal .select-interaction`).append(inputgroup);\n                });\n\n                $(document).off('click', '#importmodal #importcontentbutton').on('click', '#importmodal #importcontentbutton',\n                    async function(e) {\n                        e.preventDefault();\n                        let $selected = $(`#importmodal .select-interaction input[type=\"checkbox\"]:checked`);\n                        let selectedInt = [];\n                        $selected.each(function() {\n                            let $row = $(this).closest('.input-group');\n                            const name = $row.find('.name').val();\n                            if (name.trim() == '') {\n                                return;\n                            }\n                            let timestamp = $row.find('.timestamp-input').val();\n                            if (timestamp == '') {\n                                return;\n                            }\n\n                            if (Number(timestamp) < 0) {\n                                timestamp = Number(timestamp);\n                            } else {\n                                const parts = timestamp.split(':');\n                                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                                if (annotations.find(x => x.timestamp == timestamp)) {\n                                    return;\n                                }\n                            }\n                            let id = $row.data('id');\n                            let int = interactions.find(x => x.id == id);\n                            int.title = name;\n                            int.timestamp = timestamp;\n                            let xp = Number($row.find('.xp').val());\n                            if (isNaN(xp) || xp == '') {\n                                xp = 0;\n                            }\n                            int.xp = xp;\n                            selectedInt.push(int);\n                        });\n                        if (selectedInt.length == 0) {\n                            addNotification(M.util.get_string('selectinteraction', 'mod_interactivevideo'), 'danger');\n                            return;\n                        } else {\n                            let interactions = await $.ajax({\n                                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                                method: \"POST\",\n                                dataType: \"text\",\n                                data: {\n                                    action: 'import_annotations',\n                                    sesskey: M.cfg.sesskey,\n                                    contextid: M.cfg.contextid,\n                                    annotations: JSON.stringify(selectedInt),\n                                    tocourse: M.cfg.courseId,\n                                    fromcourse: $('#importcourse').val(),\n                                    tocm: interaction,\n                                    fromcm: $('#importcm').val(),\n                                    module: coursemodule\n                                }\n                            });\n                            interactions = JSON.parse(interactions);\n\n                            // Dismiss modal.\n                            $('#importmodal').modal('hide');\n\n                            // Add the imported annotations to the current annotations.\n                            annotations = annotations.concat(interactions);\n                            dispatchEvent('annotationupdated', {\n                                annotations: annotations,\n                                action: 'import'\n                            });\n\n                            // Get interaction that allowmultiple false and init each one.\n                            interactions.forEach(int => {\n                                if (!int.allowmultiple) {\n                                    ctRenderer[int.type].init();\n                                }\n                            });\n                        }\n                    });\n            });\n\n            // Implement content type filter.\n            $(document).on('keyup', '#contentmodal #contentsearch', function() {\n                let search = $(this).val().toLowerCase();\n\n                $('#addcontentdropdown .dropdown-item').removeClass('d-none').addClass('d-flex');\n\n                if (search == '') {\n                    return;\n                }\n\n                $('#contentmodal #addcontentdropdown .dropdown-item').each(function() {\n                    let text = $(this).find('.contenttype-title').text().toLowerCase();\n                    if (text.includes(search)) {\n                        $(this).addClass('d-flex').removeClass('d-none');\n                    } else {\n                        $(this).addClass('d-none').removeClass('d-flex');\n                    }\n                });\n            });\n\n            // Implement fast forward and rewind.\n            const fastforward = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time >= end) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time += 1;\n                } else {\n                    time += 0.2;\n                }\n                if (time > end) {\n                    time = end;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastforward(e);\n            });\n\n            let fastForwardInterval;\n            $(document).on('mousedown', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastForwardInterval = setInterval(async() => {\n                    fastforward(e);\n                    if (await player.getCurrentTime() >= end) {\n                        clearInterval(fastForwardInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#fast-forward', function() {\n                clearInterval(fastForwardInterval);\n            });\n\n            const rewind = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time <= start) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time -= 1;\n                } else {\n                    time -= 0.2;\n                }\n                if (time < start) {\n                    time = start;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#rewind', async function(e) {\n                e.preventDefault();\n                rewind(e);\n            });\n\n            let rewindInterval;\n            $(document).on('mousedown', '#rewind', async function(e) {\n                e.preventDefault();\n                rewindInterval = setInterval(async() => {\n                    rewind(e);\n                    if (await player.getCurrentTime() <= start) {\n                        clearInterval(rewindInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#rewind', function() {\n                clearInterval(rewindInterval);\n            });\n\n            // Remove all event listeners before leaving the page.\n            window.addEventListener('beforeunload', function() {\n                $(document).off();\n                cancelAnimationFrame(onPlayingInterval);\n            });\n\n            let idleInterval = null;\n            $(document).on('visibilitychange', async function() {\n                // Destroy the player if the tab is hidden and the video isn't playing for more than 30 minutes.\n                if (document.visibilityState == 'hidden') {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    // Check if the player is paused and the user is not interacting with the player.\n                    idleInterval = setInterval(async() => {\n                        const isPaused = await player.isPaused();\n                        const isEnded = await player.isEnded();\n                        if (isEnded || isPaused || !playerReady || !player) {\n                            // Destroy the player.\n                            try {\n                                player.destroy();\n                            } catch (error) {\n                                // Do nothing.\n                            }\n                            cancelAnimationFrame(onPlayingInterval);\n                            clearInterval(idleInterval);\n                            $(document).off();\n                            let $endscreen = $('#end-screen');\n                            if ($endscreen.length == 0) {\n                                // Cover the video with a message on a white background div.\n                                $('#video-wrapper')\n                                    .append(`<div id=\"end-screen\" class=\"border position-absolute w-100 h-100 bg-white d-flex\n                                    justify-content-center align-items-center\" style=\"top: 0; left: 0;\">\n                                    <button class=\"btn btn-danger border-0 rounded-circle\" style=\"font-size: 1.5rem;\" id=\"restart\">\n                                <i class=\"bi bi-arrow-repeat\" style=\"font-size: x-large;\"></i></button></div>`);\n                            }\n                            $(document).on('click', '#end-screen #restart', function(e) {\n                                e.preventDefault();\n                                location.reload();\n                            });\n                            $('#timeline-wrapper').addClass('no-pointer-events');\n                        }\n                    }, 60 * 1000 * 15);\n                } else {\n                    // Cancel the destroy player timeout.\n                    clearInterval(idleInterval);\n                }\n            });\n\n            $(document).on('iv:autoplayBlocked', function(e) {\n                e.preventDefault();\n                addNotification(M.util.get_string('autoplayblocked', 'mod_interactivevideo'), 'danger');\n            });\n        }\n    };\n});"],"names":["define","$","addToast","Notification","player","totaltime","currentTime","dispatchEvent","ctRenderer","playerReady","$loader","replaceProgressBars","percentage","css","renderVideoNav","async","annos","start","length","empty","remove","forEach","render","x","type","renderItemOnVideoNavigation","time","getCurrentTime","init","url","coursemodule","interaction","course","end","coursecontextid","displayoptions","userid","posterimage","extendedcompletion","addNotification","msg","add","Number","isNaN","contentTypes","annotations","convertSecondsToHMS","s","dynamic","rounded","Math","round","hours","floor","minutes","seconds","parseFloat","toFixed","activeid","renderAnnotationItems","removeClass","html","M","util","get_string","addClass","sort","a","b","timestamp","item","listItem","clone","renderEditItem","xp","filter","map","reduce","text","activeAnno","find","id","postEditCallback","getAnnotations","getItems","ajax","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","courseContextId","getContentTypes","when","done","items","contenttypes","JSON","parse","y","name","getRenderers","Promise","resolve","count","require","amdmodule","Type","prop","author","authorlink","description","stringify","validateTimestampFormat","fld","existing","test","val","validateTimeStartEnd","checkduration","checkexisting","checkskipsegment","parts","split","message","skip","annotation","title","runInteraction","modal","not","pause","updateTime","duration","toUpdatetime","onReady","isPaused","seek","audio","passwordprotected","support","playbackrate","quality","t","ratio","usefixedratio","aspectratio","relWidth","width","startPercentage","newStart","append","i","marker","setCaption","e","onEnded","toggleClass","focus","currentAnnotation","tooltip","setTimeout","onSeek","onPlayingInterval","visualized","onPlaying","visualizer","intervalFunction","thisTime","isPlaying","isEnded","cancelAnimationFrame","stop","scrollBar","document","getElementById","rect","getBoundingClientRect","left","right","window","innerWidth","scrollIntoView","behavior","block","inline","frequency","useAnimationFrame","animate","requestAnimationFrame","onPause","VideoPlayer","load","IVPLAYER","on","detail","originalEvent","updated","push","status","removeAttr","attr","target","is","ctype","this","contenttype","hastimestamp","allowmultiple","addAnnotation","preventDefault","closest","editAnnotation","cloneAnnotation","deleteCancelPromise","then","deleteAnnotation","catch","saveCancel","theAnnotation","play","stopImmediatePropagation","offsetX","trigger","hide","siblings","initialValue","key","show","hasClass","field","value","success","appendTimestampMarker","formattedTime","targetAnnotation","draggable","resizable","event","ui","position","skipduration","abs","originalPosition","originalSize","size","direction","off","height","localStorage","setItem","drag","offset","playerWidth","getItem","timelineHeight","$scrollbar","parentOffset","relX","pageX","fadeIn","fadeOut","currentLevel","newLevel","parseInt","timelineElement","scrollWidth","clientWidth","ctrlKey","metaKey","deltaY","addEventListener","scrollLeft","style","scrollHeight","draftAnnotations","confirmationMessage","returnValue","rate","setRate","getQualities","currentQuality","qualities","qualitiesLabel","q","dropdown","setQuality","timelineWrapper","resizeObserver","ResizeObserver","observe","importmodal","handle","courses","fullname","localeCompare","courseSelect","shortname","selectfield","courseid","cms","cmSelect","cm","after","interactions","int","icon","outside","disabled","inputgroup","hascompletion","$selected","selectedInt","each","$row","trim","tocourse","courseId","fromcourse","tocm","fromcm","module","concat","search","toLowerCase","includes","fastforward","fastForwardInterval","setInterval","clearInterval","rewind","rewindInterval","idleInterval","visibilityState","destroy","error","location","reload"],"mappings":"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"}