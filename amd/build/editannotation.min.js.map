{"version":3,"file":"editannotation.min.js","sources":["../src/editannotation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Edit interactions module\n *\n * @module     mod_interactivevideo/editannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/toast',\n    'core/notification',\n    'core/event_dispatcher',\n    './quickform',\n    'core/modal_factory',\n    'core/modal_events',\n    './libraries/jquery-ui',\n], function($, addToast, Notification, {dispatchEvent}, quickform, ModalFactory, ModalEvents) {\n    let ctRenderer = {};\n    let player;\n    let totaltime;\n    let currentTime;\n    let playerReady = false;\n    const isRTL = $('html').attr('dir') == 'rtl';\n    const isBS5 = $('body').hasClass('bs-5');\n    const bsAffix = isBS5 ? '-bs' : '';\n    let $loader = $('#background-loading');\n    /**\n     * Replace the progress bar on the video navigation.\n     * @param {Number} percentage - Percentage to replace the progress bar.\n     * @returns {void}\n     * */\n    const replaceProgressBars = (percentage) => {\n        percentage = percentage < 0 ? 0 : percentage;\n        percentage = percentage > 100 ? 100 : percentage;\n        $('#video-nav #progress').css('width', percentage + '%');\n        $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n    };\n    /**\n     * Render the annotations on the video navigation.\n     * @param {Array} annos - Annotations to render.\n     * @param {Number} start - Start time of the video.\n     * @param {Number} totaltime - Total time of the video.\n     * @returns {void}\n     * */\n    const renderVideoNav = async function(annos, start, totaltime) {\n        if (annos.length == 0) {\n            $(\"#video-nav ul\").empty();\n            return;\n        }\n\n        $(\"#video-nav ul\").empty();\n        $(\"#video-timeline-wrapper .skipsegment\").remove();\n        annos.forEach(async(x) => {\n            const render = ctRenderer[x.type];\n            await render.renderItemOnVideoNavigation(x);\n        });\n\n        const time = await player.getCurrentTime();\n        // Replace progress bar.\n        const percentage = (time - start) / totaltime * 100;\n        replaceProgressBars(percentage);\n        dispatchEvent('annotationitemsrendered', {'annotations': annos});\n    };\n\n    return {\n        /**\n         * Initialize function on page loads.\n         * @param {String} url video url\n         * @param {Number} coursemodule cm id\n         * @param {Number} interaction cm instance\n         * @param {Number} course course id\n         * @param {Number} start video start time\n         * @param {Number} end video end time\n         * @param {Number} coursecontextid course context id\n         * @param {String} type video type\n         * @param {Object} displayoptions display options\n         * @param {Number} userid user id\n         * @param {String} posterimage poster image\n         * @param {String} extendedcompletion extended completion\n         */\n        init: function(url, coursemodule, interaction, course, start, end, coursecontextid,\n            type = 'yt', displayoptions, userid, posterimage, extendedcompletion) {\n\n            quickform();\n\n            require(['theme_boost/bootstrap/modal']);\n            require(['theme_boost/bootstrap/tooltip']);\n            /**\n             * Util function to display notification\n             * @param {String} msg message text\n             * @param {String} type message type\n             */\n            const addNotification = (msg, type = \"info\") => {\n                addToast.add(msg, {\n                    type: type\n                });\n            };\n\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            let annotations = []; // Annotations.\n            let contentTypes; // Content types.\n\n            /**\n             * Convert seconds to HH:MM:SS format\n             * @param {Number} s second\n             * @param {Boolean} dynamic if true, only show minutes and seconds if less than one hour\n             * @param {Boolean} rounded if true, second is rounded\n             * @returns formatted timestamp\n             */\n            const convertSecondsToHMS = (s, dynamic = false, rounded = true) => {\n                if (rounded) {\n                    s = Math.round(s);\n                }\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - hours * 3600) / 60);\n                let seconds = s - hours * 3600 - minutes * 60;\n                if (rounded && seconds > 59.5) {\n                    seconds = 0;\n                    minutes++;\n                    if (minutes > 59) {\n                        minutes = 0;\n                        hours++;\n                    }\n                }\n                if (minutes < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                if (rounded) {\n                    seconds = Math.round(seconds);\n                } else {\n                    seconds = parseFloat(seconds).toFixed(2);\n                }\n\n                if (seconds < 10) {\n                    seconds = '0' + seconds;\n                }\n\n                if (dynamic && hours == 0) {\n                    return minutes + ':' + seconds;\n                }\n\n                return (hours < 10 ? '0' + hours : hours) + ':' + minutes + ':' + seconds;\n            };\n\n            let activeid = null; // Current active annotation id. Mainly used when editing to relaunch the interaction afte editing.\n\n            /**\n             * Handle rendering of annotation items on the list\n             * @param {Array} annotations array of annotation objects\n             * @returns\n             */\n            const renderAnnotationItems = (annotations) => {\n                $('#annotationwrapper .loader').remove();\n                $('#annotation-list').empty().removeClass(\"d-flex align-items-center justify-content-center\");\n                if (player.live) {\n                    $('#timeline-wrapper').addClass('no-pointer-events');\n                    $('#annotation-list').html(\n                        `${M.util.get_string('interactionsnotsupportedonlivevideo', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                renderVideoNav(annotations, start, totaltime);\n                if (annotations.length == 0) {\n                    $('#annotation-list').html(`${M.util.get_string('clickaddtoaddinteraction', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                annotations.sort(function(a, b) {\n                    // First sort by timestamp, then by type.\n                    if (Number(a.timestamp) === Number(b.timestamp)) {\n                        return String(a.type).localeCompare(String(b.type));\n                    }\n                    // Sort by timestamp.\n                    return Number(a.timestamp) - Number(b.timestamp);\n                });\n\n                annotations.forEach(function(item) {\n                    let listItem = $('#annotation-template').clone();\n                    ctRenderer[item.type].renderEditItem(annotations, listItem, item);\n                });\n\n                let xp = annotations.filter(x => x.xp).map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n                $(\"#xp span\").text(xp);\n\n                if (activeid) {\n                    const activeAnno = annotations.find(x => x.id == activeid);\n                    if (activeAnno) {\n                        ctRenderer[activeAnno.type].postEditCallback(activeAnno);\n                    }\n                }\n            };\n\n            /**\n             * Get annotations from the server and execute the rendering function\n             * @returns\n             */\n            const getAnnotations = () => {\n                const getItems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_all_contenttypes',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                $.when(getItems, getContentTypes).done(async function(items, contenttypes) {\n                    annotations = JSON.parse(items[0]);\n                    if (player.live) {\n                        annotations = [];\n                    }\n                    contentTypes = JSON.parse(contenttypes[0]);\n                    // Remove all annotations that are not in the enabled content types.\n                    annotations = annotations.filter(x => contentTypes.find(y => y.name === x.type));\n                    const getRenderers = new Promise((resolve) => {\n                        let count = 0;\n                        contentTypes.forEach(x => {\n                            require(['' + x.amdmodule], function(Type) {\n                                ctRenderer[x.name] = new Type(player, annotations, interaction,\n                                    course, 0, 0, 0, 0, type, 0, totaltime, start, end, x, coursemodule,\n                                    null, displayoptions, null, extendedcompletion, {\n                                    isEditMode: true,\n                                });\n                                count++;\n                                ctRenderer[x.name].init();\n                                if (count == contentTypes.length) {\n                                    resolve(ctRenderer);\n                                }\n                            });\n                        });\n                    });\n                    annotations.map(x => {\n                        let prop = contentTypes.find(y => y.name === x.type);\n                        // Clean up the prop by removing author, authorlink, description;\n                        delete prop.author;\n                        delete prop.authorlink;\n                        delete prop.description;\n                        x.prop = JSON.stringify(prop);\n                        x.editMode = true;\n                        return x;\n                    });\n                    ctRenderer = await getRenderers;\n                    renderAnnotationItems(annotations);\n                });\n            };\n\n            /**\n             * Validate given timestamp against format\n             * @param {String} timestamp formatted timestamp hh:mm:ss\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @returns\n             */\n            const validateTimestampFormat = (timestamp, fld, existing) => {\n                const regex = /^([0-9]{2}):([0-5][0-9]):([0-5][0-9])(\\.\\d{2})?$/;\n                if (!regex.test(timestamp)) {\n                    addNotification(M.util.get_string('invalidtimestampformat', 'mod_interactivevideo'), 'danger');\n                    if (existing) {\n                        $(fld).val(existing);\n                    } else {\n                        $(fld).val(convertSecondsToHMS(start, false, false));\n                    }\n                    return false;\n                }\n                return true;\n            };\n\n            /**\n             * Validate timestamp against start and end time of the video, existing timestamp and skip segments\n             * @param {String} timestamp formatted timestamp\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @param {Number} seconds\n             * @param {Boolean} checkduration if true, check against start and end time\n             * @param {Boolean} checkexisting if true, check against existing annotations\n             * @param {Boolean} checkskipsegment if true, check against skip segments\n             * @returns\n             */\n            const validateTimeStartEnd = (timestamp, fld, existing, seconds, checkduration,\n                checkexisting, checkskipsegment) => {\n                // Convert the timestamp to seconds.\n                const parts = timestamp.split(':');\n                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                // Make sure the timestamp is between start and end.\n                if (checkduration) {\n                    if (timestamp > end || timestamp < start) {\n                        const message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(start, true, false),\n                            \"end\": convertSecondsToHMS(end, true, false)\n                        });\n                        addNotification(message, 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure the timestamp is not already in the list.\n                if (checkexisting) {\n                    if (annotations.find(x => x.timestamp == timestamp) && timestamp != seconds) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure timestamp is not in a skip segment.\n                if (checkskipsegment) {\n                    const skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(timestamp)\n                        && Number(x.title) > Number(timestamp));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(skip.timestamp, true, false),\n                            \"end\": convertSecondsToHMS(skip.title, true, false)\n                        }), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                return timestamp;\n            };\n\n            /**\n             * Run interaction\n             * @param {Object} annotation annotation object\n             */\n            const runInteraction = (annotation) => {\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').not('.sticky').remove();\n                $('#end-screen').remove();\n                player.pause();\n                const activityType = ctRenderer[annotation.type];\n                activityType.runInteraction(annotation);\n            };\n\n            /**\n             * Correct the start and end time.\n             * @param {Number} duration Total duration of the video.\n             * @returns {Object} Object containing start and end time.\n             */\n            const updateTime = async(duration) => {\n                duration = Number(duration);\n                let toUpdatetime = false;\n                if (!end || end == 0) {\n                    toUpdatetime = true;\n                }\n                if (!start || start >= duration || start < 0 || start >= duration) {\n                    toUpdatetime = true;\n                }\n                start = start > duration ? 0 : start;\n                if (toUpdatetime) {\n                    await $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_videotime',\n                            sesskey: M.cfg.sesskey,\n                            cmid: coursemodule,\n                            courseid: course,\n                            id: interaction,\n                            start: start,\n                            end: !end || end == 0 ? duration : end,\n                            contextid: M.cfg.contextid\n                        }\n                    });\n                }\n                end = !end || end == 0 || end > duration ? duration : end;\n                return {start, end};\n            };\n\n            /**\n             * Set of events to run after the video player is ready.\n             */\n            const onReady = async() => {\n                if (player.live) {\n                    end = Number.MAX_SAFE_INTEGER;\n                }\n                if (player.type != 'yt') {\n                    player.pause();\n                }\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    if (!player.live) {\n                        await player.seek(start);\n                    }\n                    player.pause();\n                    onReady();\n                    return;\n                }\n                player.unMute();\n                if (player.audio) {\n                    $('#annotation-canvas').addClass('bg-black');\n                }\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#start-screen').removeClass('d-none');\n                    $('#video-block').removeClass('no-pointer bg-transparent');\n                }\n                if (player.type != 'vimeo'\n                    && player.type != 'html5video'\n                    && player.type != 'panopto'\n                    && player.type != \"peertube\") { // Vimeo/HTML5 does not pause/play on click.\n                    $('#video-block').addClass('no-pointer');\n                }\n\n                if (player.support.playbackrate == false) {\n                    $('#changerate').remove();\n                } else {\n                    $('#changerate').removeClass('d-none');\n                }\n\n                if (player.support.quality == false) {\n                    $('#changequality').remove();\n                } else {\n                    $('#changequality').removeClass('d-none');\n                }\n\n                let t = player.totaltime;\n\n                ({start, end} = await updateTime(t));\n\n                totaltime = end - start;\n                // Recalculate the ratio of the video.\n                let ratio = 16 / 9;\n                if (!displayoptions.usefixedratio || displayoptions.usefixedratio == 0) {\n                    ratio = player.aspectratio;\n                }\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                playerReady = true;\n                $('#annotation-canvas').removeClass('d-none w-0');\n\n                // Handle timeline block.\n                $(\"#timeline-wrapper #video-timeline\").css({\n                    'background-image': 'url(' + posterimage + ')',\n                    'background-size': 'contain',\n                    'background-repeat': 'no-repeat',\n                });\n                $(\"#timeline-wrapper #duration\").text(convertSecondsToHMS(end, true));\n                $(\"#timeline-wrapper #currenttime\").text(convertSecondsToHMS(start, true));\n                // Render minute markers.\n                const minutes = Math.floor(totaltime / 60);\n                $('#timeline-items-wrapper').css('width', (minutes * 300) + 'px'); // 300px per minute as default.\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let startPercentage = 0;\n                let newStart = start;\n                if (start % 60 != 0) {\n                    startPercentage = (60 - (start % 60)) / totaltime * 100;\n                    newStart = start + (60 - (start % 60));\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 0%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n                for (let i = newStart; i <= end; i += 60) {\n                    let percentage = ((i - newStart) / totaltime * 100) + startPercentage;\n                    let marker = '';\n                    // Format h:m (e.g 3h1m).\n                    if (i >= 3600) {\n                        marker = Math.floor(i / 3600) + 'h' + Math.floor((i % 3600) / 60) + 'm';\n                    } else {\n                        marker = Math.floor(i / 60) + 'm';\n                    }\n                    $('#minute-markers').append(`<div class=\"minute-marker position-absolute\"\n                         style=\"left: ${percentage}%;\"><div class=\"text-white minute-label\">${marker}</div></div>`);\n                    $('#minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                            style=\"left: ${percentage}%;\"></div>`);\n                }\n\n                if (end % 60 != 0) {\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 100%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n\n                // Set caption to null.\n                try {\n                    player.setCaption('');\n                } catch (e) {\n                    // Do nothing.\n                }\n\n                $('#scrollbar, #scrollhead-top').css('left', 0);\n\n                getAnnotations();\n            };\n\n            /**\n             * Run when video ended (i.e. arrives at 'end' time)\n             */\n            const onEnded = () => {\n                player.pause();\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n                // Cover the video with a message on a white background div.\n                $('#video-wrapper').append(`<div id=\"end-screen\" class=\"border position-absolute w-100 h-100 bg-white d-flex\n                     justify-content-center align-items-center\" style=\"top: 0; left: 0;\">\n                     <button class=\"btn btn-danger border-0 iv-rounded-circle\" style=\"font-size: 1.5rem;\" id=\"restart\">\n                    <i class=\"bi bi-arrow-repeat\" style=\"font-size: x-large;\"></i></button></div>`);\n                $('#video-nav #progress').css('width', '100%');\n                $('#scrollbar, #scrollhead-top').css('left', '100%');\n                // Focus on the restart button.\n                $('#message #restart').focus();\n\n                // If the current time matches the timestamp of an annotation, highlight the annotation.\n                const currentAnnotation = annotations.find((annotation) => annotation.timestamp == end);\n                if (currentAnnotation) {\n                    $('#annotation-list tr').removeClass('active');\n                    $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                    // Show tooltip for two seconds.\n                    $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                    setTimeout(function() {\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                    }, 2000);\n                }\n            };\n\n            /**\n             * Execute when video is sought\n             * @param {Number} t seconds\n             * @returns\n             */\n            const onSeek = async function(t) {\n                if (!playerReady) {\n                    return;\n                }\n                if (t) {\n                    t = Number(t);\n                } else {\n                    t = await player.getCurrentTime();\n                }\n                if (t > start && t < end) {\n                    $('#end-screen').remove();\n                }\n                const percentage = (t - start) / (totaltime) * 100;\n                $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(t, true));\n                dispatchEvent('timeupdate', {'time': t});\n            };\n\n            let onPlayingInterval;\n            let visualized = false;\n            /**\n             * Excute when video plays (i.e. start or resume)\n             */\n            const onPlaying = async() => {\n                if (player.live) {\n                    return;\n                }\n                const intervalFunction = async function() {\n                    let thisTime = await player.getCurrentTime();\n                    const isPlaying = await player.isPlaying();\n                    const isEnded = await player.isEnded();\n                    if (!isPlaying) {\n                        cancelAnimationFrame(onPlayingInterval);\n                        return;\n                    }\n\n                    if (thisTime < start) {\n                        await player.seek(start);\n                        thisTime = start;\n                    }\n\n                    if (thisTime >= end || isEnded) {\n                        player.stop(end);\n                        cancelAnimationFrame(onPlayingInterval);\n                        onEnded();\n                        return;\n                    }\n                    dispatchEvent('timeupdate', {'time': thisTime});\n                    let percentage = (thisTime - start) / (totaltime) * 100;\n                    // Scroll the timeline so that the current time is in the middle of the timeline.\n                    const scrollBar = document.getElementById('scrollbar');\n                    // Check if the scrollbar is in view.\n                    const rect = scrollBar.getBoundingClientRect();\n                    if (rect.left < 0 || rect.right > window.innerWidth) {\n                        scrollBar.scrollIntoView({behavior: \"instant\", block: \"center\", inline: \"center\"});\n                    }\n\n                    // If the current time matches the timestamp of an annotation, highlight the annotation\n                    const currentAnnotation = annotations.find(x => (thisTime - player.frequency) <= x.timestamp\n                        && (thisTime + player.frequency) >= x.timestamp);\n                    if (currentAnnotation) {\n                        $(`#annotation-list tr:not([data-id=\"${currentAnnotation.id}\"])`).removeClass('active');\n                        if (!$(`tr[data-id=\"${currentAnnotation.id}\"]`).hasClass('active')) {\n                            $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                            $(`tr[data-id=\"${currentAnnotation.id}\"]`).trigger('mouseenter');\n                            setTimeout(function() {\n                                $(`tr[data-id=\"${currentAnnotation.id}\"]`).trigger('mouseleave');\n                            }, 2000);\n                        }\n                    }\n\n                    // If current time is within the skipsegment, seek to the end of the segment.\n                    let skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    let skip = skipsegments.find(x => Number(x.timestamp) < Number(thisTime)\n                        && Number(x.title) > Number(thisTime));\n                    if (skip) {\n                        await player.seek(Number(skip.title));\n                        // Replace the progress bar.\n                        percentage = (skip.title - start) / totaltime * 100;\n                        replaceProgressBars(percentage);\n                    }\n                };\n                if (player.useAnimationFrame) {\n                    const animate = async() => {\n                        const isPlaying = await player.isPlaying();\n                        if (isPlaying) {\n                            intervalFunction();\n                            onPlayingInterval = requestAnimationFrame(animate);\n                        }\n                    };\n                    onPlayingInterval = requestAnimationFrame(animate);\n                } else {\n                    const isPlaying = await player.isPlaying();\n                    if (isPlaying) {\n                        intervalFunction();\n                    }\n                }\n            };\n\n            const onplay = async() => {\n                $('#message, #end-screen').not('.sticky').remove();\n                $('#playpause').find('i').removeClass('bi-play-fill').addClass('bi-pause-fill').removeClass('rotate-360');\n                if (player.audio && !visualized) {\n                    player.visualizer();\n                    visualized = true;\n                }\n            };\n\n            /**\n             * Excute when video is paused.\n             */\n            const onPause = () => {\n                cancelAnimationFrame(onPlayingInterval);\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + type], function(VideoPlayer) {\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#video-block').addClass('no-pointer bg-transparent');\n                    $('#annotation-canvas').removeClass('d-none w-0');\n                }\n                player = new VideoPlayer();\n                player.load(\n                    url,\n                    start,\n                    end,\n                    {\n                        'customStart': true,\n                        'passwordprotected': displayoptions.passwordprotected == 1,\n                        'showControls': false,\n                        'keyboard': true,\n                    }\n                );\n                window.IVPLAYER = player;\n            });\n\n            $(document).one('iv:playerReady', function() {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function() {\n                onPause();\n            });\n\n            $(document).on('iv:playerPlaying', function() {\n                onPlaying();\n            });\n\n            $(document).on('iv:playerPlay', function() {\n                onplay();\n            });\n\n            $(document).on('iv:playerEnded', function() {\n                onEnded();\n            });\n\n            $(document).on('iv:playerSeek', function(e) {\n                onSeek(e.detail.time);\n            });\n\n            $(document).on('iv:playerError', function() {\n                $('#annotation-canvas').removeClass('d-none w-0');\n                $('#start-screen').addClass('d-none');\n                $('#video-block').addClass('no-pointer bg-transparent');\n                $('#spinner').remove();\n                $('.loader').removeClass('loader');\n                if ($('#player').is(':empty')) {\n                    $('#player').html(`<div class=\"alert alert-danger d-flex text-center h-100 rounded-0\n                         align-items-center justify-content-center\">\n                        <img src=\"${M.cfg.wwwroot}/mod/interactivevideo/pix/404-error.png\" alt=\"Error\" class=\"w-25\">\n                        </div>`);\n                } else {\n                    addNotification(M.util.get_string('thereisanissueloadingvideo', 'mod_interactivevideo'), 'danger');\n                }\n            });\n\n            $(document).on('timeupdate', function(e) {\n                if (!playerReady) {\n                    player.pause();\n                    return;\n                }\n                const thisTime = e.detail.time;\n                $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(thisTime, true));\n                let percentage = (thisTime - start) / (totaltime) * 100;\n                replaceProgressBars(percentage);\n            });\n\n            // Post annotation update (add, edit, clone).\n            let cacheCleared = false;\n            $(document).on('annotationupdated', function(e) {\n                if (!cacheCleared) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_ivitems_cache',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            cmid: interaction,\n                        },\n                        success: function() {\n                            cacheCleared = true;\n                        }\n                    });\n                }\n                if ($('#annotation-list-bulk-edit').hasClass('active')) {\n                    $('#annotation-list-bulk-edit').trigger('click');\n                }\n                const action = e.originalEvent.detail.action;\n                if (action == 'import') {\n                    annotations = e.originalEvent.detail.annotations;\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactionimported', 'mod_interactivevideo'), 'success');\n                    return;\n                }\n                let updated = e.originalEvent.detail.annotation;\n                if (action == 'edit' || action == 'draft' || action == 'savedraft') {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != updated.id;\n                    });\n                }\n                updated.prop = JSON.stringify(contentTypes.find(x => x.name === updated.type));\n                annotations.push(updated);\n                if (action == 'add') {\n                    activeid = updated.id;\n                } else {\n                    activeid = null;\n                }\n                annotations.map(x => {\n                    x.editMode = true;\n                    return x;\n                });\n                renderAnnotationItems(annotations);\n                if (action == 'add' || action == 'clone') {\n                    addNotification(M.util.get_string('interactionadded', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                } else if (action == 'edit') {\n                    addNotification(M.util.get_string('interactionupdated', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    setTimeout(function() {\n                        $(`tr[data-id=\"${updated.id}\"]`).removeClass('active');\n                    }, 1500);\n                }\n\n                // If draft exists, activate the save button.\n                if (annotations.find(x => x.status == 'draft')) {\n                    $('#timeline-wrapper #savedraft').removeAttr('disabled').addClass('pulse');\n                } else {\n                    $('#timeline-wrapper #savedraft').attr('disabled', 'disabled').removeClass('pulse');\n                }\n            });\n\n            // Re-render annotation list and timeline after an annotation is deleted.\n            $(document).on('annotationdeleted', function(e) {\n                const annotation = e.originalEvent.detail.annotation;\n                activeid = null;\n                $(`tr[data-id=\"${annotation.id}\"]`).addClass('deleted');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != annotation.id;\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactiondeleted', 'mod_interactivevideo'), 'success');\n                }, 1000);\n                if ($($('#annotation-list-bulk-edit')).hasClass('active')) {\n                    $('#annotation-list-bulk-edit').trigger('click');\n                }\n            });\n\n            // Implement create annotation\n            $(document).on('click', '#addcontentdropdown .dropdown-item', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                // Check if the target item is a link.\n                if ($(e.target).is('a')) {\n                    return;\n                }\n\n                const ctype = $(this).data('type');\n                player.pause();\n                let timestamp = currentTime || await player.getCurrentTime();\n                timestamp = Number(timestamp.toFixed(2));\n                const contenttype = contentTypes.find(x => x.name == ctype);\n                if (contenttype.hastimestamp) {\n                    if (annotations.find(x => x.timestamp == timestamp)) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                    // Check skip segments\n                    const skipsegments = annotations.filter(x => x.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(currentTime)\n                        && Number(x.title) > Number(currentTime));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                }\n                if (!contenttype.allowmultiple && annotations.find(x => x.type == ctype)) {\n                    addNotification(M.util.get_string(\n                        'thisinteractionalreadyexists', 'mod_interactivevideo', contenttype.title), 'danger');\n                    return;\n                }\n                currentTime = null;\n                ctRenderer[ctype].addAnnotation(annotations, contenttype.hastimestamp ? timestamp : -1, coursemodule);\n            });\n\n            // Implement edit annotation\n            $(document).on('click', 'tr.annotation .edit', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].editAnnotation(annotations, id, coursemodule);\n                const t = await player.getCurrentTime();\n                if (timestamp && t != timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                const isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                }\n            });\n\n            // Implement copy annotation\n            $(document).on('click', 'tr.annotation .copy', async function(e) {\n                e.preventDefault();\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                const time = await player.getCurrentTime();\n                ctRenderer[contenttype].cloneAnnotation(id, time);\n            });\n\n            // Implement delete annotation.\n            $(document).on('click', 'tr.annotation .delete', async function(e) {\n                e.preventDefault();\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    player.pause();\n                }\n                const id = $(this).closest('.annotation').data('id');\n                const annotation = annotations.find(annotation => annotation.id == id);\n                try {\n                    Notification.deleteCancelPromise(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                    ).then(() => {\n                        return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                    }).catch(() => {\n                        return;\n                    });\n                } catch {\n                    Notification.saveCancel(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                        function() {\n                            return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                        }\n                    );\n                }\n\n\n            });\n\n            // Implement view annotation.\n            $(document).on('click', 'tr.annotation .title', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                // Update the progress bar.\n                const percentage = (timestamp - start) / totaltime * 100;\n                replaceProgressBars(percentage);\n                let currentTime = await player.getCurrentTime();\n                if (currentTime != timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const theAnnotation = annotations.find(annotation => annotation.id == id);\n                setTimeout(() => {\n                    runInteraction(theAnnotation);\n                }, 500);\n            });\n\n            // Implement go to timestamp.\n            $(document).on('click', 'tr.annotation .timestamp', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).data('timestamp');\n                await player.seek(timestamp);\n                player.play();\n            });\n\n            // Right click on the video nav or video timeline to add a new interaction.\n            $(document).on('contextmenu', '#vseek, #video-timeline', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                currentTime = (percentage * totaltime) + start;\n                let t = await player.getCurrentTime();\n                if (t != currentTime) {\n                    await player.seek(currentTime);\n                }\n                player.pause();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Right click on the scrollbar to add a new interaction.\n            $(document).on('contextmenu', '#scrollbar, #scrollhead-top', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                currentTime = await player.getCurrentTime();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Click the play/pause button on the timeline region to pause/play video.\n            $(document).on('click', '#playpause', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                // Pause or resume the video.\n                let isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                } else {\n                    let t = await player.getCurrentTime();\n                    if (t >= end) {\n                        $('#end-screen #restart').trigger('click');\n                    } else {\n                        player.play();\n                    }\n                }\n            });\n\n            $(document).on('click', '#video-block', function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $('#playpause').trigger('click');\n            });\n\n            // Right click on the annotation indicator to edit the annotation.\n            $(document).on('contextmenu', '#video-nav .annotation', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                // Trigger click on the edit button.\n                $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n            });\n\n            // Quick edit.\n            $(document).on('contextmenu', '[data-editable]', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($('[data-field].editing').length > 0) {\n                    return;\n                }\n                const fld = $(this).data('editable');\n                $(this).hide();\n                $(this).siblings('[data-field=\"' + fld + '\"]').removeClass('d-none').focus().addClass('editing');\n                if (fld == 'timestamp') {\n                    $(this).closest('tr')\n                        .append(`<div class=\"timestamp-info position-absolute\">\n                        ${M.util.get_string('rightclicktosetcurrenttime', 'mod_interactivevideo')}</div>`);\n                }\n            });\n\n            $(document).on('contextmenu', '[data-field=\"timestamp\"]', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const time = await player.getCurrentTime();\n                $(this).val(convertSecondsToHMS(time, false, false));\n            });\n\n            $(document).on('keyup', '[data-field].editing', function(e) {\n                $(this).removeClass('is-invalid');\n                const initialValue = $(this).data('initial-value');\n                const val = $(this).val();\n                const fld = $(this).data('field');\n                if (val == '') {\n                    $(this).addClass('is-invalid');\n                }\n\n                // If escape key is pressed, revert the value.\n                if (e.key == 'Escape') {\n                    $(this).val(initialValue);\n                    $(this).removeClass('editing');\n                    $(this).addClass('d-none');\n                    $(this).siblings('[data-editable]').show();\n                    $('.timestamp-info').remove();\n                    return;\n                }\n                // If enter key is pressed, save the value.\n                if (e.key == 'Enter') {\n\n                    let seconds;\n                    if (fld == 'timestamp') {\n                        const parts = initialValue.split(':');\n                        seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!validateTimestampFormat(val, '[data-field].editing', initialValue)) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        const timestamp = validateTimeStartEnd(val, '[data-field].editing', initialValue, seconds,\n                            true, true, true);\n                        if (timestamp == -1) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        seconds = timestamp;\n                    }\n\n                    if ($(this).hasClass('is-invalid')) {\n                        return;\n                    }\n                    if (val == initialValue) {\n                        $(this).removeClass('editing');\n                        $(this).addClass('d-none');\n                        $(this).siblings('[data-editable]').show();\n                        return;\n                    }\n                    const id = $(this).data('id');\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: id,\n                            field: fld,\n                            contextid: M.cfg.contextid,\n                            value: fld == 'timestamp' ? seconds : val,\n                        },\n                        success: function(data) {\n                            $('.timestamp-info').remove();\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'edit'\n                            });\n                        }\n                    });\n                    return;\n                }\n            });\n\n            $(document).on('blur', '[data-field].editing', function() {\n                const initialValue = $(this).data('initial-value');\n                $(this).val(initialValue);\n                $(this).removeClass('editing');\n                $(this).addClass('d-none');\n                $(this).siblings('[data-editable]').show();\n                $('.timestamp-info').remove();\n            });\n            // End quick edit.\n\n            $(document).on('click', '#end-screen #restart', async function(e) {\n                e.preventDefault();\n                $('#end-screen').remove();\n                await player.seek(start);\n                player.play();\n            });\n\n            // Display tooltip on anntation indicator when annotation on the list is hovered.\n            $(document).on('mouseenter', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).tooltip('show');\n            });\n\n            // Remove tooltip when annotation on the list is not hovered.\n            $(document).on('mouseleave', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).tooltip('hide');\n                if (!isBS5) {\n                    $('.tooltip').remove();\n                }\n            });\n\n            // Highlight annotation on the list when annotation indicator is hovered.\n            $(document).on('mouseover', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).addClass('active');\n            });\n\n            // Remove highlight when annotation indicator is not hovered.\n            $(document).on('mouseout', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).removeClass('active');\n            });\n\n            // Validate timestamp when the timestamp field is changed.\n            $(document).on('change', '.timestamp-input, .timestamp-field input', function() {\n                $(this).removeClass('is-invalid');\n                const parts = $(this).val().split(':');\n                const seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                if (!validateTimestampFormat($(this).val(), this)) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n\n                const timestamp = validateTimeStartEnd($(this).val(), this, \"00:00:00\", seconds, true, false, true);\n\n                if (timestamp == -1) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n            });\n\n            const appendTimestampMarker = (seconds, rounded) => {\n                const formattedTime = convertSecondsToHMS(seconds, true, rounded);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n            };\n\n            $(document).on('annotationitemsrendered', function() {\n                $(`#timeline-wrapper [data${bsAffix}-toggle=\"tooltip\"]`).tooltip({\n                    'boundary': 'window',\n                    'container': '#timeline',\n                });\n                // Put the minute markers on the timeline;\n                let targetAnnotation = null;\n                // Destroy draggable and resizable if already initialized.\n                try {\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').draggable('destroy');\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').resizable('destroy');\n                } catch (e) {\n                    // Do nothing.\n                }\n                $('#timeline-items .annotation.li-draggable').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('.tooltip, #message').remove();\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        $('.tooltip').remove();\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            ui.position.left = -5;\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            ui.position.left = $('#timeline-items').width() - 5;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        $(this).css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('.tooltip').remove();\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            $(this).css('left', '-5px');\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            $(this).css('left', 'calc(100% - 5px)');\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                        }\n\n                        if (timestamp > end) {\n                            timestamp = end;\n                        }\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let skipduration = Number(targetAnnotation.title) - Number(targetAnnotation.timestamp);\n                        if (timestamp < 0 && timestamp + skipduration < start) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp > end) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp < start) {\n                            skipduration = skipduration - Math.abs(start - timestamp);\n                            timestamp = start;\n                        }\n                        if (timestamp + skipduration > end) {\n                            skipduration = Math.abs(end - timestamp);\n                            timestamp = end - skipduration;\n                        }\n                        if (skipduration <= 0) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.title = timestamp + skipduration;\n                        if (targetAnnotation.title > end) {\n                            targetAnnotation.title = end;\n                        }\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').resizable({\n                    'containment': '#video-timeline-wrapper',\n                    'handles': 'e, w',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'resize': async function(event, ui) {\n                        let timestamp;\n                        if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp, direction;\n                        if (ui.originalPosition.left != ui.position.left) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"left\";\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"right\";\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        if (direction == \"left\") {\n                            targetAnnotation.timestamp = timestamp;\n                        } else {\n                            targetAnnotation.title = timestamp;\n                            if (targetAnnotation.title > end) {\n                                targetAnnotation.title = end;\n                            }\n                        }\n                        targetAnnotation.status = 'draft';\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('contextmenu').on('contextmenu', function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    const id = $(this).data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('click').on('click', async function(e) {\n                    e.preventDefault();\n                    const timestamp = $(this).data('timestamp');\n                    await player.seek(timestamp);\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment .delete-skipsegment').off('click').on('click', function(e) {\n                    e.preventDefault();\n                    const id = $(this).closest('.skipsegment').data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .delete`).trigger('click');\n                });\n            });\n\n            $('#scrollbar').draggable({\n                'containment': '#timeline-items',\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#timeline-items').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#timeline-items').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#timeline-items').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            $('#scrollhead-top').draggable({\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#vseek').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#vseek').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#vseek').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    let t = await player.getCurrentTime();\n                    if (t === timestamp) {\n                        return;\n                    }\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            // Resize timeline.\n            $('#timeline-wrapper').resizable({\n                'handles': 'n',\n                'minHeight': 125,\n                'maxHeight': 500,\n                'start': function() {\n                    $('#top-region, #timeline-wrapper').addClass('no-pointer-events');\n                },\n                'resize': function(event, ui) {\n                    $('#top-region').css('height', `calc(100dvh - ${ui.size.height + 70}px)`);\n                },\n                'stop': function() {\n                    $('#top-region, #timeline-wrapper').removeClass('no-pointer-events');\n                    localStorage.setItem('timeline-height', $('#timeline-wrapper').height());\n                }\n            });\n\n            // Resize player region.\n            $('#separator').draggable({\n                'axis': 'x',\n                'containment': '#wrapper',\n                'grid': [1, 0],\n                'start': function() {\n                    $('#wrapper').addClass('no-pointer-events');\n                },\n                drag: function() {\n                    const parentOffset = $(this).offset();\n                    const width = parentOffset.left;\n                    if (!isRTL) {\n                        $('#player-region').css('width', width + 'px');\n                        $('#content-region').css('width', 'calc(100% - ' + width + 'px)');\n                    } else {\n                        $('#player-region').css('width', 'calc(100% - ' + width + 'px)');\n                        $('#content-region').css('width', width + 'px');\n                    }\n                },\n                stop: function() {\n                    const width = $(this).offset().left;\n                    // Save this to local storage\n                    localStorage.setItem('player-width', width);\n                    $('#wrapper').removeClass('no-pointer-events');\n                }\n            });\n\n            // Set player region width from the saved width in local storage.\n            const playerWidth = localStorage.getItem('player-width');\n            if (playerWidth > 0 && window.innerWidth > 992) {\n                $('#separator').css('left', playerWidth + 'px');\n                if (!isRTL) {\n                    $('#player-region').css('width', playerWidth + 'px');\n                    $('#content-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n                } else {\n                    $('#player-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n                    $('#content-region').css('width', playerWidth + 'px');\n                }\n            } else {\n                $('#separator').css('left', `50%`);\n                $('#player-region').css('width', `50%`);\n                $('#content-region').css('width', `50%`);\n            }\n\n            // Set timeline height from saved height in local storage.\n            const timelineHeight = localStorage.getItem('timeline-height');\n            if (timelineHeight) {\n                $('#timeline-wrapper').css('height', timelineHeight + 'px');\n                $('#top-region').css('height', `calc(100dvh - ${Number(timelineHeight) + 70}px)`);\n            }\n\n            // Seek bar functionalities\n            $('#vseek #bar, #video-timeline').on('mouseenter', function(e) {\n                $('#cursorbar, #position-marker').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                // First clone the #scrollbar and place it where the cursor is.\n                let $scrollbar = $('#scrollbar').clone();\n                $scrollbar.attr('id', 'cursorbar');\n                $scrollbar.addClass('no-pointer-events');\n\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n\n                $scrollbar.css('left', (relX + 5) + 'px');\n                $scrollbar.find('#scrollhead').remove();\n                const percentage = relX / $(this).width();\n                const time = percentage * (totaltime) + start;\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n                $('#vseek #position-marker').css('left', relX + 'px');\n                $('#timeline-items').append($scrollbar);\n            });\n\n            $('#vseek #bar, #video-timeline').on('mouseleave', function(e) {\n                e.stopImmediatePropagation();\n                $('#vseek #position-marker, #cursorbar').remove();\n                // Remove highlight.\n                $('tr.annotation.active').removeClass('active');\n            });\n\n            $('#vseek #bar, #video-timeline').on('mousemove', function(e) {\n                e.stopImmediatePropagation();\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                const percentage = relX / $(this).width();\n                let time = percentage * (totaltime) + start;\n                if (time < start) {\n                    time = start;\n                }\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                // Move the cursorbar\n                $('#cursorbar').css('left', (relX + 5) + 'px');\n                $('#vseek #position').text(formattedTime);\n                $('#vseek #position-marker').css('left', relX + 'px');\n            });\n\n            // Run interaction when annotation indicator is clicked.\n            $(document).on('click', '#video-nav .annotation', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                const annotation = annotations.find(x => x.id == id);\n                $loader.fadeIn(300);\n                if (await player.getCurrentTime() != annotation.timestamp) {\n                    await player.seek(annotation.timestamp);\n                }\n                $loader.fadeOut(300);\n                runInteraction(annotation);\n            });\n\n            // Seek video on click on timeline or video nav.\n            $(document).on('click', '#vseek #bar, #video-timeline', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                const time = percentage * (totaltime) + start;\n                const t = await player.getCurrentTime();\n                if (t === time) {\n                    return;\n                }\n                replaceProgressBars(percentage * 100);\n                $loader.fadeIn(300);\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    player.pause();\n                }\n                await player.seek(time);\n                $loader.fadeOut(300);\n                $(\"#message, #end-screen\").remove();\n            });\n\n            // Implement timeline zoom out.\n            $('#zoomout').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) - 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let timelineElement = document.getElementById('timeline');\n                if (timelineElement.scrollWidth <= timelineElement.clientWidth) {\n                    $(this).attr('disabled', 'disabled');\n                }\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement timeline zoom in.\n            $('#zoomin').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) + 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                $('#zoomout').removeAttr('disabled');\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement zoom in and zoom out on mouse scroll on timeline.\n            $(\"#timeline\").on('wheel', function(e) {\n                if (e.ctrlKey || e.metaKey) {\n                    e.preventDefault();\n                    if (e.originalEvent.deltaY < 0) {\n                        $('#zoomin').trigger('click');\n                    } else {\n                        $('#zoomout').trigger('click');\n                    }\n                }\n            });\n\n            document.getElementById('timeline').addEventListener('scroll', function() {\n                document.getElementById('minute-markers-wrapper').scrollLeft = this.scrollLeft;\n                document.getElementById('vseek').style.left = -this.scrollLeft + 'px';\n                document.getElementById('minute-markers-bg-wrapper').style.left = -this.scrollLeft + 'px';\n                document.getElementById('scrollbar').scrollHeight = this.scrollHeight;\n            });\n\n            // Save timeline changes.\n            $('#savedraft').on('click', function(e) {\n                e.stopImmediatePropagation();\n                let draftAnnotations = annotations.filter(x => x.status == 'draft');\n                let count = 0;\n                draftAnnotations.forEach(function(a) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: a.id,\n                            field: 'timestamp',\n                            contextid: M.cfg.contextid,\n                            value: a.timestamp,\n                        },\n                        success: function(data) {\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'savedraft'\n                            });\n                        }\n                    });\n                    if (a.type == 'skipsegment') {\n                        $.ajax({\n                            url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                            method: \"POST\",\n                            dataType: \"text\",\n                            data: {\n                                action: 'quick_edit_field',\n                                sesskey: M.cfg.sesskey,\n                                id: a.id,\n                                field: 'title',\n                                contextid: M.cfg.contextid,\n                                value: a.title,\n                            },\n                            success: function(data) {\n                                const updated = JSON.parse(data);\n                                dispatchEvent('annotationupdated', {\n                                    annotation: updated,\n                                    action: 'savedraft'\n                                });\n                            }\n                        });\n                    }\n                    count++;\n                    if (count == draftAnnotations.length) {\n                        addNotification(M.util.get_string('draftsaved', 'mod_interactivevideo'), 'success');\n                    }\n                });\n\n            });\n\n\n            // Launch content selection modal.\n            let contentTypeModal;\n            $('#addcontent').on('click', async function(e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n                if (contentTypeModal) {\n                    contentTypeModal.show();\n                    return;\n                }\n                contentTypeModal = await ModalFactory.create({\n                    title: '',\n                    body: '',\n                    backdrop: 'static',\n                    removeOnHide: true,\n                });\n                let root = contentTypeModal.getRoot();\n                let $body = $('#contentmodal-original .modal-content').html();\n                root.attr('id', 'contentmodal');\n                root.find('.modal-dialog .modal-content').html($body);\n                contentTypeModal.show();\n\n                root.on(ModalEvents.hidden, function() {\n                    $('#addcontentdropdown .dropdown-item').removeClass('active');\n                });\n\n                root.on(ModalEvents.shown, function() {\n                    player.pause();\n                    // Apply jelly animation after DOM is ready\n                    setTimeout(() => {\n                        root.addClass('jelly-anim');\n                    }, 10);\n\n                    // Make the modal draggable.\n                    root.find('.modal-dialog').draggable({\n                        handle: \".modal-header\"\n                    });\n                });\n\n                root.on('click', '.modal-header .close', function() {\n                    contentTypeModal.hide();\n                });\n\n                root.on('click', '.dropdown-item', function() {\n                    root.removeClass('jelly-anim');\n                    contentTypeModal.hide();\n                });\n            });\n\n            // Inform user to save changes before close or unload the current page.\n            window.addEventListener('beforeunload', (e) => {\n                if (annotations.find(x => x.status == 'draft')) {\n                    const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                    e.returnValue = confirmationMessage;\n                    return confirmationMessage;\n                }\n                return true;\n            });\n\n            // Implement the rate change.\n            $(document).on('click', '.changerate', function(e) {\n                e.preventDefault();\n                const rate = $(this).data('rate');\n                player.setRate(rate);\n                $('.changerate').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            $(document).on('iv:playerRateChange', function(e) {\n                $('.changerate').find('i').removeClass('bi-check');\n                $(`.changerate[data-rate=\"${e.originalEvent.detail.rate}\"]`).find('i').addClass('bi-check');\n            });\n\n            // Handle video control:: Quality change\n            $(\"#changequality\").on('shown.bs.dropdown', async function() {\n                let quality = await player.getQualities();\n                $('#qualitieslist').empty();\n                let currentQuality = quality.currentQuality;\n                if (currentQuality === null) {\n                    currentQuality = $(this).data('current');\n                }\n                let qualities = quality.qualities;\n                let qualitiesLabel = quality.qualitiesLabel;\n                qualities.forEach((q, i) => {\n                    $('#qualitieslist').append(`<a class=\"dropdown-item changequality px-3\" data-quality=\"${q}\"\n                         href=\"#\"><i class=\"bi ${q == currentQuality ? 'bi-check' : ''} fa-fw\"></i>${qualitiesLabel[i]}</a>`);\n                });\n                $(this).find(`[data${bsAffix}-toggle=dropdown]`).dropdown('update');\n            });\n\n            $(document).on('click', '.changequality', function(e) {\n                e.preventDefault();\n                const quality = $(this).data('quality');\n                player.setQuality(quality);\n                $('.changequality').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            // Observe timeline-wrapper width change.\n            let timelineWrapper = document.getElementById('timeline-wrapper');\n            let resizeObserver = new ResizeObserver(() => {\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n            });\n\n            resizeObserver.observe(timelineWrapper);\n\n            // Implement import content\n            $(document).on('click', '#importcontent', function(e) {\n                e.preventDefault();\n                const importmodal = `<div class=\"modal fade\" id=\"importmodal\" tabindex=\"-1\" aria-labelledby=\"importmodalLabel\"\n                 aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title flex-grow-1\" id=\"importmodalLabel\">\n                                ${M.util.get_string('importcontent', 'mod_interactivevideo')}</h5>\n                                <button type=\"button\" class=\"btn p-0 border-0\" data${bsAffix}-dismiss=\"modal\" aria-label=\"Close\">\n                                    <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary border-0\" data${bsAffix}-dismiss=\"modal\">\n                                ${M.util.get_string('cancel', 'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary border-0\" id=\"importcontentbutton\">\n                                ${M.util.get_string('import', 'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(importmodal);\n                $('#importmodal').modal('show');\n\n                $('#importmodal').on('hidden.bs.modal', function() {\n                    $('#importmodal').remove();\n                });\n\n                $('#importmodal').off('shown.bs.modal').on('shown.bs.modal', function() {\n                    // Make the modal draggable.\n                    $('#importmodal .modal-dialog').draggable({\n                        handle: \".modal-header\"\n                    });\n                    // Render the course select dropdown.\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'get_taught_courses',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            userid: userid\n                        },\n                        success: function(data) {\n                            let courses = JSON.parse(data);\n                            // Sort courses by name.\n                            courses.sort((a, b) => a.fullname.localeCompare(b.fullname));\n                            let courseSelect = `<select class=\"${isBS5 ? 'form' : 'custom'}-select w-100\" id=\"importcourse\">`;\n                            courses.forEach(course => {\n                                courseSelect += `<option value=\"${course.id}\">${course.fullname} (${course.shortname})</option>`;\n                            });\n                            courseSelect += `</select>`;\n                            let selectfield = `<div class=\"iv-form-group selectcourse\">\n                            <label class=\"iv-font-weight-bold form-label\" for=\"importcourse\">\n                            ${M.util.get_string('selectcourse', 'mod_interactivevideo')}</label>\n                            ${courseSelect}</div>`;\n                            $('#importmodal .modal-body').append(selectfield);\n                            // Default current course.\n                            $('#importmodal #importcourse').val(course);\n                            $('#importmodal #importcourse').trigger('change');\n                        }\n                    });\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcourse', function() {\n                $(`#importmodal .selectcm, #importmodal .select-interaction`).remove();\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_cm_by_courseid',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: $(this).val()\n                    },\n                    success: function(data) {\n                        let cms = JSON.parse(data);\n                        cms.sort((a, b) => a.name.localeCompare(b.name));\n                        let cmSelect = `<select class=\"${isBS5 ? 'form' : 'custom'}-select w-100\" id=\"importcm\">\n                        <option value=\"\">${M.util.get_string('select', 'mod_interactivevideo')}</option>`;\n                        cms.forEach(cm => {\n                            cmSelect += `<option value=\"${cm.id}\" ${cm.id == interaction ? 'disabled' : ''}>${cm.name}</option>`;\n                        });\n                        cmSelect += `</select>`;\n                        let selectfield = `<div class=\"iv-form-group selectcm\">\n                        <label for=\"importcm\" class=\"iv-font-weight-bold form-label\">\n                        ${M.util.get_string('selectactivity', 'mod_interactivevideo')}</label>\n                        ${cmSelect}</div>`;\n                        $(`#importmodal .selectcourse`).after(selectfield);\n                    }\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcm', async function() {\n                $(`#importmodal .select-interaction`).remove();\n                $(`#importmodal #importcm`).after(`<div class=\"select-interaction py-3\">\n                    <iframe src=\"${M.cfg.wwwroot + '/mod/interactivevideo/view.php?i=' + $(this).val()}&embed=1&preview=1\"\n                    frameborder=0 width=\"100%\" height=\"500\" class=\"loader\"></iframe></div>`);\n                let interactions = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: $(this).val(),\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n                interactions = JSON.parse(interactions);\n                interactions = interactions.filter(x => x.type != 'skipsegment');\n                if (interactions.length == 0) {\n                    $(`#importmodal .select-interaction`).append(`<div class=\"alert alert-warning mt-3\">\n                        ${M.util.get_string('nocontent', 'mod_interactivevideo')}</div>`);\n                    return;\n                }\n\n                $(`#importmodal .select-interaction`).append(`<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\n                     no-pointer\">\n                     <div class=\"input-group-prepend border-0 invisible\">\n                            <label class=\"input-group-text bg-white\">\n                                <input type=\"checkbox\"/>\n                                <i class=\"bi bi-plus iv-ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control border-0 iv-font-weight-bold\"\n                 value=\"${M.util.get_string('title', 'mod_interactivevideo')}\">\n                <input type=\"text\" class=\"form-control border-0 iv-font-weight-bold\" style=\"max-width: 50px;\"\n                value=\"XP\">\n                <input type=\"text\" style=\"max-width: 150px;\" value=\"${M.util.get_string('timestamp', 'mod_interactivevideo')}\"\n                 class=\"form-control border-0 iv-font-weight-bold\"></div>`);\n\n                interactions = interactions.map(int => {\n                    // Get the icon and check if the interaction is out of range (start, end time);\n                    const ctype = contentTypes.find(y => y.name === int.type);\n                    int.prop = JSON.stringify(ctype);\n                    int.icon = ctype.icon;\n                    if ((int.timestamp > end || int.timestamp < start) && int.timestamp > 0) {\n                        int.outside = true;\n                    } else {\n                        int.outside = false;\n                    }\n                    // Check if the interaction can be added (e.g. annotation content type can only be added once per activity);\n                    if (!ctype.allowmultiple && annotations.find(x => x.type == int.type)) {\n                        int.disabled = true;\n                    }\n                    return int;\n                });\n\n                interactions.sort((a, b) => a.timestamp - b.timestamp);\n                interactions.forEach(int => {\n                    const inputgroup = `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\"\n                     data-id=\"${int.id}\">\n                        <div class=\"input-group-prepend\">\n                            <label class=\"input-group-text\">\n                                <input type=\"checkbox\" ${int.disabled ? 'disabled' : ''}/>\n                                <i class=\"${int.icon} iv-ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control name\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 value=\"${int.title}\">\n                <input type=\"text\" style=\"max-width: 50px;\" ${int.timestamp < 0 || int.hascompletion == 0 ? 'readonly' : ''}\n                 class=\"form-control xp\" value=\"${int.xp}\">\n                <input type=\"text\" placeholder=\"00:00:00\" style=\"max-width: 150px;\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 class=\"form-control timestamp-input ${int.outside ? 'is-invalid' : ''}\"\n                value=\"${int.timestamp < 0 ? int.timestamp :\n                            convertSecondsToHMS(int.timestamp, false, false)}\"></div>`;\n                    $(`#importmodal .select-interaction`).append(inputgroup);\n                });\n\n                $(document).off('click', '#importmodal #importcontentbutton').on('click', '#importmodal #importcontentbutton',\n                    async function(e) {\n                        e.preventDefault();\n                        let $selected = $(`#importmodal .select-interaction input[type=\"checkbox\"]:checked`);\n                        let selectedInt = [];\n                        $selected.each(function() {\n                            let $row = $(this).closest('.input-group');\n                            const name = $row.find('.name').val();\n                            if (name.trim() == '') {\n                                return;\n                            }\n                            let timestamp = $row.find('.timestamp-input').val();\n                            if (timestamp == '') {\n                                return;\n                            }\n\n                            if (Number(timestamp) < 0) {\n                                timestamp = Number(timestamp);\n                            } else {\n                                const parts = timestamp.split(':');\n                                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                                if (annotations.find(x => x.timestamp == timestamp)) {\n                                    return;\n                                }\n                            }\n                            let id = $row.data('id');\n                            let int = interactions.find(x => x.id == id);\n                            int.title = name;\n                            int.timestamp = timestamp;\n                            let xp = Number($row.find('.xp').val());\n                            if (isNaN(xp) || xp == '') {\n                                xp = 0;\n                            }\n                            int.xp = xp;\n                            selectedInt.push(int);\n                        });\n                        if (selectedInt.length == 0) {\n                            addNotification(M.util.get_string('selectinteraction', 'mod_interactivevideo'), 'danger');\n                            return;\n                        } else {\n                            let interactions = await $.ajax({\n                                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                                method: \"POST\",\n                                dataType: \"text\",\n                                data: {\n                                    action: 'import_annotations',\n                                    sesskey: M.cfg.sesskey,\n                                    contextid: M.cfg.contextid,\n                                    annotations: JSON.stringify(selectedInt),\n                                    tocourse: M.cfg.courseId,\n                                    fromcourse: $('#importcourse').val(),\n                                    tocm: interaction,\n                                    fromcm: $('#importcm').val(),\n                                    module: coursemodule\n                                }\n                            });\n                            interactions = JSON.parse(interactions);\n\n                            // Dismiss modal.\n                            $('#importmodal').modal('hide');\n\n                            // Add the imported annotations to the current annotations.\n                            annotations = annotations.concat(interactions);\n                            dispatchEvent('annotationupdated', {\n                                annotations: annotations,\n                                action: 'import'\n                            });\n\n                            // Get interaction that allowmultiple false and init each one.\n                            interactions.forEach(int => {\n                                if (!int.allowmultiple) {\n                                    ctRenderer[int.type].init();\n                                }\n                            });\n                        }\n                    });\n            });\n\n            // Implement content type filter.\n            $(document).on('keyup', '#contentmodal #contentsearch', function() {\n                let search = $(this).val().toLowerCase();\n\n                $('#addcontentdropdown .dropdown-item').removeClass('d-none').addClass('d-flex');\n\n                if (search == '') {\n                    return;\n                }\n\n                $('#contentmodal #addcontentdropdown .dropdown-item').each(function() {\n                    let text = $(this).find('.contenttype-title').text().toLowerCase();\n                    if (text.includes(search)) {\n                        $(this).addClass('d-flex').removeClass('d-none');\n                    } else {\n                        $(this).addClass('d-none').removeClass('d-flex');\n                    }\n                });\n            });\n\n            // Implement fast forward and rewind.\n            const fastforward = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time >= end) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time += 1;\n                } else {\n                    time += 0.2;\n                }\n                if (time > end) {\n                    time = end;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastforward(e);\n            });\n\n            let fastForwardInterval;\n            $(document).on('mousedown', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastForwardInterval = setInterval(async() => {\n                    fastforward(e);\n                    if (await player.getCurrentTime() >= end) {\n                        clearInterval(fastForwardInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#fast-forward', function() {\n                clearInterval(fastForwardInterval);\n            });\n\n            const rewind = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time <= start) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time -= 1;\n                } else {\n                    time -= 0.2;\n                }\n                if (time < start) {\n                    time = start;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#rewind', async function(e) {\n                e.preventDefault();\n                rewind(e);\n            });\n\n            let rewindInterval;\n            $(document).on('mousedown', '#rewind', async function(e) {\n                e.preventDefault();\n                rewindInterval = setInterval(async() => {\n                    rewind(e);\n                    if (await player.getCurrentTime() <= start) {\n                        clearInterval(rewindInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#rewind', function() {\n                clearInterval(rewindInterval);\n            });\n\n            // Remove all event listeners before leaving the page.\n            window.addEventListener('beforeunload', function() {\n                $(document).off();\n                cancelAnimationFrame(onPlayingInterval);\n            });\n\n            // Event lister for bulk action.\n            $(document).on('click', '#annotation-list-bulk-edit', async function(e) {\n                e.preventDefault();\n                document.body.focus();\n                if ($(this).hasClass('active')) {\n                    // Remove all checkboxes.\n                    $('#annotation-list').find('.form-check').remove();\n                    $(this).removeClass('active');\n                    $('#annotation-list').find('tr').each(function() {\n                        $(this).removeClass('b-active');\n                    });\n                    $('body').removeClass('iv-bulk-edit');\n                    $('#annotation-list-bulk-checkall').addClass('d-none');\n                    return;\n                }\n                $(this).addClass('active');\n                $('#annotation-list-bulk-checkall').removeClass('d-none active');\n                $('body').addClass('iv-bulk-edit');\n                let li = $('#annotation-list').find('tr');\n                li.each(function() {\n                    let id = $(this).data('id');\n                    let type = $(this).data('type');\n                    // Find first td.\n                    let td = $(this).find('td').first().find('div');\n                    td.prepend(`<div class=\"form-check form-check-inline iv-mr-0\">\n                        <input class=\"form-check-input\" type=\"checkbox\" data-type=\"${type}\" id=\"annotation-${id}\" value=\"${id}\">\n                        <label class=\"form-check-label\" for=\"annotation-${id}\"></label></div>`);\n                });\n            });\n\n            // Event lister for bulk check all.\n            $(document).on('click', '#annotation-list-bulk-checkall', function(e) {\n                e.preventDefault();\n                let check = !$(this).hasClass('active');\n\n                // Uncheck all checkboxes.\n                $('tr.annotation .form-check-input').each(function() {\n                    if ((!$(this).is(':checked') && check) || ($(this).is(':checked') && !check)) {\n                        $(this).trigger('click');\n                    }\n                });\n\n                $(this).toggleClass('active');\n\n            });\n\n            $(document).on('click', 'tr.annotation .form-check-input', function(e) {\n                e.stopImmediatePropagation();\n                if ($(this).is(':checked')) {\n                    $(this).closest('tr').addClass('b-active');\n                } else {\n                    $(this).closest('tr').removeClass('b-active');\n                }\n\n                let checked = $('#annotation-list').find('tr .form-check-input:checked');\n\n                if (checked.length == 0) {\n                    $('#annotation-list-bulk .bulk-actions').hide();\n                } else {\n                    $('#annotation-list-bulk .bulk-actions').show();\n                }\n            });\n\n            $(document).on('click', '#annotation-list-bulk-delete', async function(e) {\n                e.preventDefault();\n                let ids = [];\n                let types = [];\n                let checked = $('#annotation-list').find('tr .form-check-input:checked');\n                checked.each(function() {\n                    ids.push($(this).val());\n                    types.push($(this).data('type'));\n                });\n                if (ids.length == 0) {\n                    return;\n                }\n                const promises = ids.map((id, index) => {\n                    return new Promise((resolve) => {\n                        let type = types[index];\n                        ctRenderer[type].deleteAnnotation(annotations, id, true);\n                        resolve();\n                    });\n                });\n\n                await Promise.all(promises);\n                dispatchEvent('annotationsdeleted', {\n                    annotations: this.annotations,\n                    ids: ids,\n                });\n            });\n\n            $(document).on('click', '#annotation-list-bulk-copy', async function(e) {\n                e.preventDefault();\n                let copiedIds = $('#annotation-list').find('tr .form-check-input:checked')\n                    .map(function() {\n                        return $(this).val();\n                    }).get();\n                if (copiedIds.length == 0) {\n                    return;\n                }\n                let copiedAnnotations = annotations.filter(x => copiedIds.includes(x.id));\n                copiedAnnotations = copiedAnnotations.map(function(item) {\n                    item.wwwroot = M.cfg.wwwroot;\n                    return item;\n                });\n                copiedAnnotations = JSON.stringify(copiedAnnotations);\n                // Copy to storage.\n                window.localStorage.setItem('copiedAnnotations', copiedAnnotations);\n                $('#annotation-list-bulk-paste').removeAttr('disabled');\n                $('#annotation-list-bulk-paste').addClass('btn-primary');\n                $('#annotation-list-bulk-paste').find('i').removeClass('bi-clipboard').addClass('bi-clipboard-fill');\n                addNotification(M.util.get_string('annotationscopied', 'mod_interactivevideo'), 'success');\n            });\n\n            $(document).on('click', '#annotation-list-bulk-download', async function(e) {\n                e.preventDefault();\n                $(this).attr('disabled', 'disabled');\n                $(this).find('i').addClass('fa-spin fa-circle-o-notch fa').removeClass('bi bi-download');\n                let downloadIds = $('#annotation-list').find('tr .form-check-input:checked')\n                    .map(function() {\n                        return $(this).val();\n                    }).get();\n\n                if (downloadIds.length == 0) {\n                    return;\n                }\n\n                let copiedAnnotations = annotations.filter(x => downloadIds.includes(x.id));\n                copiedAnnotations = copiedAnnotations.map(function(item) {\n                    item.wwwroot = M.cfg.wwwroot;\n                    return item;\n                });\n\n                const downloadTask = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'download_annotations',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: course,\n                        annotations: JSON.stringify(copiedAnnotations).replace(/</g, '&lt;').replace(/>/g, '&gt;'),\n                        cmid: coursemodule\n                    }\n                });\n\n                window.open(downloadTask, '_blank');\n\n                $(this).removeAttr('disabled');\n                $(this).find('i').removeClass('fa-spin fa-circle-o-notch fa').addClass('bi bi-download');\n            });\n\n            // Bulk set as defaults.\n            $(document).on('click', '#annotation-list-bulk-setdefault', async function(e) {\n                e.preventDefault();\n                let selectedIds = $('#annotation-list').find('tr .form-check-input:checked')\n                    .map(function() {\n                        return $(this).val();\n                    }).get();\n                if (selectedIds.length == 0) {\n                    return;\n                }\n                let selectedAnnotations = annotations.filter(x => selectedIds.includes(x.id));\n                // Make sure the annotations are unique based on type.\n                selectedAnnotations = selectedAnnotations.filter((item, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.type === item.type\n                    ))\n                );\n\n                await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'set_defaults',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: course,\n                        defaults: JSON.stringify(selectedAnnotations),\n                    }\n                });\n                // Trigger the -edit button to reset the view.\n                $('#annotation-list-bulk-edit').trigger('click');\n                addNotification(M.util.get_string('annotationssavedasdefaults', 'mod_interactivevideo'), 'success');\n            });\n\n            // Bulk upload.\n            let ModalForm;\n            $(document).on('click', '#annotation-list-bulk-upload', async function(e) {\n                e.preventDefault();\n                if (!ModalForm) {\n                    ModalForm = await import('core_form/modalform');\n                }\n\n                const data = {\n                    contextid: M.cfg.contextid,\n                    id: coursemodule,\n                    courseid: course,\n                    annotationid: interaction,\n                    prevent: annotations.filter(x => JSON.parse(x.prop).allowmultiple == false).map(x => x.type).join(','),\n                };\n\n                let title = M.util.get_string('uploadannotations', 'mod_interactivevideo');\n                const form = new ModalForm({\n                    modalConfig: {\n                        title: title,\n                    },\n                    formClass: \"mod_interactivevideo\\\\form\\\\bulk_upload_form\",\n                    args: data,\n                });\n\n                form.show();\n\n                form.addEventListener(form.events.FORM_SUBMITTED, async(e) => {\n                    let imported = e.detail.new;\n                    // Check if the imported annotations are valid.\n                    imported = imported.filter(x => contentTypes.find(y => y.name === x.type));\n                    annotations = annotations.concat(imported);\n                    dispatchEvent('annotationupdated', {\n                        annotations: annotations,\n                        action: 'import'\n                    });\n                });\n            });\n\n            window.addEventListener('storage', function(e) {\n                // Activate paste button on other tabs.\n                e.stopImmediatePropagation();\n                if (e.key === 'copiedAnnotations') {\n                    // Activate paste button.\n                    $('#annotation-list-bulk-paste').removeAttr('disabled');\n                    $('#annotation-list-bulk-paste').addClass('btn-primary');\n                    $('#annotation-list-bulk-paste').find('i').removeClass('bi-clipboard').addClass('bi-clipboard-fill');\n                }\n            });\n\n            // Activate paste button on page load if there are copied annotations.\n            let copiedAnnotations = window.localStorage.getItem('copiedAnnotations');\n            if (copiedAnnotations !== null) {\n                // Don't activate if the same cm.\n                copiedAnnotations = JSON.parse(copiedAnnotations);\n                if (copiedAnnotations[0].cmid == coursemodule) {\n                    return;\n                }\n                // Activate paste button.\n                $('#annotation-list-bulk-paste').removeAttr('disabled');\n                $('#annotation-list-bulk-paste').addClass('btn-primary');\n                $('#annotation-list-bulk-paste').find('i').removeClass('bi-clipboard').addClass('bi-clipboard-fill');\n            }\n\n            // Paste annotations.\n            $(document).on('click', '#annotation-list-bulk-paste', async function(e) {\n                e.preventDefault();\n                let copiedAnnotations = window.localStorage.getItem('copiedAnnotations');\n                if (copiedAnnotations === null) {\n                    return;\n                }\n                copiedAnnotations = JSON.parse(copiedAnnotations);\n                // Make sure we don't copy the interaction with allowmultiple false;\n                copiedAnnotations = copiedAnnotations.filter(x => {\n                    let allowmultiple = JSON.parse(x.prop).allowmultiple;\n                    return allowmultiple || (!allowmultiple && !annotations.find(y => y.type == x.type));\n                });\n                if (copiedAnnotations.length == 0) {\n                    addNotification(M.util.get_string('annotationscopied', 'mod_interactivevideo'), 'danger');\n                    return;\n                }\n                const fromCourse = copiedAnnotations[0].courseid;\n                const fromCm = copiedAnnotations[0].cmid;\n                const toCourse = course;\n                // If it is from the same cm, we need to change the title.\n                if (fromCm == coursemodule) {\n                    copiedAnnotations = copiedAnnotations.filter(a => a.type != 'skipsegment').map(function(item) {\n                        if (item.timestamp >= 0) {\n                            item.timestamp = Number(item.timestamp) + 0.1;\n                            item.title = item.title + ' (' + M.util.get_string('copynoun', 'mod_interactivevideo') + ')';\n                        }\n                        return item;\n                    });\n                }\n\n                let interactions = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'import_annotations',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        annotations: JSON.stringify(copiedAnnotations),\n                        tocourse: toCourse,\n                        fromcourse: fromCourse,\n                        tocm: interaction,\n                        fromcm: fromCm,\n                        module: coursemodule\n                    }\n                });\n                interactions = JSON.parse(interactions);\n                // Add the imported annotations to the current annotations.\n                annotations = annotations.concat(interactions);\n                dispatchEvent('annotationupdated', {\n                    annotations: annotations,\n                    action: 'import'\n                });\n\n                // Get interaction that allowmultiple false and init each one.\n                interactions.forEach(int => {\n                    if (!int.allowmultiple) {\n                        ctRenderer[int.type].init();\n                    }\n                });\n\n            });\n\n            // Bulk deleted\n            $(document).on('annotationsdeleted', function(e) {\n                const ids = e.originalEvent.detail.ids;\n                ids.forEach(function(id) {\n                    $(`tr[data-id=\"${id}\"]`).addClass('deleted');\n                });\n                $('#annotation-list-bulk-edit').trigger('click');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return !ids.includes(item.id);\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactionsdeleted', 'mod_interactivevideo', ids.length), 'success');\n                }, 1000);\n            });\n\n            // Implement keyboard shortcuts.\n            // eslint-disable-next-line complexity\n            document.addEventListener('keydown', async function(e) {\n                // Ignore spacebar when focus is on an input, textarea, or button\n                const activeTag = document.activeElement.tagName.toLowerCase();\n                if (activeTag !== 'body') {\n                    return;\n                }\n\n                if ($('body').hasClass('disablekb')) {\n                    return;\n                }\n\n                if (e.code === 'Space') {\n                    e.preventDefault(); // Prevent page scroll.\n                    if (await player.isPaused()) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                } else if (e.code === 'KeyA' && !e.ctrlKey && !e.metaKey) {\n                    e.preventDefault();\n                    // Launch add content modal.\n                    $('#addcontent').trigger('click');\n                } else if (e.code === 'ArrowRight') {\n                    e.preventDefault();\n                    // Fast forward.\n                    let time = await player.getCurrentTime();\n                    if (time >= end || time + 1 > end) {\n                        return;\n                    }\n                    player.seek(time + 1);\n                } else if (e.code === 'ArrowLeft') {\n                    e.preventDefault();\n                    // Rewind 10 seconds.\n                    let time = await player.getCurrentTime();\n                    if (time <= start || time - 1 < start) {\n                        return;\n                    }\n                    player.seek(time - 1);\n                } else if (e.code === 'KeyI') {\n                    e.preventDefault();\n                    // Launch import content modal.\n                    $('#importcontent').trigger('click');\n                } else if (e.code === 'KeyX') {\n                    e.preventDefault();\n                    // Launch delete content modal.\n                    $('#annotation-list-bulk-delete').trigger('click');\n                } else if (e.code === 'KeyD') {\n                    e.preventDefault();\n                    // Launch download content modal.\n                    $('#annotation-list-bulk-download').trigger('click');\n                } else if (e.code === 'KeyC') {\n                    e.preventDefault();\n                    // Launch copy content modal.\n                    $('#annotation-list-bulk-copy').trigger('click');\n                } else if (e.code === 'KeyP') {\n                    e.preventDefault();\n                    // Launch paste content modal.\n                    $('#annotation-list-bulk-paste').trigger('click');\n                } else if (e.code === 'KeyE') {\n                    e.preventDefault();\n                    // Launch edit content modal.\n                    $('#annotation-list-bulk-edit').trigger('click');\n                } else if (e.code === 'KeyA' && (e.ctrlKey || e.metaKey) && $('#annotation-list-bulk-edit').hasClass('active')) {\n                    e.preventDefault();\n                    // Launch add content modal.\n                    $('#annotation-list-bulk-checkall').trigger('click');\n                } else if (e.code === 'KeyU') {\n                    e.preventDefault();\n                    // Launch upload content modal.\n                    $('#annotation-list-bulk-upload').trigger('click');\n                } else if (e.code === 'Equal') {\n                    e.preventDefault();\n                    // Launch download content modal.\n                    $('#zoomin').trigger('click');\n                } else if (e.code === 'Minus') {\n                    e.preventDefault();\n                    // Launch download content modal.\n                    $('#zoomout').trigger('click');\n                } else if (e.code === 'KeyS' && (e.ctrlKey || e.metaKey)) {\n                    e.preventDefault();\n                    // Save content.\n                    $('#savedraft').trigger('click');\n                }\n            });\n        }\n    };\n});"],"names":["define","$","addToast","Notification","quickform","ModalFactory","ModalEvents","player","totaltime","currentTime","dispatchEvent","ctRenderer","playerReady","isRTL","attr","isBS5","hasClass","bsAffix","$loader","replaceProgressBars","percentage","css","renderVideoNav","async","annos","start","length","empty","remove","forEach","render","x","type","renderItemOnVideoNavigation","time","getCurrentTime","init","url","coursemodule","interaction","course","end","coursecontextid","displayoptions","userid","posterimage","extendedcompletion","require","addNotification","msg","add","Number","isNaN","contentTypes","annotations","convertSecondsToHMS","s","dynamic","rounded","Math","round","hours","floor","minutes","seconds","parseFloat","toFixed","activeid","renderAnnotationItems","removeClass","live","addClass","html","M","util","get_string","sort","a","b","timestamp","String","localeCompare","item","listItem","clone","renderEditItem","xp","filter","map","reduce","text","activeAnno","find","id","postEditCallback","getAnnotations","getItems","ajax","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","courseContextId","getContentTypes","when","done","items","contenttypes","JSON","parse","y","name","getRenderers","Promise","resolve","count","amdmodule","Type","isEditMode","prop","author","authorlink","description","stringify","editMode","validateTimestampFormat","fld","existing","test","val","validateTimeStartEnd","checkduration","checkexisting","checkskipsegment","parts","split","message","skip","annotation","title","runInteraction","modal","not","pause","updateTime","duration","toUpdatetime","cmid","courseid","onReady","MAX_SAFE_INTEGER","isPaused","seek","unMute","audio","passwordprotected","support","playbackrate","quality","t","ratio","usefixedratio","aspectratio","relWidth","width","startPercentage","newStart","append","i","marker","setCaption","e","onEnded","toggleClass","focus","currentAnnotation","tooltip","setTimeout","onSeek","onPlayingInterval","visualized","onPlaying","intervalFunction","thisTime","isPlaying","isEnded","cancelAnimationFrame","stop","scrollBar","document","getElementById","rect","getBoundingClientRect","left","right","window","innerWidth","scrollIntoView","behavior","block","inline","frequency","trigger","useAnimationFrame","animate","requestAnimationFrame","onplay","visualizer","onPause","VideoPlayer","load","IVPLAYER","one","on","detail","is","cacheCleared","success","originalEvent","updated","push","status","removeAttr","target","ctype","this","contenttype","hastimestamp","allowmultiple","addAnnotation","preventDefault","closest","editAnnotation","cloneAnnotation","deleteCancelPromise","then","deleteAnnotation","catch","saveCancel","theAnnotation","play","stopImmediatePropagation","offsetX","hide","siblings","initialValue","key","show","field","value","appendTimestampMarker","formattedTime","targetAnnotation","draggable","resizable","event","ui","position","skipduration","abs","originalPosition","originalSize","size","direction","off","height","localStorage","setItem","drag","offset","playerWidth","getItem","timelineHeight","contentTypeModal","$scrollbar","parentOffset","relX","pageX","fadeIn","fadeOut","currentLevel","newLevel","parseInt","timelineElement","scrollWidth","clientWidth","ctrlKey","metaKey","deltaY","addEventListener","scrollLeft","style","scrollHeight","draftAnnotations","create","body","backdrop","removeOnHide","root","getRoot","$body","hidden","shown","handle","confirmationMessage","returnValue","rate","setRate","getQualities","currentQuality","qualities","qualitiesLabel","q","dropdown","setQuality","timelineWrapper","resizeObserver","ResizeObserver","observe","importmodal","courses","fullname","courseSelect","shortname","selectfield","cms","cmSelect","cm","after","interactions","int","icon","outside","disabled","inputgroup","hascompletion","$selected","selectedInt","each","$row","trim","tocourse","courseId","fromcourse","tocm","fromcm","module","concat","search","toLowerCase","includes","fastforward","fastForwardInterval","setInterval","clearInterval","rewind","rewindInterval","ModalForm","first","prepend","check","ids","types","promises","index","all","copiedIds","get","copiedAnnotations","downloadIds","downloadTask","replace","open","selectedIds","selectedAnnotations","self","findIndex","defaults","annotationid","prevent","join","form","modalConfig","formClass","args","events","FORM_SUBMITTED","imported","new","fromCourse","fromCm","toCourse","activeElement","tagName","code"],"mappings":"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"}