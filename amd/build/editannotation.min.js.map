{"version":3,"file":"editannotation.min.js","sources":["../src/editannotation.js"],"sourcesContent":["/* eslint-disable complexity */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Edit interactions module\n *\n * @module     mod_interactivevideo/editannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/toast',\n    'core/notification',\n    'core/event_dispatcher',\n    './quickform',\n    'core/modal_factory',\n    'core/modal_events',\n    './libraries/jquery-ui',\n], function($, addToast, Notification, {dispatchEvent}, quickform, ModalFactory, ModalEvents) {\n    let ctRenderer = {};\n    let player;\n    let totaltime;\n    let currentTime;\n    let playerReady = false;\n    const isRTL = $('html').attr('dir') == 'rtl';\n    const isBS5 = $('body').hasClass('bs-5');\n    const bsAffix = isBS5 ? '-bs' : '';\n    let $loader = $('#background-loading');\n    let $progressbar = $('#video-nav #progress');\n    let $scrollbar = $('#scrollbar');\n    let $scrollhead = $('#scrollhead-top');\n    let $videonav = $('#video-nav');\n    /**\n     * Replace the progress bar on the video navigation.\n     * @param {Number} percentage - Percentage to replace the progress bar.\n     * @returns {void}\n     * */\n    const replaceProgressBars = (percentage) => {\n        percentage = percentage < 0 ? 0 : percentage;\n        percentage = percentage > 100 ? 100 : percentage;\n        $progressbar.css('width', percentage + '%');\n        $scrollbar.css('left', percentage + '%');\n        $scrollhead.css('left', percentage + '%');\n    };\n    /**\n     * Render the annotations on the video navigation.\n     * @param {Array} annos - Annotations to render.\n     * @param {Number} start - Start time of the video.\n     * @param {Number} totaltime - Total time of the video.\n     * @returns {void}\n     * */\n    const renderVideoNav = async function(annos, start, totaltime) {\n        if (annos.length == 0) {\n            $videonav.find('ul').empty();\n            return;\n        }\n\n        $videonav.find('ul').empty();\n        $(\"#video-timeline-wrapper .skipsegment\").remove();\n        annos.forEach(async(x) => {\n            const render = ctRenderer[x.type];\n            await render.renderItemOnVideoNavigation(x);\n        });\n\n        const time = await player.getCurrentTime();\n        // Replace progress bar.\n        const percentage = (time - start) / totaltime * 100;\n        replaceProgressBars(percentage);\n        dispatchEvent('annotationitemsrendered', {'annotations': annos});\n    };\n\n    return {\n        /**\n         * Initialize function on page loads.\n         * @param {String} url video url\n         * @param {Number} coursemodule cm id\n         * @param {Number} interaction cm instance\n         * @param {Number} course course id\n         * @param {Number} start video start time\n         * @param {Number} end video end time\n         * @param {Number} coursecontextid course context id\n         * @param {String} type video type\n         * @param {Object} displayoptions display options\n         * @param {Number} userid user id\n         * @param {String} posterimage poster image\n         * @param {String} extendedcompletion extended completion\n         */\n        init: function(url, coursemodule, interaction, course, start, end, coursecontextid,\n            type = 'yt', displayoptions, userid, posterimage, extendedcompletion) {\n\n            let $videonav = $('#video-nav');\n            let $videotimeline = $('#video-timeline');\n            let $annotationlist = $('#annotation-list');\n            let $annotationcanvas = $('#annotation-canvas');\n            let $timelinewrapper = $('#timeline-wrapper');\n            let $videowrapper = $('#video-wrapper');\n            let $playpause = $('#playpause');\n            let $timelineitemswrapper = $('#timeline-items-wrapper');\n            let $addcontent = $('#addcontent');\n\n            quickform();\n\n            require(['theme_boost/bootstrap/modal']);\n            require(['theme_boost/bootstrap/tooltip']);\n            /**\n             * Util function to display notification\n             * @param {String} msg message text\n             * @param {String} type message type\n             */\n            const addNotification = (msg, type = \"info\") => {\n                addToast.add(msg, {\n                    type: type\n                });\n            };\n\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            let annotations = []; // Annotations.\n            let contentTypes; // Content types.\n\n            /**\n             * Convert seconds to HH:MM:SS format\n             * @param {Number} s second\n             * @param {Boolean} dynamic if true, only show minutes and seconds if less than one hour\n             * @param {Boolean} rounded if true, second is rounded\n             * @returns formatted timestamp\n             */\n            const convertSecondsToHMS = (s, dynamic = false, rounded = true) => {\n                if (rounded) {\n                    s = Math.round(s);\n                }\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - hours * 3600) / 60);\n                let seconds = s - hours * 3600 - minutes * 60;\n                if (rounded && seconds > 59.5) {\n                    seconds = 0;\n                    minutes++;\n                    if (minutes > 59) {\n                        minutes = 0;\n                        hours++;\n                    }\n                }\n                if (minutes < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                if (rounded) {\n                    seconds = Math.round(seconds);\n                } else {\n                    seconds = parseFloat(seconds).toFixed(2);\n                }\n\n                if (seconds < 10) {\n                    seconds = '0' + seconds;\n                }\n\n                if (dynamic && hours == 0) {\n                    return minutes + ':' + seconds;\n                }\n\n                return (hours < 10 ? '0' + hours : hours) + ':' + minutes + ':' + seconds;\n            };\n\n            let activeid = null; // Current active annotation id. Mainly used when editing to relaunch the interaction afte editing.\n\n            /**\n             * Handle rendering of annotation items on the list\n             * @param {Array} annotations array of annotation objects\n             * @returns\n             */\n            const renderAnnotationItems = (annotations) => {\n                $('#annotationwrapper .loader').remove();\n                $annotationlist.empty().removeClass(\"d-flex align-items-center justify-content-center\");\n                if (player.live) {\n                    $timelinewrapper.addClass('no-pointer-events');\n                    $annotationlist.html(\n                        `${M.util.get_string('interactionsnotsupportedonlivevideo', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                renderVideoNav(annotations, start, totaltime);\n                if (annotations.length == 0) {\n                    $annotationlist.html(`${M.util.get_string('clickaddtoaddinteraction', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                annotations.sort(function(a, b) {\n                    // First sort by timestamp, then by type.\n                    if (Number(a.timestamp) === Number(b.timestamp)) {\n                        return String(a.type).localeCompare(String(b.type));\n                    }\n                    // Sort by timestamp.\n                    return Number(a.timestamp) - Number(b.timestamp);\n                });\n\n                annotations.forEach(function(item) {\n                    let listItem = $('#annotation-template').clone();\n                    ctRenderer[item.type].renderEditItem(annotations, listItem, item);\n                });\n\n                let xp = annotations.filter(x => x.xp).map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n                $(\"#xp span\").text(xp);\n\n                if (activeid) {\n                    const activeAnno = annotations.find(x => x.id == activeid);\n                    if (activeAnno) {\n                        ctRenderer[activeAnno.type].postEditCallback(activeAnno);\n                    }\n                }\n            };\n\n            /**\n             * Get annotations from the server and execute the rendering function\n             * @returns\n             */\n            const getAnnotations = () => {\n                const getItems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_all_contenttypes',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                $.when(getItems, getContentTypes).done(async function(items, contenttypes) {\n                    annotations = JSON.parse(items[0]);\n                    if (player.live) {\n                        annotations = [];\n                    }\n                    contentTypes = JSON.parse(contenttypes[0]);\n                    // Remove all annotations that are not in the enabled content types.\n                    annotations = annotations.filter(x => contentTypes.find(y => y.name === x.type));\n                    const getRenderers = new Promise((resolve) => {\n                        let count = 0;\n                        contentTypes.forEach(x => {\n                            require(['' + x.amdmodule], function(Type) {\n                                ctRenderer[x.name] = new Type(player, annotations, interaction,\n                                    course, 0, 0, 0, 0, type, 0, totaltime, start, end, x, coursemodule,\n                                    null, displayoptions, null, extendedcompletion, {\n                                    isEditMode: true,\n                                });\n                                count++;\n                                ctRenderer[x.name].init();\n                                if (count == contentTypes.length) {\n                                    resolve(ctRenderer);\n                                }\n                            });\n                        });\n                    });\n                    annotations.map(x => {\n                        let prop = contentTypes.find(y => y.name === x.type);\n                        // Clean up the prop by removing author, authorlink, description;\n                        delete prop.author;\n                        delete prop.authorlink;\n                        delete prop.description;\n                        x.prop = JSON.stringify(prop);\n                        x.editMode = true;\n                        return x;\n                    });\n                    ctRenderer = await getRenderers;\n                    renderAnnotationItems(annotations);\n                });\n            };\n\n            /**\n             * Validate given timestamp against format\n             * @param {String} timestamp formatted timestamp hh:mm:ss\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @returns\n             */\n            const validateTimestampFormat = (timestamp, fld, existing) => {\n                const regex = /^([0-9]{2}):([0-5][0-9]):([0-5][0-9])(\\.\\d{2})?$/;\n                if (!regex.test(timestamp)) {\n                    addNotification(M.util.get_string('invalidtimestampformat', 'mod_interactivevideo'), 'danger');\n                    if (existing) {\n                        $(fld).val(existing);\n                    } else {\n                        $(fld).val(convertSecondsToHMS(start, false, false));\n                    }\n                    return false;\n                }\n                return true;\n            };\n\n            /**\n             * Validate timestamp against start and end time of the video, existing timestamp and skip segments\n             * @param {String} timestamp formatted timestamp\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @param {Number} seconds\n             * @param {Boolean} checkduration if true, check against start and end time\n             * @param {Boolean} checkexisting if true, check against existing annotations\n             * @param {Boolean} checkskipsegment if true, check against skip segments\n             * @returns\n             */\n            const validateTimeStartEnd = (timestamp, fld, existing, seconds, checkduration,\n                checkexisting, checkskipsegment) => {\n                // Convert the timestamp to seconds.\n                const parts = timestamp.split(':');\n                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                // Make sure the timestamp is between start and end.\n                if (checkduration) {\n                    if (timestamp > end || timestamp < start) {\n                        const message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(start, true, false),\n                            \"end\": convertSecondsToHMS(end, true, false)\n                        });\n                        addNotification(message, 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure the timestamp is not already in the list.\n                if (checkexisting) {\n                    if (annotations.find(x => x.timestamp == timestamp) && timestamp != seconds) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure timestamp is not in a skip segment.\n                if (checkskipsegment) {\n                    const skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(timestamp)\n                        && Number(x.title) > Number(timestamp));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(skip.timestamp, true, false),\n                            \"end\": convertSecondsToHMS(skip.title, true, false)\n                        }), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                return timestamp;\n            };\n\n            /**\n             * Run interaction\n             * @param {Object} annotation annotation object\n             */\n            const runInteraction = (annotation) => {\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').not('.sticky').remove();\n                $('#end-screen').remove();\n                player.pause();\n                const activityType = ctRenderer[annotation.type];\n                activityType.runInteraction(annotation);\n            };\n\n            /**\n             * Correct the start and end time.\n             * @param {Number} duration Total duration of the video.\n             * @returns {Object} Object containing start and end time.\n             */\n            const updateTime = async(duration) => {\n                duration = Number(duration);\n                let toUpdatetime = false;\n                if (!end || end == 0) {\n                    toUpdatetime = true;\n                }\n                if (!start || start >= duration || start < 0 || start >= duration) {\n                    toUpdatetime = true;\n                }\n                start = start > duration ? 0 : start;\n                if (toUpdatetime) {\n                    await $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_videotime',\n                            sesskey: M.cfg.sesskey,\n                            cmid: coursemodule,\n                            courseid: course,\n                            id: interaction,\n                            start: start,\n                            end: !end || end == 0 ? duration : end,\n                            contextid: M.cfg.contextid\n                        }\n                    });\n                }\n                end = !end || end == 0 || end > duration ? duration : end;\n                return {start, end};\n            };\n\n            /**\n             * Set of events to run after the video player is ready.\n             */\n            const onReady = async() => {\n                if (player.live) {\n                    end = Number.MAX_SAFE_INTEGER;\n                }\n                if (player.type != 'yt') {\n                    player.pause();\n                }\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    if (!player.live) {\n                        await player.seek(start);\n                    }\n                    player.pause();\n                    onReady();\n                    return;\n                }\n                player.unMute();\n                if (player.audio) {\n                    $annotationcanvas.addClass('bg-black');\n                }\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#start-screen').removeClass('d-none');\n                    $('#video-block').removeClass('no-pointer bg-transparent');\n                }\n                if (player.type != 'vimeo'\n                    && player.type != 'html5video'\n                    && player.type != 'panopto'\n                    && player.type != \"peertube\"\n                    && player.type != \"rutube\") { // Vimeo/HTML5 does not pause/play on click.\n                    $('#video-block').addClass('no-pointer');\n                }\n\n                if (player.support.playbackrate == false) {\n                    $('#changerate').remove();\n                } else {\n                    $('#changerate').removeClass('d-none');\n                }\n\n                if (player.support.quality == false) {\n                    $('#changequality').remove();\n                } else {\n                    $('#changequality').removeClass('d-none');\n                }\n\n                let t = player.totaltime;\n\n                ({start, end} = await updateTime(t));\n\n                totaltime = end - start;\n                // Recalculate the ratio of the video.\n                let ratio = 16 / 9;\n                if (!displayoptions.usefixedratio || displayoptions.usefixedratio == 0) {\n                    ratio = player.aspectratio;\n                }\n                $videowrapper.css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                playerReady = true;\n                $annotationcanvas.removeClass('d-none w-0');\n\n                // Handle timeline block.\n                $videotimeline.css({\n                    'background-image': 'url(' + posterimage + ')',\n                    'background-size': 'contain',\n                    'background-repeat': 'no-repeat',\n                });\n                $timelinewrapper.find('#duration').text(convertSecondsToHMS(end, true));\n                $timelinewrapper.find('#currenttime').text(convertSecondsToHMS(start, true));\n\n                // Render minute markers.\n                const minutes = Math.floor(totaltime / 60);\n                $timelineitemswrapper.css('width', (minutes * 300) + 'px'); // 300px per minute as default.\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let startPercentage = 0;\n                let newStart = start;\n                if (start % 60 != 0) {\n                    startPercentage = (60 - (start % 60)) / totaltime * 100;\n                    newStart = start + (60 - (start % 60));\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 0%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n                for (let i = newStart; i <= end; i += 60) {\n                    let percentage = ((i - newStart) / totaltime * 100) + startPercentage;\n                    let marker = '';\n                    // Format h:m (e.g 3h1m).\n                    if (i >= 3600) {\n                        marker = Math.floor(i / 3600) + 'h' + Math.floor((i % 3600) / 60) + 'm';\n                    } else {\n                        marker = Math.floor(i / 60) + 'm';\n                    }\n                    $('#minute-markers').append(`<div class=\"minute-marker position-absolute\"\n                         style=\"left: ${percentage}%;\"><div class=\"text-white minute-label\">${marker}</div></div>`);\n                    $('#minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                            style=\"left: ${percentage}%;\"></div>`);\n                }\n\n                if (end % 60 != 0) {\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 100%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n\n                // Set caption to null.\n                try {\n                    player.setCaption('');\n                } catch (e) {\n                    // Do nothing.\n                }\n\n                $scrollbar.css('left', 0);\n                $scrollhead.css('left', 0);\n\n                getAnnotations();\n            };\n\n            /**\n             * Run when video ended (i.e. arrives at 'end' time)\n             */\n            const onEnded = () => {\n                player.pause();\n                $playpause.find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n                // Cover the video with a message on a white background div.\n                $videowrapper.append(`<div id=\"end-screen\" class=\"border position-absolute w-100 h-100 bg-white d-flex\n                     justify-content-center align-items-center\" style=\"top: 0; left: 0;\">\n                     <button class=\"btn btn-danger border-0 iv-rounded-circle\" style=\"font-size: 1.5rem;\" id=\"restart\">\n                    <i class=\"bi bi-arrow-repeat\" style=\"font-size: x-large;\"></i></button></div>`);\n                $progressbar.css('width', '100%');\n                $scrollbar.css('left', '100%');\n                $scrollhead.css('left', '100%');\n                // Focus on the restart button.\n                $('#message #restart').focus();\n\n                // If the current time matches the timestamp of an annotation, highlight the annotation.\n                const currentAnnotation = annotations.find((annotation) => annotation.timestamp == end);\n                if (currentAnnotation) {\n                    $annotationlist.find('tr').removeClass('active');\n                    $annotationlist.find('tr[data-id=\"' + currentAnnotation.id + '\"]').addClass('active');\n                    // Show tooltip for two seconds.\n                    $videonav.find('.annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                    setTimeout(function() {\n                        $videonav.find('.annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                    }, 2000);\n                }\n            };\n\n            /**\n             * Execute when video is sought\n             * @param {Number} t seconds\n             * @returns\n             */\n            const onSeek = async function(t) {\n                if (!playerReady) {\n                    return;\n                }\n                if (t) {\n                    t = Number(t);\n                } else {\n                    t = await player.getCurrentTime();\n                }\n                if (t > start && t < end) {\n                    $('#end-screen').remove();\n                }\n                const percentage = (t - start) / (totaltime) * 100;\n                $scrollbar.css('left', percentage + '%');\n                $scrollhead.css('left', percentage + '%');\n                $timelinewrapper.find('#currenttime').text(convertSecondsToHMS(t, true));\n                dispatchEvent('timeupdate', {'time': t});\n            };\n\n            let onPlayingInterval;\n            let visualized = false;\n            /**\n             * Excute when video plays (i.e. start or resume)\n             */\n            const onPlaying = async() => {\n                if (player.live) {\n                    return;\n                }\n                const intervalFunction = async function() {\n                    let thisTime = await player.getCurrentTime();\n                    const isPlaying = await player.isPlaying();\n                    const isEnded = await player.isEnded();\n                    if (!isPlaying) {\n                        cancelAnimationFrame(onPlayingInterval);\n                        return;\n                    }\n\n                    if (thisTime < start) {\n                        await player.seek(start);\n                        thisTime = start;\n                    }\n\n                    if (thisTime >= end || isEnded) {\n                        player.stop(end);\n                        cancelAnimationFrame(onPlayingInterval);\n                        onEnded();\n                        return;\n                    }\n                    dispatchEvent('timeupdate', {'time': thisTime});\n                    let percentage = (thisTime - start) / (totaltime) * 100;\n                    // Scroll the timeline so that the current time is in the middle of the timeline.\n                    const scrollBar = document.getElementById('scrollbar');\n                    // Check if the scrollbar is in view.\n                    const rect = scrollBar.getBoundingClientRect();\n                    if (rect.left < 0 || rect.right > window.innerWidth) {\n                        scrollBar.scrollIntoView({behavior: \"instant\", block: \"center\", inline: \"center\"});\n                    }\n\n                    // If the current time matches the timestamp of an annotation, highlight the annotation\n                    const currentAnnotation = annotations.find(x => (thisTime - player.frequency) <= x.timestamp\n                        && (thisTime + player.frequency) >= x.timestamp);\n                    if (currentAnnotation) {\n                        $annotationlist.find(`tr:not([data-id=\"${currentAnnotation.id}\"])`).removeClass('active');\n                        if (!$annotationlist.find(`tr[data-id=\"${currentAnnotation.id}\"]`).hasClass('active')) {\n                            $annotationlist.find(`tr[data-id=\"${currentAnnotation.id}\"]`)\n                            .addClass('active')\n                            .trigger('mouseenter');\n                            setTimeout(function() {\n                                $annotationlist.find(`tr[data-id=\"${currentAnnotation.id}\"]`).trigger('mouseleave');\n                            }, 2000);\n                        }\n                    }\n\n                    // If current time is within the skipsegment, seek to the end of the segment.\n                    let skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    let skip = skipsegments.find(x => Number(x.timestamp) < Number(thisTime)\n                        && Number(x.title) > Number(thisTime));\n                    if (skip) {\n                        await player.seek(Number(skip.title));\n                        // Replace the progress bar.\n                        percentage = (skip.title - start) / totaltime * 100;\n                        replaceProgressBars(percentage);\n                    }\n                };\n                if (player.useAnimationFrame) {\n                    const animate = async() => {\n                        const isPlaying = await player.isPlaying();\n                        if (isPlaying) {\n                            intervalFunction();\n                            onPlayingInterval = requestAnimationFrame(animate);\n                        }\n                    };\n                    onPlayingInterval = requestAnimationFrame(animate);\n                } else {\n                    const isPlaying = await player.isPlaying();\n                    if (isPlaying) {\n                        intervalFunction();\n                    }\n                }\n            };\n\n            const onplay = async() => {\n                $('#message, #end-screen').not('.sticky').remove();\n                $playpause.find('i').removeClass('bi-play-fill').addClass('bi-pause-fill').removeClass('rotate-360');\n                if (player.audio && !visualized) {\n                    player.visualizer();\n                    visualized = true;\n                }\n            };\n\n            /**\n             * Excute when video is paused.\n             */\n            const onPause = () => {\n                cancelAnimationFrame(onPlayingInterval);\n                $playpause.find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + type], function(VideoPlayer) {\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#video-block').addClass('no-pointer bg-transparent');\n                    $annotationcanvas.removeClass('d-none w-0');\n                }\n                player = new VideoPlayer();\n                player.load(\n                    url,\n                    start,\n                    end,\n                    {\n                        'customStart': true,\n                        'passwordprotected': displayoptions.passwordprotected == 1,\n                        'showControls': false,\n                        'keyboard': true,\n                    }\n                );\n                window.IVPLAYER = player;\n            });\n\n            $(document).one('iv:playerReady', function() {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function() {\n                onPause();\n            });\n\n            $(document).on('iv:playerPlaying', function() {\n                onPlaying();\n            });\n\n            $(document).on('iv:playerPlay', function() {\n                onplay();\n            });\n\n            $(document).on('iv:playerEnded', function() {\n                onEnded();\n            });\n\n            $(document).on('iv:playerSeek', function(e) {\n                onSeek(e.detail.time);\n            });\n\n            $(document).on('iv:playerError', function() {\n                $annotationcanvas.removeClass('d-none w-0');\n                $('#start-screen').addClass('d-none');\n                $('#video-block').addClass('no-pointer bg-transparent');\n                $('#spinner').remove();\n                $('.loader').removeClass('loader');\n                if ($('#player').is(':empty')) {\n                    $('#player').html(`<div class=\"alert alert-danger d-flex text-center h-100 rounded-0\n                         align-items-center justify-content-center\">\n                        <img src=\"${M.cfg.wwwroot}/mod/interactivevideo/pix/404-error.png\" alt=\"Error\" class=\"w-25\">\n                        </div>`);\n                } else {\n                    addNotification(M.util.get_string('thereisanissueloadingvideo', 'mod_interactivevideo'), 'danger');\n                }\n            });\n\n            $(document).on('timeupdate', function(e) {\n                if (!playerReady) {\n                    player.pause();\n                    return;\n                }\n                const thisTime = e.detail.time;\n                $timelinewrapper.find('#currenttime').text(convertSecondsToHMS(thisTime, true));\n                let percentage = (thisTime - start) / (totaltime) * 100;\n                replaceProgressBars(percentage);\n            });\n\n            // Post annotation update (add, edit, clone).\n            $(document).on('annotationupdated', function(e) {\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'update_ivitems_cache',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        cmid: interaction,\n                    },\n                });\n                if ($('#annotation-list-bulk-edit').hasClass('active')) {\n                    $('#annotation-list-bulk-edit').trigger('click');\n                }\n                const action = e.originalEvent.detail.action;\n                if (action == 'import') {\n                    annotations = e.originalEvent.detail.annotations;\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactionimported', 'mod_interactivevideo'), 'success');\n                    return;\n                }\n                let updated = e.originalEvent.detail.annotation;\n                if (action == 'edit' || action == 'draft' || action == 'savedraft') {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != updated.id;\n                    });\n                }\n                updated.prop = JSON.stringify(contentTypes.find(x => x.name === updated.type));\n                annotations.push(updated);\n                if (action == 'add') {\n                    activeid = updated.id;\n                } else {\n                    activeid = null;\n                }\n                annotations.map(x => {\n                    x.editMode = true;\n                    return x;\n                });\n                renderAnnotationItems(annotations);\n                if (action == 'add' || action == 'clone') {\n                    addNotification(M.util.get_string('interactionadded', 'mod_interactivevideo'), 'success');\n                    $annotationlist.find(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                } else if (action == 'edit') {\n                    addNotification(M.util.get_string('interactionupdated', 'mod_interactivevideo'), 'success');\n                    $annotationlist.find(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    setTimeout(function() {\n                        $annotationlist.find(`tr[data-id=\"${updated.id}\"]`).removeClass('active');\n                    }, 1500);\n                }\n\n                // If draft exists, activate the save button.\n                if (annotations.find(x => x.status == 'draft')) {\n                    $timelinewrapper.find('#savedraft').removeAttr('disabled').addClass('pulse');\n                } else {\n                    $timelinewrapper.find('#savedraft').attr('disabled', 'disabled').removeClass('pulse');\n                }\n\n            });\n\n            // Re-render annotation list and timeline after an annotation is deleted.\n            $(document).on('annotationdeleted', function(e) {\n                const annotation = e.originalEvent.detail.annotation;\n                activeid = null;\n                $annotationlist.find(`tr[data-id=\"${annotation.id}\"]`).addClass('deleted');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != annotation.id;\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactiondeleted', 'mod_interactivevideo'), 'success');\n                }, 1000);\n                if ($($('#annotation-list-bulk-edit')).hasClass('active')) {\n                    $('#annotation-list-bulk-edit').trigger('click');\n                }\n            });\n\n            // Implement create annotation\n            $(document).on('click', '#addcontentdropdown .dropdown-item', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                // Check if the target item is a link.\n                if ($(e.target).is('a')) {\n                    return;\n                }\n\n                const ctype = $(this).data('type');\n                player.pause();\n                let timestamp = currentTime || await player.getCurrentTime();\n                timestamp = Number(timestamp.toFixed(2));\n                const contenttype = contentTypes.find(x => x.name == ctype);\n                if (contenttype.hastimestamp) {\n                    if (annotations.find(x => x.timestamp == timestamp)) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                    // Check skip segments\n                    const skipsegments = annotations.filter(x => x.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(currentTime)\n                        && Number(x.title) > Number(currentTime));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                }\n                if (!contenttype.allowmultiple && annotations.find(x => x.type == ctype)) {\n                    addNotification(M.util.get_string(\n                        'thisinteractionalreadyexists', 'mod_interactivevideo', contenttype.title), 'danger');\n                    return;\n                }\n                currentTime = null;\n                ctRenderer[ctype].addAnnotation(annotations, contenttype.hastimestamp ? timestamp : -1, coursemodule);\n            });\n\n            // Implement edit annotation\n            $(document).on('click', 'tr.annotation .edit', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].editAnnotation(annotations, id, coursemodule);\n                const t = await player.getCurrentTime();\n                if (timestamp && t != timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                const isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                }\n            });\n\n            // Implement copy annotation\n            $(document).on('click', 'tr.annotation .copy', async function(e) {\n                e.preventDefault();\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                const time = await player.getCurrentTime();\n                ctRenderer[contenttype].cloneAnnotation(id, time);\n            });\n\n            // Implement delete annotation.\n            $(document).on('click', 'tr.annotation .delete', async function(e) {\n                e.preventDefault();\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    player.pause();\n                }\n                const id = $(this).closest('.annotation').data('id');\n                const annotation = annotations.find(annotation => annotation.id == id);\n                try {\n                    Notification.deleteCancelPromise(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                    ).then(() => {\n                        return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                    }).catch(() => {\n                        return;\n                    });\n                } catch {\n                    Notification.saveCancel(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                        function() {\n                            return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                        }\n                    );\n                }\n            });\n\n            // Implement view annotation.\n            $(document).on('click', 'tr.annotation .title', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                // Update the progress bar.\n                const percentage = (timestamp - start) / totaltime * 100;\n                replaceProgressBars(percentage);\n                let currentTime = await player.getCurrentTime();\n                if (currentTime != timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const theAnnotation = annotations.find(annotation => annotation.id == id);\n                setTimeout(() => {\n                    runInteraction(theAnnotation);\n                }, 500);\n            });\n\n            // Implement go to timestamp.\n            $(document).on('click', 'tr.annotation .timestamp', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).data('timestamp');\n                await player.seek(timestamp);\n                player.play();\n            });\n\n            // Right click on the video nav or video timeline to add a new interaction.\n            $(document).on('contextmenu', '#vseek, #video-timeline', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                currentTime = (percentage * totaltime) + start;\n                let t = await player.getCurrentTime();\n                if (t != currentTime) {\n                    await player.seek(currentTime);\n                }\n                player.pause();\n                $addcontent.trigger('click');\n            });\n\n            // Right click on the scrollbar to add a new interaction.\n            $(document).on('contextmenu', '#scrollbar, #scrollhead-top', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                currentTime = await player.getCurrentTime();\n                $addcontent.trigger('click');\n            });\n\n            // Click the play/pause button on the timeline region to pause/play video.\n            $(document).on('click', '#playpause', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                // Pause or resume the video.\n                let isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                } else {\n                    let t = await player.getCurrentTime();\n                    if (t >= end) {\n                        $('#end-screen #restart').trigger('click');\n                    } else {\n                        player.play();\n                    }\n                }\n            });\n\n            $(document).on('click', '#video-block', function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $playpause.trigger('click');\n            });\n\n            // Right click on the annotation indicator to edit the annotation.\n            $(document).on('contextmenu', '#video-nav .annotation', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                // Trigger click on the edit button.\n                $annotationlist.find(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n            });\n\n            // Quick edit.\n            $(document).on('contextmenu', '[data-editable]', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($('[data-field].editing').length > 0) {\n                    return;\n                }\n                const fld = $(this).data('editable');\n                $(this).hide();\n                $(this).siblings('[data-field=\"' + fld + '\"]').removeClass('d-none').focus().addClass('editing');\n                if (fld == 'timestamp') {\n                    $(this).closest('tr')\n                        .append(`<div class=\"timestamp-info position-absolute\">\n                        ${M.util.get_string('rightclicktosetcurrenttime', 'mod_interactivevideo')}</div>`);\n                }\n            });\n\n            $(document).on('contextmenu', '[data-field=\"timestamp\"]', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const time = await player.getCurrentTime();\n                $(this).val(convertSecondsToHMS(time, false, false));\n            });\n\n            $(document).on('keyup', '[data-field].editing', function(e) {\n                $(this).removeClass('is-invalid');\n                const initialValue = $(this).data('initial-value');\n                const val = $(this).val();\n                const fld = $(this).data('field');\n                if (val == '') {\n                    $(this).addClass('is-invalid');\n                }\n\n                // If escape key is pressed, revert the value.\n                if (e.key == 'Escape') {\n                    $(this).val(initialValue);\n                    $(this).removeClass('editing');\n                    $(this).addClass('d-none');\n                    $(this).siblings('[data-editable]').show();\n                    $('.timestamp-info').remove();\n                    return;\n                }\n                // If enter key is pressed, save the value.\n                if (e.key == 'Enter') {\n\n                    let seconds;\n                    if (fld == 'timestamp') {\n                        const parts = initialValue.split(':');\n                        seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!validateTimestampFormat(val, '[data-field].editing', initialValue)) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        const timestamp = validateTimeStartEnd(val, '[data-field].editing', initialValue, seconds,\n                            true, true, true);\n                        if (timestamp == -1) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        seconds = timestamp;\n                    }\n\n                    if ($(this).hasClass('is-invalid')) {\n                        return;\n                    }\n                    if (val == initialValue) {\n                        $(this).removeClass('editing');\n                        $(this).addClass('d-none');\n                        $(this).siblings('[data-editable]').show();\n                        return;\n                    }\n                    const id = $(this).data('id');\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: id,\n                            field: fld,\n                            contextid: M.cfg.contextid,\n                            value: fld == 'timestamp' ? seconds : val,\n                        },\n                        success: function(data) {\n                            $('.timestamp-info').remove();\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'edit'\n                            });\n                        }\n                    });\n                    return;\n                }\n            });\n\n            $(document).on('blur', '[data-field].editing', function() {\n                const initialValue = $(this).data('initial-value');\n                $(this).val(initialValue);\n                $(this).removeClass('editing');\n                $(this).addClass('d-none');\n                $(this).siblings('[data-editable]').show();\n                $('.timestamp-info').remove();\n            });\n            // End quick edit.\n\n            $(document).on('click', '#end-screen #restart', async function(e) {\n                e.preventDefault();\n                $('#end-screen').remove();\n                await player.seek(start);\n                player.play();\n            });\n\n            // Display tooltip on anntation indicator when annotation on the list is hovered.\n            $(document).on('mouseenter', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $videonav.find(`ul li[data-id=\"${id}\"] .item`).tooltip('show');\n            });\n\n            // Remove tooltip when annotation on the list is not hovered.\n            $(document).on('mouseleave', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $videonav.find(`ul li[data-id=\"${id}\"] .item`).tooltip('hide');\n                if (!isBS5) {\n                    $('.tooltip').remove();\n                }\n            });\n\n            // Highlight annotation on the list when annotation indicator is hovered.\n            $(document).on('mouseover', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $annotationlist.find(`tr.annotation[data-id=\"${id}\"]`).addClass('active');\n            });\n\n            // Remove highlight when annotation indicator is not hovered.\n            $(document).on('mouseout', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $annotationlist.find(`tr.annotation[data-id=\"${id}\"]`).removeClass('active');\n            });\n\n            // Validate timestamp when the timestamp field is changed.\n            $(document).on('change', '.timestamp-input, .timestamp-field input', function() {\n                $(this).removeClass('is-invalid');\n                const parts = $(this).val().split(':');\n                const seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                if (!validateTimestampFormat($(this).val(), this)) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n\n                const timestamp = validateTimeStartEnd($(this).val(), this, \"00:00:00\", seconds, true, false, true);\n\n                if (timestamp == -1) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n            });\n\n            let $vseekbar = $('#vseek #bar');\n\n            const appendTimestampMarker = (seconds, rounded) => {\n                const formattedTime = convertSecondsToHMS(seconds, true, rounded);\n                $vseekbar.append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n            };\n\n            $(document).on('annotationitemsrendered', function() {\n                $timelinewrapper.find(`[data${bsAffix}-toggle=\"tooltip\"]`).tooltip({\n                    'boundary': 'window',\n                    'container': '#timeline',\n                });\n                // Put the minute markers on the timeline;\n                let targetAnnotation = null;\n                // Destroy draggable and resizable if already initialized.\n                try {\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').draggable('destroy');\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').resizable('destroy');\n                } catch (e) {\n                    // Do nothing.\n                }\n                $('#timeline-items .annotation.li-draggable').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('.tooltip, #message').remove();\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        $('.tooltip').remove();\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            ui.position.left = -5;\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            ui.position.left = $('#timeline-items').width() - 5;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        $(this).css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('.tooltip').remove();\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            $(this).css('left', '-5px');\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            $(this).css('left', 'calc(100% - 5px)');\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                        }\n\n                        if (timestamp > end) {\n                            timestamp = end;\n                        }\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let skipduration = Number(targetAnnotation.title) - Number(targetAnnotation.timestamp);\n                        if (timestamp < 0 && timestamp + skipduration < start) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp > end) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp < start) {\n                            skipduration = skipduration - Math.abs(start - timestamp);\n                            timestamp = start;\n                        }\n                        if (timestamp + skipduration > end) {\n                            skipduration = Math.abs(end - timestamp);\n                            timestamp = end - skipduration;\n                        }\n                        if (skipduration <= 0) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.title = timestamp + skipduration;\n                        if (targetAnnotation.title > end) {\n                            targetAnnotation.title = end;\n                        }\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').resizable({\n                    'containment': '#video-timeline-wrapper',\n                    'handles': 'e, w',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'resize': async function(event, ui) {\n                        let timestamp;\n                        if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp, direction;\n                        if (ui.originalPosition.left != ui.position.left) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"left\";\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"right\";\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        if (direction == \"left\") {\n                            targetAnnotation.timestamp = timestamp;\n                        } else {\n                            targetAnnotation.title = timestamp;\n                            if (targetAnnotation.title > end) {\n                                targetAnnotation.title = end;\n                            }\n                        }\n                        targetAnnotation.status = 'draft';\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('contextmenu').on('contextmenu', function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    const id = $(this).data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('click').on('click', async function(e) {\n                    e.preventDefault();\n                    const timestamp = $(this).data('timestamp');\n                    await player.seek(timestamp);\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment .delete-skipsegment').off('click').on('click', function(e) {\n                    e.preventDefault();\n                    const id = $(this).closest('.skipsegment').data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .delete`).trigger('click');\n                });\n            });\n\n            $('#scrollbar').draggable({\n                'containment': '#timeline-items',\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#timeline-items').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#timeline-items').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#timeline-items').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            $('#scrollhead-top').draggable({\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#vseek').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#vseek').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#vseek').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    let t = await player.getCurrentTime();\n                    if (t === timestamp) {\n                        return;\n                    }\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            // Resize timeline.\n            $('#timeline-wrapper').resizable({\n                'handles': 'n',\n                'minHeight': 125,\n                'maxHeight': 500,\n                'start': function() {\n                    $('#top-region, #timeline-wrapper').addClass('no-pointer-events');\n                },\n                'resize': function(event, ui) {\n                    $('#top-region').css('height', `calc(100dvh - ${ui.size.height + 70}px)`);\n                },\n                'stop': function() {\n                    $('#top-region, #timeline-wrapper').removeClass('no-pointer-events');\n                    localStorage.setItem('timeline-height', $('#timeline-wrapper').height());\n                }\n            });\n\n            // Resize player region.\n            $('#separator').draggable({\n                'axis': 'x',\n                'containment': '#wrapper',\n                'grid': [1, 0],\n                'start': function() {\n                    $('#wrapper').addClass('no-pointer-events');\n                },\n                drag: function() {\n                    const parentOffset = $(this).offset();\n                    const width = parentOffset.left;\n                    if (!isRTL) {\n                        $('#player-region').css('width', width + 'px');\n                        $('#content-region').css('width', 'calc(100% - ' + width + 'px)');\n                    } else {\n                        $('#player-region').css('width', 'calc(100% - ' + width + 'px)');\n                        $('#content-region').css('width', width + 'px');\n                    }\n                },\n                stop: function() {\n                    const width = $(this).offset().left;\n                    // Save this to local storage\n                    localStorage.setItem('player-width', width);\n                    $('#wrapper').removeClass('no-pointer-events');\n                }\n            });\n\n            // Set player region width from the saved width in local storage.\n            const playerWidth = localStorage.getItem('player-width');\n            if (playerWidth > 0 && window.innerWidth > 992) {\n                $('#separator').css('left', playerWidth + 'px');\n                if (!isRTL) {\n                    $('#player-region').css('width', playerWidth + 'px');\n                    $('#content-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n                } else {\n                    $('#player-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n                    $('#content-region').css('width', playerWidth + 'px');\n                }\n            } else {\n                $('#separator').css('left', `50%`);\n                $('#player-region').css('width', `50%`);\n                $('#content-region').css('width', `50%`);\n            }\n\n            // Set timeline height from saved height in local storage.\n            const timelineHeight = localStorage.getItem('timeline-height');\n            if (timelineHeight) {\n                $('#timeline-wrapper').css('height', timelineHeight + 'px');\n                $('#top-region').css('height', `calc(100dvh - ${Number(timelineHeight) + 70}px)`);\n            }\n\n            // Seek bar functionalities\n            $('#vseek #bar, #video-timeline').on('mouseenter', function(e) {\n                $('#cursorbar, #position-marker').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                // First clone the #scrollbar and place it where the cursor is.\n                let $scrollbar = $('#scrollbar').clone();\n                $scrollbar.attr('id', 'cursorbar');\n                $scrollbar.addClass('no-pointer-events');\n\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n\n                $scrollbar.css('left', (relX + 5) + 'px');\n                $scrollbar.find('#scrollhead').remove();\n                const percentage = relX / $(this).width();\n                const time = percentage * (totaltime) + start;\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n                $('#vseek #position-marker').css('left', relX + 'px');\n                $('#timeline-items').append($scrollbar);\n            });\n\n            $('#vseek #bar, #video-timeline').on('mouseleave', function(e) {\n                e.stopImmediatePropagation();\n                $('#vseek #position-marker, #cursorbar').remove();\n                // Remove highlight.\n                $('tr.annotation.active').removeClass('active');\n            });\n\n            $('#vseek #bar, #video-timeline').on('mousemove', function(e) {\n                e.stopImmediatePropagation();\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                const percentage = relX / $(this).width();\n                let time = percentage * (totaltime) + start;\n                if (time < start) {\n                    time = start;\n                }\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                // Move the cursorbar\n                $('#cursorbar').css('left', (relX + 5) + 'px');\n                $('#vseek #position').text(formattedTime);\n                $('#vseek #position-marker').css('left', relX + 'px');\n            });\n\n            // Run interaction when annotation indicator is clicked.\n            $(document).on('click', '#video-nav .annotation', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                const annotation = annotations.find(x => x.id == id);\n                $loader.fadeIn(300);\n                if (await player.getCurrentTime() != annotation.timestamp) {\n                    await player.seek(annotation.timestamp);\n                }\n                $loader.fadeOut(300);\n                runInteraction(annotation);\n            });\n\n            // Seek video on click on timeline or video nav.\n            $(document).on('click', '#vseek #bar, #video-timeline', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                const time = percentage * (totaltime) + start;\n                const t = await player.getCurrentTime();\n                if (t === time) {\n                    return;\n                }\n                replaceProgressBars(percentage * 100);\n                $loader.fadeIn(300);\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    player.pause();\n                }\n                await player.seek(time);\n                $loader.fadeOut(300);\n                $(\"#message, #end-screen\").remove();\n            });\n\n            // Implement timeline zoom out.\n            $('#zoomout').on('click', function() {\n                const currentLevel = $timelineitemswrapper.css('width'); // In px.\n                const newLevel = parseInt(currentLevel) - 300;\n                $timelineitemswrapper.css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let timelineElement = document.getElementById('timeline');\n                if (timelineElement.scrollWidth <= timelineElement.clientWidth) {\n                    $(this).attr('disabled', 'disabled');\n                }\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement timeline zoom in.\n            $('#zoomin').on('click', function() {\n                const currentLevel = $timelineitemswrapper.css('width'); // In px.\n                const newLevel = parseInt(currentLevel) + 300;\n                $timelineitemswrapper.css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                $('#zoomout').removeAttr('disabled');\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement zoom in and zoom out on mouse scroll on timeline.\n            $(\"#timeline\").on('wheel', function(e) {\n                if (e.ctrlKey || e.metaKey) {\n                    e.preventDefault();\n                    if (e.originalEvent.deltaY < 0) {\n                        $('#zoomin').trigger('click');\n                    } else {\n                        $('#zoomout').trigger('click');\n                    }\n                }\n            });\n\n            document.getElementById('timeline').addEventListener('scroll', function() {\n                document.getElementById('minute-markers-wrapper').scrollLeft = this.scrollLeft;\n                document.getElementById('vseek').style.left = -this.scrollLeft + 'px';\n                document.getElementById('minute-markers-bg-wrapper').style.left = -this.scrollLeft + 'px';\n                document.getElementById('scrollbar').scrollHeight = this.scrollHeight;\n            });\n\n            // Save timeline changes.\n            $('#savedraft').on('click', function(e) {\n                e.stopImmediatePropagation();\n                let draftAnnotations = annotations.filter(x => x.status == 'draft');\n                let count = 0;\n                draftAnnotations.forEach(function(a) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: a.id,\n                            field: 'timestamp',\n                            contextid: M.cfg.contextid,\n                            value: a.timestamp,\n                        },\n                        success: function(data) {\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'savedraft'\n                            });\n                        }\n                    });\n                    if (a.type == 'skipsegment') {\n                        $.ajax({\n                            url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                            method: \"POST\",\n                            dataType: \"text\",\n                            data: {\n                                action: 'quick_edit_field',\n                                sesskey: M.cfg.sesskey,\n                                id: a.id,\n                                field: 'title',\n                                contextid: M.cfg.contextid,\n                                value: a.title,\n                            },\n                            success: function(data) {\n                                const updated = JSON.parse(data);\n                                dispatchEvent('annotationupdated', {\n                                    annotation: updated,\n                                    action: 'savedraft'\n                                });\n                            }\n                        });\n                    }\n                    count++;\n                    if (count == draftAnnotations.length) {\n                        addNotification(M.util.get_string('draftsaved', 'mod_interactivevideo'), 'success');\n                    }\n                });\n\n            });\n\n\n            // Launch content selection modal.\n            let contentTypeModal;\n            $addcontent.on('click', async function(e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n                if (contentTypeModal) {\n                    contentTypeModal.show();\n                    return;\n                }\n                contentTypeModal = await ModalFactory.create({\n                    title: '',\n                    body: '',\n                    backdrop: 'static',\n                    removeOnHide: false,\n                });\n                let root = contentTypeModal.getRoot();\n                let $body = $('#contentmodal-original .modal-content').html();\n                root.attr('id', 'contentmodal');\n                root.find('.modal-dialog .modal-content').html($body);\n                contentTypeModal.show();\n\n                root.on(ModalEvents.hidden, function() {\n                    $('#addcontentdropdown .dropdown-item').removeClass('active');\n                });\n\n                root.on(ModalEvents.shown, function() {\n                    player.pause();\n                    // Apply jelly animation after DOM is ready\n                    setTimeout(() => {\n                        root.addClass('jelly-anim');\n                    }, 10);\n\n                    // Make the modal draggable.\n                    root.find('.modal-dialog').draggable({\n                        handle: \".modal-header\"\n                    });\n                });\n\n                root.on('click', '.modal-header .close', function() {\n                    contentTypeModal.hide();\n                });\n\n                root.on('click', '.dropdown-item', function() {\n                    root.removeClass('jelly-anim');\n                    contentTypeModal.hide();\n                });\n            });\n\n            // Inform user to save changes before close or unload the current page.\n            window.addEventListener('beforeunload', (e) => {\n                if (annotations.find(x => x.status == 'draft')) {\n                    const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                    e.returnValue = confirmationMessage;\n                    return confirmationMessage;\n                }\n                return true;\n            });\n\n            // Implement the rate change.\n            $(document).on('click', '.changerate', function(e) {\n                e.preventDefault();\n                const rate = $(this).data('rate');\n                player.setRate(rate);\n                $('.changerate').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            $(document).on('iv:playerRateChange', function(e) {\n                $('.changerate').find('i').removeClass('bi-check');\n                $(`.changerate[data-rate=\"${e.originalEvent.detail.rate}\"]`).find('i').addClass('bi-check');\n            });\n\n            // Handle video control:: Quality change\n            $(\"#changequality\").on('shown.bs.dropdown', async function() {\n                let quality = await player.getQualities();\n                $('#qualitieslist').empty();\n                let currentQuality = quality.currentQuality;\n                if (currentQuality === null) {\n                    currentQuality = $(this).data('current');\n                }\n                let qualities = quality.qualities;\n                let qualitiesLabel = quality.qualitiesLabel;\n                qualities.forEach((q, i) => {\n                    $('#qualitieslist').append(`<a class=\"dropdown-item changequality px-3\" data-quality=\"${q}\"\n                         href=\"#\"><i class=\"bi ${q == currentQuality ? 'bi-check' : ''} fa-fw\"></i>${qualitiesLabel[i]}</a>`);\n                });\n                $(this).find(`[data${bsAffix}-toggle=dropdown]`).dropdown('update');\n            });\n\n            $(document).on('click', '.changequality', function(e) {\n                e.preventDefault();\n                const quality = $(this).data('quality');\n                player.setQuality(quality);\n                $('.changequality').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            // Observe timeline-wrapper width change.\n            let timelineWrapper = document.getElementById('timeline-wrapper');\n            let resizeTimeout;\n            let resizeObserver = new ResizeObserver(() => {\n                clearTimeout(resizeTimeout);\n                resizeTimeout = setTimeout(() => {\n                    const relWidth = $('#timeline-items').width();\n                    $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                }, 100);\n            });\n\n            resizeObserver.observe(timelineWrapper);\n\n            // Implement import content\n            $(document).on('click', '#importcontent', function(e) {\n                e.preventDefault();\n                const importmodal = `<div class=\"modal fade\" id=\"importmodal\" tabindex=\"-1\" aria-labelledby=\"importmodalLabel\"\n                 aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title flex-grow-1\" id=\"importmodalLabel\">\n                                ${M.util.get_string('importcontent', 'mod_interactivevideo')}</h5>\n                                <button type=\"button\" class=\"btn p-0 border-0\" data${bsAffix}-dismiss=\"modal\" aria-label=\"Close\">\n                                    <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary border-0\" data${bsAffix}-dismiss=\"modal\">\n                                ${M.util.get_string('cancel', 'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary border-0\" id=\"importcontentbutton\">\n                                ${M.util.get_string('import', 'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(importmodal);\n                $('#importmodal').modal('show');\n\n                $('#importmodal').on('hidden.bs.modal', function() {\n                    $('#importmodal').remove();\n                });\n\n                $('#importmodal').off('shown.bs.modal').on('shown.bs.modal', function() {\n                    // Make the modal draggable.\n                    $('#importmodal .modal-dialog').draggable({\n                        handle: \".modal-header\"\n                    });\n                    // Render the course select dropdown.\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'get_taught_courses',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            userid: userid\n                        },\n                        success: function(data) {\n                            let courses = JSON.parse(data);\n                            // Sort courses by name.\n                            courses.sort((a, b) => a.fullname.localeCompare(b.fullname));\n                            let courseSelect = `<select class=\"${isBS5 ? 'form' : 'custom'}-select w-100\" id=\"importcourse\">`;\n                            courses.forEach(course => {\n                                courseSelect += `<option value=\"${course.id}\">${course.fullname} (${course.shortname})</option>`;\n                            });\n                            courseSelect += `</select>`;\n                            let selectfield = `<div class=\"iv-form-group selectcourse\">\n                            <label class=\"iv-font-weight-bold form-label\" for=\"importcourse\">\n                            ${M.util.get_string('selectcourse', 'mod_interactivevideo')}</label>\n                            ${courseSelect}</div>`;\n                            $('#importmodal .modal-body').append(selectfield);\n                            // Default current course.\n                            $('#importmodal #importcourse').val(course);\n                            $('#importmodal #importcourse').trigger('change');\n                        }\n                    });\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcourse', function() {\n                $(`#importmodal .selectcm, #importmodal .select-interaction`).remove();\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_cm_by_courseid',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: $(this).val()\n                    },\n                    success: function(data) {\n                        let cms = JSON.parse(data);\n                        cms.sort((a, b) => a.name.localeCompare(b.name));\n                        let cmSelect = `<select class=\"${isBS5 ? 'form' : 'custom'}-select w-100\" id=\"importcm\">\n                        <option value=\"\">${M.util.get_string('select', 'mod_interactivevideo')}</option>`;\n                        cms.forEach(cm => {\n                            cmSelect += `<option value=\"${cm.id}\" ${cm.id == interaction ? 'disabled' : ''}>${cm.name}</option>`;\n                        });\n                        cmSelect += `</select>`;\n                        let selectfield = `<div class=\"iv-form-group selectcm\">\n                        <label for=\"importcm\" class=\"iv-font-weight-bold form-label\">\n                        ${M.util.get_string('selectactivity', 'mod_interactivevideo')}</label>\n                        ${cmSelect}</div>`;\n                        $(`#importmodal .selectcourse`).after(selectfield);\n                    }\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcm', async function() {\n                $(`#importmodal .select-interaction`).remove();\n                $(`#importmodal #importcm`).after(`<div class=\"select-interaction py-3\">\n                    <iframe src=\"${M.cfg.wwwroot + '/mod/interactivevideo/view.php?i=' + $(this).val()}&embed=1&preview=1\"\n                    frameborder=0 width=\"100%\" height=\"500\" class=\"loader\"></iframe></div>`);\n                let interactions = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: $(this).val(),\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n                interactions = JSON.parse(interactions);\n                interactions = interactions.filter(x => x.type != 'skipsegment');\n                if (interactions.length == 0) {\n                    $(`#importmodal .select-interaction`).append(`<div class=\"alert alert-warning mt-3\">\n                        ${M.util.get_string('nocontent', 'mod_interactivevideo')}</div>`);\n                    return;\n                }\n\n                $(`#importmodal .select-interaction`).append(`<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\n                     no-pointer\">\n                     <div class=\"input-group-prepend border-0 invisible\">\n                            <label class=\"input-group-text bg-white\">\n                                <input type=\"checkbox\"/>\n                                <i class=\"bi bi-plus iv-ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control border-0 iv-font-weight-bold\"\n                 value=\"${M.util.get_string('title', 'mod_interactivevideo')}\">\n                <input type=\"text\" class=\"form-control border-0 iv-font-weight-bold\" style=\"max-width: 50px;\"\n                value=\"XP\">\n                <input type=\"text\" style=\"max-width: 150px;\" value=\"${M.util.get_string('timestamp', 'mod_interactivevideo')}\"\n                 class=\"form-control border-0 iv-font-weight-bold\"></div>`);\n\n                interactions = interactions.map(int => {\n                    // Get the icon and check if the interaction is out of range (start, end time);\n                    const ctype = contentTypes.find(y => y.name === int.type);\n                    int.prop = JSON.stringify(ctype);\n                    int.icon = ctype.icon;\n                    if ((int.timestamp > end || int.timestamp < start) && int.timestamp > 0) {\n                        int.outside = true;\n                    } else {\n                        int.outside = false;\n                    }\n                    // Check if the interaction can be added (e.g. annotation content type can only be added once per activity);\n                    if (!ctype.allowmultiple && annotations.find(x => x.type == int.type)) {\n                        int.disabled = true;\n                    }\n                    return int;\n                });\n\n                interactions.sort((a, b) => a.timestamp - b.timestamp);\n                interactions.forEach(int => {\n                    const inputgroup = `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\"\n                     data-id=\"${int.id}\">\n                        <div class=\"input-group-prepend\">\n                            <label class=\"input-group-text\">\n                                <input type=\"checkbox\" ${int.disabled ? 'disabled' : ''}/>\n                                <i class=\"${int.icon} iv-ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control name\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 value=\"${int.title}\">\n                <input type=\"text\" style=\"max-width: 50px;\" ${int.timestamp < 0 || int.hascompletion == 0 ? 'readonly' : ''}\n                 class=\"form-control xp\" value=\"${int.xp}\">\n                <input type=\"text\" placeholder=\"00:00:00\" style=\"max-width: 150px;\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 class=\"form-control timestamp-input ${int.outside ? 'is-invalid' : ''}\"\n                value=\"${int.timestamp < 0 ? int.timestamp :\n                            convertSecondsToHMS(int.timestamp, false, false)}\"></div>`;\n                    $(`#importmodal .select-interaction`).append(inputgroup);\n                });\n\n                $(document).off('click', '#importmodal #importcontentbutton').on('click', '#importmodal #importcontentbutton',\n                    async function(e) {\n                        e.preventDefault();\n                        let $selected = $(`#importmodal .select-interaction input[type=\"checkbox\"]:checked`);\n                        let selectedInt = [];\n                        $selected.each(function() {\n                            let $row = $(this).closest('.input-group');\n                            const name = $row.find('.name').val();\n                            if (name.trim() == '') {\n                                return;\n                            }\n                            let timestamp = $row.find('.timestamp-input').val();\n                            if (timestamp == '') {\n                                return;\n                            }\n\n                            if (Number(timestamp) < 0) {\n                                timestamp = Number(timestamp);\n                            } else {\n                                const parts = timestamp.split(':');\n                                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                                if (annotations.find(x => x.timestamp == timestamp)) {\n                                    return;\n                                }\n                            }\n                            let id = $row.data('id');\n                            let int = interactions.find(x => x.id == id);\n                            int.title = name;\n                            int.timestamp = timestamp;\n                            let xp = Number($row.find('.xp').val());\n                            if (isNaN(xp) || xp == '') {\n                                xp = 0;\n                            }\n                            int.xp = xp;\n                            selectedInt.push(int);\n                        });\n                        if (selectedInt.length == 0) {\n                            addNotification(M.util.get_string('selectinteraction', 'mod_interactivevideo'), 'danger');\n                            return;\n                        } else {\n                            let interactions = await $.ajax({\n                                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                                method: \"POST\",\n                                dataType: \"text\",\n                                data: {\n                                    action: 'import_annotations',\n                                    sesskey: M.cfg.sesskey,\n                                    contextid: M.cfg.contextid,\n                                    annotations: JSON.stringify(selectedInt),\n                                    tocourse: M.cfg.courseId,\n                                    fromcourse: $('#importcourse').val(),\n                                    tocm: interaction,\n                                    fromcm: $('#importcm').val(),\n                                    module: coursemodule\n                                }\n                            });\n                            interactions = JSON.parse(interactions);\n\n                            // Dismiss modal.\n                            $('#importmodal').modal('hide');\n\n                            // Add the imported annotations to the current annotations.\n                            annotations = annotations.concat(interactions);\n                            dispatchEvent('annotationupdated', {\n                                annotations: annotations,\n                                action: 'import'\n                            });\n\n                            // Get interaction that allowmultiple false and init each one.\n                            interactions.forEach(int => {\n                                if (!int.allowmultiple) {\n                                    ctRenderer[int.type].init();\n                                }\n                            });\n                        }\n                    });\n            });\n\n            // Implement content type filter.\n            $(document).on('keyup', '#contentmodal #contentsearch', function() {\n                let search = $(this).val().toLowerCase();\n\n                $('#addcontentdropdown .dropdown-item').removeClass('d-none').addClass('d-flex');\n\n                if (search == '') {\n                    return;\n                }\n\n                $('#contentmodal #addcontentdropdown .dropdown-item').each(function() {\n                    let text = $(this).find('.contenttype-title').text().toLowerCase();\n                    if (text.includes(search)) {\n                        $(this).addClass('d-flex').removeClass('d-none');\n                    } else {\n                        $(this).addClass('d-none').removeClass('d-flex');\n                    }\n                });\n            });\n\n            // Implement fast forward and rewind.\n            const fastforward = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time >= end) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time += 1;\n                } else {\n                    time += 0.2;\n                }\n                if (time > end) {\n                    time = end;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastforward(e);\n            });\n\n            let fastForwardInterval;\n            $(document).on('mousedown', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastForwardInterval = setInterval(async() => {\n                    fastforward(e);\n                    if (await player.getCurrentTime() >= end) {\n                        clearInterval(fastForwardInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#fast-forward', function() {\n                clearInterval(fastForwardInterval);\n            });\n\n            const rewind = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time <= start) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time -= 1;\n                } else {\n                    time -= 0.2;\n                }\n                if (time < start) {\n                    time = start;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#rewind', async function(e) {\n                e.preventDefault();\n                rewind(e);\n            });\n\n            let rewindInterval;\n            $(document).on('mousedown', '#rewind', async function(e) {\n                e.preventDefault();\n                rewindInterval = setInterval(async() => {\n                    rewind(e);\n                    if (await player.getCurrentTime() <= start) {\n                        clearInterval(rewindInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#rewind', function() {\n                clearInterval(rewindInterval);\n            });\n\n            // Remove all event listeners before leaving the page.\n            window.addEventListener('beforeunload', function() {\n                $(document).off();\n                cancelAnimationFrame(onPlayingInterval);\n            });\n\n            // Event lister for bulk action.\n            $(document).on('click', '#annotation-list-bulk-edit', async function(e) {\n                e.preventDefault();\n                document.body.focus();\n                if ($(this).hasClass('active')) {\n                    // Remove all checkboxes.\n                    $('#annotation-list').find('.form-check').remove();\n                    $(this).removeClass('active');\n                    $('#annotation-list').find('tr').each(function() {\n                        $(this).removeClass('b-active');\n                    });\n                    $('body').removeClass('iv-bulk-edit');\n                    $('#annotation-list-bulk-checkall').addClass('d-none');\n                    return;\n                }\n                $(this).addClass('active');\n                $('#annotation-list-bulk-checkall').removeClass('d-none active');\n                $('body').addClass('iv-bulk-edit');\n                let li = $('#annotation-list').find('tr');\n                li.each(function() {\n                    let id = $(this).data('id');\n                    let type = $(this).data('type');\n                    // Find first td.\n                    let td = $(this).find('td').first().find('div');\n                    td.prepend(`<div class=\"form-check form-check-inline iv-mr-0\">\n                        <input class=\"form-check-input\" type=\"checkbox\" data-type=\"${type}\" id=\"annotation-${id}\" value=\"${id}\">\n                        <label class=\"form-check-label\" for=\"annotation-${id}\"></label></div>`);\n                });\n            });\n\n            // Event lister for bulk check all.\n            $(document).on('click', '#annotation-list-bulk-checkall', function(e) {\n                e.preventDefault();\n                let check = !$(this).hasClass('active');\n\n                // Uncheck all checkboxes.\n                $('tr.annotation .form-check-input').each(function() {\n                    if ((!$(this).is(':checked') && check) || ($(this).is(':checked') && !check)) {\n                        $(this).trigger('click');\n                    }\n                });\n\n                $(this).toggleClass('active');\n\n            });\n\n            $(document).on('click', 'tr.annotation .form-check-input', function(e) {\n                e.stopImmediatePropagation();\n                if ($(this).is(':checked')) {\n                    $(this).closest('tr').addClass('b-active');\n                } else {\n                    $(this).closest('tr').removeClass('b-active');\n                }\n\n                let checked = $('#annotation-list').find('tr .form-check-input:checked');\n\n                if (checked.length == 0) {\n                    $('#annotation-list-bulk .bulk-actions').hide();\n                } else {\n                    $('#annotation-list-bulk .bulk-actions').show();\n                }\n            });\n\n            $(document).on('click', '#annotation-list-bulk-delete', async function(e) {\n                e.preventDefault();\n                let ids = [];\n                let types = [];\n                let checked = $('#annotation-list').find('tr .form-check-input:checked');\n                checked.each(function() {\n                    ids.push($(this).val());\n                    types.push($(this).data('type'));\n                });\n                if (ids.length == 0) {\n                    return;\n                }\n                const promises = ids.map((id, index) => {\n                    return new Promise((resolve) => {\n                        let type = types[index];\n                        ctRenderer[type].deleteAnnotation(annotations, id, true);\n                        resolve();\n                    });\n                });\n\n                await Promise.all(promises);\n                dispatchEvent('annotationsdeleted', {\n                    annotations: this.annotations,\n                    ids: ids,\n                });\n            });\n\n            $(document).on('click', '#annotation-list-bulk-copy', async function(e) {\n                e.preventDefault();\n                let copiedIds = $('#annotation-list').find('tr .form-check-input:checked')\n                    .map(function() {\n                        return $(this).val();\n                    }).get();\n                if (copiedIds.length == 0) {\n                    return;\n                }\n                let copiedAnnotations = annotations.filter(x => copiedIds.includes(x.id));\n                copiedAnnotations = copiedAnnotations.map(function(item) {\n                    item.wwwroot = M.cfg.wwwroot;\n                    return item;\n                });\n                copiedAnnotations = JSON.stringify(copiedAnnotations);\n                // Copy to storage.\n                window.localStorage.setItem('copiedAnnotations', copiedAnnotations);\n                $('#annotation-list-bulk-paste').removeAttr('disabled');\n                $('#annotation-list-bulk-paste').addClass('btn-primary');\n                $('#annotation-list-bulk-paste').find('i').removeClass('bi-clipboard').addClass('bi-clipboard-fill');\n                addNotification(M.util.get_string('annotationscopied', 'mod_interactivevideo'), 'success');\n            });\n\n            $(document).on('click', '#annotation-list-bulk-download', async function(e) {\n                e.preventDefault();\n                $(this).attr('disabled', 'disabled');\n                $(this).find('i').addClass('fa-spin fa-circle-o-notch fa').removeClass('bi bi-download');\n                let downloadIds = $('#annotation-list').find('tr .form-check-input:checked')\n                    .map(function() {\n                        return $(this).val();\n                    }).get();\n\n                if (downloadIds.length == 0) {\n                    return;\n                }\n\n                let copiedAnnotations = annotations.filter(x => downloadIds.includes(x.id));\n                copiedAnnotations = copiedAnnotations.map(function(item) {\n                    item.wwwroot = M.cfg.wwwroot;\n                    return item;\n                });\n\n                const downloadTask = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'download_annotations',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: course,\n                        annotations: JSON.stringify(copiedAnnotations).replace(/</g, '&lt;').replace(/>/g, '&gt;'),\n                        cmid: coursemodule\n                    }\n                });\n\n                window.open(downloadTask, '_blank');\n\n                $(this).removeAttr('disabled');\n                $(this).find('i').removeClass('fa-spin fa-circle-o-notch fa').addClass('bi bi-download');\n            });\n\n            // Bulk set as defaults.\n            $(document).on('click', '#annotation-list-bulk-setdefault', async function(e) {\n                e.preventDefault();\n                let selectedIds = $('#annotation-list').find('tr .form-check-input:checked')\n                    .map(function() {\n                        return $(this).val();\n                    }).get();\n                if (selectedIds.length == 0) {\n                    return;\n                }\n                let selectedAnnotations = annotations.filter(x => selectedIds.includes(x.id));\n                // Make sure the annotations are unique based on type.\n                selectedAnnotations = selectedAnnotations.filter((item, index, self) =>\n                    index === self.findIndex((t) => (\n                        t.type === item.type\n                    ))\n                );\n\n                await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'set_defaults',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: course,\n                        defaults: JSON.stringify(selectedAnnotations),\n                    }\n                });\n                // Trigger the -edit button to reset the view.\n                $('#annotation-list-bulk-edit').trigger('click');\n                addNotification(M.util.get_string('annotationssavedasdefaults', 'mod_interactivevideo'), 'success');\n            });\n\n            // Bulk upload.\n            let ModalForm;\n            $(document).on('click', '#annotation-list-bulk-upload', async function(e) {\n                e.preventDefault();\n                if (!ModalForm) {\n                    ModalForm = await import('core_form/modalform');\n                }\n\n                const data = {\n                    contextid: M.cfg.contextid,\n                    id: coursemodule,\n                    courseid: course,\n                    annotationid: interaction,\n                    prevent: annotations.filter(x => JSON.parse(x.prop).allowmultiple == false).map(x => x.type).join(','),\n                };\n\n                let title = M.util.get_string('uploadannotations', 'mod_interactivevideo');\n                const form = new ModalForm({\n                    modalConfig: {\n                        title: title,\n                    },\n                    formClass: \"mod_interactivevideo\\\\form\\\\bulk_upload_form\",\n                    args: data,\n                });\n\n                form.show();\n\n                form.addEventListener(form.events.FORM_SUBMITTED, async(e) => {\n                    let imported = e.detail.new;\n                    // Check if the imported annotations are valid.\n                    imported = imported.filter(x => contentTypes.find(y => y.name === x.type));\n                    annotations = annotations.concat(imported);\n                    dispatchEvent('annotationupdated', {\n                        annotations: annotations,\n                        action: 'import'\n                    });\n                });\n            });\n\n            window.addEventListener('storage', function(e) {\n                // Activate paste button on other tabs.\n                e.stopImmediatePropagation();\n                if (e.key === 'copiedAnnotations') {\n                    // Activate paste button.\n                    $('#annotation-list-bulk-paste').removeAttr('disabled');\n                    $('#annotation-list-bulk-paste').addClass('btn-primary');\n                    $('#annotation-list-bulk-paste').find('i').removeClass('bi-clipboard').addClass('bi-clipboard-fill');\n                }\n            });\n\n            // Activate paste button on page load if there are copied annotations.\n            let copiedAnnotations = window.localStorage.getItem('copiedAnnotations');\n            if (copiedAnnotations !== null) {\n                // Don't activate if the same cm.\n                copiedAnnotations = JSON.parse(copiedAnnotations);\n                if (copiedAnnotations[0].cmid == coursemodule) {\n                    return;\n                }\n                // Activate paste button.\n                $('#annotation-list-bulk-paste').removeAttr('disabled');\n                $('#annotation-list-bulk-paste').addClass('btn-primary');\n                $('#annotation-list-bulk-paste').find('i').removeClass('bi-clipboard').addClass('bi-clipboard-fill');\n            }\n\n            // Paste annotations.\n            $(document).on('click', '#annotation-list-bulk-paste', async function(e) {\n                e.preventDefault();\n                let copiedAnnotations = window.localStorage.getItem('copiedAnnotations');\n                if (copiedAnnotations === null) {\n                    return;\n                }\n                copiedAnnotations = JSON.parse(copiedAnnotations);\n                // Make sure we don't copy the interaction with allowmultiple false;\n                copiedAnnotations = copiedAnnotations.filter(x => {\n                    let allowmultiple = JSON.parse(x.prop).allowmultiple;\n                    return allowmultiple || (!allowmultiple && !annotations.find(y => y.type == x.type));\n                });\n                if (copiedAnnotations.length == 0) {\n                    addNotification(M.util.get_string('annotationscopied', 'mod_interactivevideo'), 'danger');\n                    return;\n                }\n                const fromCourse = copiedAnnotations[0].courseid;\n                const fromCm = copiedAnnotations[0].cmid;\n                const toCourse = course;\n                // If it is from the same cm, we need to change the title.\n                if (fromCm == coursemodule) {\n                    copiedAnnotations = copiedAnnotations.filter(a => a.type != 'skipsegment').map(function(item) {\n                        if (item.timestamp >= 0) {\n                            item.timestamp = Number(item.timestamp) + 0.1;\n                            item.title = item.title + ' (' + M.util.get_string('copynoun', 'mod_interactivevideo') + ')';\n                        }\n                        return item;\n                    });\n                }\n\n                let interactions = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'import_annotations',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        annotations: JSON.stringify(copiedAnnotations),\n                        tocourse: toCourse,\n                        fromcourse: fromCourse,\n                        tocm: interaction,\n                        fromcm: fromCm,\n                        module: coursemodule\n                    }\n                });\n                interactions = JSON.parse(interactions);\n                // Add the imported annotations to the current annotations.\n                annotations = annotations.concat(interactions);\n                dispatchEvent('annotationupdated', {\n                    annotations: annotations,\n                    action: 'import'\n                });\n\n                // Get interaction that allowmultiple false and init each one.\n                interactions.forEach(int => {\n                    if (!int.allowmultiple) {\n                        ctRenderer[int.type].init();\n                    }\n                });\n\n            });\n\n            // Bulk deleted\n            $(document).on('annotationsdeleted', function(e) {\n                const ids = e.originalEvent.detail.ids;\n                ids.forEach(function(id) {\n                    $(`tr[data-id=\"${id}\"]`).addClass('deleted');\n                });\n                $('#annotation-list-bulk-edit').trigger('click');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return !ids.includes(item.id);\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactionsdeleted', 'mod_interactivevideo', ids.length), 'success');\n                }, 1000);\n            });\n\n            // Implement keyboard shortcuts.\n\n            document.addEventListener('keydown', async function(e) {\n                // Ignore spacebar when focus is on an input, textarea, or button\n                const activeTag = document.activeElement.tagName.toLowerCase();\n                if (activeTag !== 'body') {\n                    return;\n                }\n\n                if ($('body').hasClass('disablekb')) {\n                    return;\n                }\n\n                if (e.code === 'Space') {\n                    e.preventDefault(); // Prevent page scroll.\n                    if (await player.isPaused()) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                } else if (e.code === 'KeyA' && !e.ctrlKey && !e.metaKey) {\n                    e.preventDefault();\n                    // Launch add content modal.\n                    $addcontent.trigger('click');\n                } else if (e.code === 'ArrowRight') {\n                    e.preventDefault();\n                    // Fast forward.\n                    let time = await player.getCurrentTime();\n                    if (time >= end || time + 1 > end) {\n                        return;\n                    }\n                    player.seek(time + 1);\n                } else if (e.code === 'ArrowLeft') {\n                    e.preventDefault();\n                    // Rewind 10 seconds.\n                    let time = await player.getCurrentTime();\n                    if (time <= start || time - 1 < start) {\n                        return;\n                    }\n                    player.seek(time - 1);\n                } else if (e.code === 'KeyI') {\n                    e.preventDefault();\n                    // Launch import content modal.\n                    $('#importcontent').trigger('click');\n                } else if (e.code === 'KeyX') {\n                    e.preventDefault();\n                    // Launch delete content modal.\n                    $('#annotation-list-bulk-delete').trigger('click');\n                } else if (e.code === 'KeyD') {\n                    e.preventDefault();\n                    // Launch download content modal.\n                    $('#annotation-list-bulk-download').trigger('click');\n                } else if (e.code === 'KeyC') {\n                    e.preventDefault();\n                    // Launch copy content modal.\n                    $('#annotation-list-bulk-copy').trigger('click');\n                } else if (e.code === 'KeyP') {\n                    e.preventDefault();\n                    // Launch paste content modal.\n                    $('#annotation-list-bulk-paste').trigger('click');\n                } else if (e.code === 'KeyE') {\n                    e.preventDefault();\n                    // Launch edit content modal.\n                    $('#annotation-list-bulk-edit').trigger('click');\n                } else if (e.code === 'KeyA' && (e.ctrlKey || e.metaKey) && $('#annotation-list-bulk-edit').hasClass('active')) {\n                    e.preventDefault();\n                    // Launch add content modal.\n                    $('#annotation-list-bulk-checkall').trigger('click');\n                } else if (e.code === 'KeyU') {\n                    e.preventDefault();\n                    // Launch upload content modal.\n                    $('#annotation-list-bulk-upload').trigger('click');\n                } else if (e.code === 'Equal') {\n                    e.preventDefault();\n                    // Launch download content modal.\n                    $('#zoomin').trigger('click');\n                } else if (e.code === 'Minus') {\n                    e.preventDefault();\n                    // Launch download content modal.\n                    $('#zoomout').trigger('click');\n                } else if (e.code === 'KeyS' && (e.ctrlKey || e.metaKey)) {\n                    e.preventDefault();\n                    // Save content.\n                    $('#savedraft').trigger('click');\n                }\n            });\n        }\n    };\n});"],"names":["define","$","addToast","Notification","quickform","ModalFactory","ModalEvents","player","totaltime","currentTime","dispatchEvent","ctRenderer","playerReady","isRTL","attr","isBS5","hasClass","bsAffix","$loader","$progressbar","$scrollbar","$scrollhead","$videonav","replaceProgressBars","percentage","css","renderVideoNav","async","annos","start","length","find","empty","remove","forEach","render","x","type","renderItemOnVideoNavigation","time","getCurrentTime","init","url","coursemodule","interaction","course","end","coursecontextid","displayoptions","userid","posterimage","extendedcompletion","$videotimeline","$annotationlist","$annotationcanvas","$timelinewrapper","$videowrapper","$playpause","$timelineitemswrapper","$addcontent","require","addNotification","msg","add","Number","isNaN","contentTypes","annotations","convertSecondsToHMS","s","dynamic","rounded","Math","round","hours","floor","minutes","seconds","parseFloat","toFixed","activeid","renderAnnotationItems","removeClass","live","addClass","html","M","util","get_string","sort","a","b","timestamp","String","localeCompare","item","listItem","clone","renderEditItem","xp","filter","map","reduce","text","activeAnno","id","postEditCallback","getAnnotations","getItems","ajax","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","courseContextId","getContentTypes","when","done","items","contenttypes","JSON","parse","y","name","getRenderers","Promise","resolve","count","amdmodule","Type","isEditMode","prop","author","authorlink","description","stringify","editMode","validateTimestampFormat","fld","existing","test","val","validateTimeStartEnd","checkduration","checkexisting","checkskipsegment","parts","split","message","skip","annotation","title","runInteraction","modal","not","pause","updateTime","duration","toUpdatetime","cmid","courseid","onReady","MAX_SAFE_INTEGER","isPaused","seek","unMute","audio","passwordprotected","support","playbackrate","quality","t","ratio","usefixedratio","aspectratio","relWidth","width","startPercentage","newStart","append","i","marker","setCaption","e","onEnded","toggleClass","focus","currentAnnotation","tooltip","setTimeout","onSeek","onPlayingInterval","visualized","onPlaying","intervalFunction","thisTime","isPlaying","isEnded","cancelAnimationFrame","stop","scrollBar","document","getElementById","rect","getBoundingClientRect","left","right","window","innerWidth","scrollIntoView","behavior","block","inline","frequency","trigger","useAnimationFrame","animate","requestAnimationFrame","onplay","visualizer","onPause","VideoPlayer","load","IVPLAYER","one","on","detail","is","originalEvent","updated","push","status","removeAttr","target","ctype","this","contenttype","hastimestamp","allowmultiple","addAnnotation","preventDefault","closest","editAnnotation","cloneAnnotation","deleteCancelPromise","then","deleteAnnotation","catch","saveCancel","theAnnotation","play","stopImmediatePropagation","offsetX","hide","siblings","initialValue","key","show","field","value","success","$vseekbar","appendTimestampMarker","formattedTime","targetAnnotation","draggable","resizable","event","ui","position","skipduration","abs","originalPosition","originalSize","size","direction","off","height","localStorage","setItem","drag","offset","playerWidth","getItem","timelineHeight","contentTypeModal","parentOffset","relX","pageX","fadeIn","fadeOut","currentLevel","newLevel","parseInt","timelineElement","scrollWidth","clientWidth","ctrlKey","metaKey","deltaY","addEventListener","scrollLeft","style","scrollHeight","draftAnnotations","create","body","backdrop","removeOnHide","root","getRoot","$body","hidden","shown","handle","confirmationMessage","returnValue","rate","setRate","getQualities","currentQuality","qualities","qualitiesLabel","q","dropdown","setQuality","resizeTimeout","timelineWrapper","resizeObserver","ResizeObserver","clearTimeout","observe","importmodal","courses","fullname","courseSelect","shortname","selectfield","cms","cmSelect","cm","after","interactions","int","icon","outside","disabled","inputgroup","hascompletion","$selected","selectedInt","each","$row","trim","tocourse","courseId","fromcourse","tocm","fromcm","module","concat","search","toLowerCase","includes","fastforward","fastForwardInterval","setInterval","clearInterval","rewind","rewindInterval","ModalForm","first","prepend","check","ids","types","promises","index","all","copiedIds","get","copiedAnnotations","downloadIds","downloadTask","replace","open","selectedIds","selectedAnnotations","self","findIndex","defaults","annotationid","prevent","join","form","modalConfig","formClass","args","events","FORM_SUBMITTED","imported","new","fromCourse","fromCm","toCourse","activeElement","tagName","code"],"mappings":"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"}