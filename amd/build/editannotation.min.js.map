{"version":3,"file":"editannotation.min.js","sources":["../src/editannotation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * Edit interactions module\n *\n * @module     mod_interactivevideo/editannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/toast',\n    'core/notification',\n    'core/event_dispatcher',\n    './quickform',\n    './libraries/jquery-ui',\n\n], function($, addToast, Notification, {dispatchEvent}, quickform) {\n    let ctRenderer = {};\n    let player;\n    let totaltime;\n    let currentTime;\n    let playerReady = false;\n    let $loader = $('#background-loading');\n    /**\n     * Replace the progress bar on the video navigation.\n     * @param {Number} percentage - Percentage to replace the progress bar.\n     * @returns {void}\n     * */\n    const replaceProgressBars = (percentage) => {\n        percentage = percentage < 0 ? 0 : percentage;\n        percentage = percentage > 100 ? 100 : percentage;\n        $('#video-nav #progress').css('width', percentage + '%');\n        $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n    };\n    /**\n     * Render the annotations on the video navigation.\n     * @param {Array} annos - Annotations to render.\n     * @param {Number} start - Start time of the video.\n     * @param {Number} totaltime - Total time of the video.\n     * @returns {void}\n     * */\n    const renderVideoNav = async function(annos, start, totaltime) {\n        if (annos.length == 0) {\n            $(\"#video-nav ul\").empty();\n            return;\n        }\n\n        $(\"#video-nav ul\").empty();\n        $(\"#video-timeline-wrapper .skipsegment\").remove();\n        annos.forEach(async(x) => {\n            const render = ctRenderer[x.type];\n            await render.renderItemOnVideoNavigation(x);\n        });\n\n        const time = await player.getCurrentTime();\n        // Replace progress bar.\n        const percentage = (time - start) / totaltime * 100;\n        replaceProgressBars(percentage);\n        dispatchEvent('annotationitemsrendered', {'annotations': annos});\n    };\n\n    return {\n        /**\n         * Initialize function on page loads.\n         * @param {String} url video url\n         * @param {Number} coursemodule cm id\n         * @param {Number} interaction cm instance\n         * @param {Number} course course id\n         * @param {Number} start video start time\n         * @param {Number} end video end time\n         * @param {Number} coursecontextid course context id\n         * @param {String} type video type\n         * @param {Object} displayoptions display options\n         * @param {Number} userid user id\n         * @param {String} posterimage poster image\n         * @param {String} extendedcompletion extended completion\n         */\n        init: function(url, coursemodule, interaction, course, start, end, coursecontextid,\n            type = 'yt', displayoptions, userid, posterimage, extendedcompletion) {\n\n            quickform();\n\n            /**\n             * Util function to display notification\n             * @param {String} msg message text\n             * @param {String} type message type\n             */\n            const addNotification = (msg, type = \"info\") => {\n                addToast.add(msg, {\n                    type: type\n                });\n            };\n\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            let annotations = []; // Annotations.\n            let contentTypes; // Content types.\n\n            /**\n             * Convert seconds to HH:MM:SS format\n             * @param {Number} s second\n             * @param {Boolean} dynamic if true, only show minutes and seconds if less than one hour\n             * @param {Boolean} rounded if true, second is rounded\n             * @returns formatted timestamp\n             */\n            const convertSecondsToHMS = (s, dynamic = false, rounded = true) => {\n                if (rounded) {\n                    s = Math.round(s);\n                }\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - hours * 3600) / 60);\n                let seconds = s - hours * 3600 - minutes * 60;\n                if (rounded && seconds > 59.5) {\n                    seconds = 0;\n                    minutes++;\n                    if (minutes > 59) {\n                        minutes = 0;\n                        hours++;\n                    }\n                }\n                if (minutes < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                if (rounded) {\n                    seconds = Math.round(seconds);\n                } else {\n                    seconds = parseFloat(seconds).toFixed(2);\n                }\n\n                if (seconds < 10) {\n                    seconds = '0' + seconds;\n                }\n\n                if (dynamic && hours == 0) {\n                    return minutes + ':' + seconds;\n                }\n\n                return (hours < 10 ? '0' + hours : hours) + ':' + minutes + ':' + seconds;\n            };\n\n            let activeid = null; // Current active annotation id. Mainly used when editing to relaunch the interaction afte editing.\n\n            /**\n             * Handle rendering of annotation items on the list\n             * @param {Array} annotations array of annotation objects\n             * @returns\n             */\n            const renderAnnotationItems = (annotations) => {\n                $('#annotationwrapper .loader').remove();\n                $('#annotation-list').empty().removeClass(\"d-flex align-items-center justify-content-center\");\n                if (player.live) {\n                    $('#timeline-wrapper').addClass('no-pointer-events');\n                    $('#annotation-list').html(\n                        `${M.util.get_string('interactionsnotsupportedonlivevideo', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                renderVideoNav(annotations, start, totaltime);\n                if (annotations.length == 0) {\n                    $('#annotation-list').html(`${M.util.get_string('clickaddtoaddinteraction', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                annotations.sort(function(a, b) {\n                    return Number(a.timestamp) - Number(b.timestamp);\n                });\n\n                annotations.forEach(function(item) {\n                    let listItem = $('#annotation-template').clone();\n                    ctRenderer[item.type].renderEditItem(annotations, listItem, item);\n                });\n\n                let xp = annotations.filter(x => x.xp).map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n                $(\"#xp span\").text(xp);\n\n                if (activeid) {\n                    const activeAnno = annotations.find(x => x.id == activeid);\n                    if (activeAnno) {\n                        ctRenderer[activeAnno.type].postEditCallback(activeAnno);\n                    }\n                }\n            };\n\n            /**\n             * Get annotations from the server and execute the rendering function\n             * @returns\n             */\n            const getAnnotations = () => {\n                const getItems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_all_contenttypes',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                $.when(getItems, getContentTypes).done(async function(items, contenttypes) {\n                    annotations = JSON.parse(items[0]);\n                    if (player.live) {\n                        annotations = [];\n                    }\n                    contentTypes = JSON.parse(contenttypes[0]);\n                    // Remove all annotations that are not in the enabled content types.\n                    annotations = annotations.filter(x => contentTypes.find(y => y.name === x.type));\n                    const getRenderers = new Promise((resolve) => {\n                        let count = 0;\n                        contentTypes.forEach(x => {\n                            require(['' + x.amdmodule], function(Type) {\n                                ctRenderer[x.name] = new Type(player, annotations, interaction,\n                                    course, 0, 0, 0, 0, type, 0, totaltime, start, end, x, coursemodule,\n                                    null, displayoptions, null, extendedcompletion, {\n                                    isEditMode: true,\n                                });\n                                count++;\n                                ctRenderer[x.name].init();\n                                if (count == contentTypes.length) {\n                                    resolve(ctRenderer);\n                                }\n                            });\n                        });\n                    });\n                    annotations.map(x => {\n                        let prop = contentTypes.find(y => y.name === x.type);\n                        // Clean up the prop by removing author, authorlink, description;\n                        delete prop.author;\n                        delete prop.authorlink;\n                        delete prop.description;\n                        x.prop = JSON.stringify(prop);\n                        x.editMode = true;\n                        return x;\n                    });\n                    ctRenderer = await getRenderers;\n                    renderAnnotationItems(annotations);\n                });\n            };\n\n            /**\n             * Validate given timestamp against format\n             * @param {String} timestamp formatted timestamp hh:mm:ss\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @returns\n             */\n            const validateTimestampFormat = (timestamp, fld, existing) => {\n                const regex = /^([0-9]{2}):([0-5][0-9]):([0-5][0-9])(\\.\\d{2})?$/;\n                if (!regex.test(timestamp)) {\n                    addNotification(M.util.get_string('invalidtimestampformat', 'mod_interactivevideo'), 'danger');\n                    if (existing) {\n                        $(fld).val(existing);\n                    } else {\n                        $(fld).val(convertSecondsToHMS(start, false, false));\n                    }\n                    return false;\n                }\n                return true;\n            };\n\n            /**\n             * Validate timestamp against start and end time of the video, existing timestamp and skip segments\n             * @param {String} timestamp formatted timestamp\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @param {Number} seconds\n             * @param {Boolean} checkduration if true, check against start and end time\n             * @param {Boolean} checkexisting if true, check against existing annotations\n             * @param {Boolean} checkskipsegment if true, check against skip segments\n             * @returns\n             */\n            const validateTimeStartEnd = (timestamp, fld, existing, seconds, checkduration,\n                checkexisting, checkskipsegment) => {\n                // Convert the timestamp to seconds.\n                const parts = timestamp.split(':');\n                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                // Make sure the timestamp is between start and end.\n                if (checkduration) {\n                    if (timestamp > end || timestamp < start) {\n                        const message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(start, true, false),\n                            \"end\": convertSecondsToHMS(end, true, false)\n                        });\n                        addNotification(message, 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure the timestamp is not already in the list.\n                if (checkexisting) {\n                    if (annotations.find(x => x.timestamp == timestamp) && timestamp != seconds) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure timestamp is not in a skip segment.\n                if (checkskipsegment) {\n                    const skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(timestamp)\n                        && Number(x.title) > Number(timestamp));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(skip.timestamp, true, false),\n                            \"end\": convertSecondsToHMS(skip.title, true, false)\n                        }), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                return timestamp;\n            };\n\n            /**\n             * Run interaction\n             * @param {Object} annotation annotation object\n             */\n            const runInteraction = (annotation) => {\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').not('.sticky').remove();\n                $('#end-screen').remove();\n                player.pause();\n                const activityType = ctRenderer[annotation.type];\n                activityType.runInteraction(annotation);\n            };\n\n            /**\n             * Correct the start and end time.\n             * @param {Number} duration Total duration of the video.\n             * @returns {Object} Object containing start and end time.\n             */\n            const updateTime = async(duration) => {\n                duration = Number(duration);\n                let toUpdatetime = false;\n                if (!end || end == 0) {\n                    toUpdatetime = true;\n                }\n                if (!start || start >= duration || start < 0 || start >= duration) {\n                    toUpdatetime = true;\n                }\n                start = start > duration ? 0 : start;\n                if (toUpdatetime) {\n                    await $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_videotime',\n                            sesskey: M.cfg.sesskey,\n                            cmid: coursemodule,\n                            courseid: course,\n                            id: interaction,\n                            start: start,\n                            end: !end || end == 0 ? duration : end,\n                            contextid: M.cfg.contextid\n                        }\n                    });\n                }\n                end = !end || end == 0 || end > duration ? duration : end;\n                return {start, end};\n            };\n\n            /**\n             * Set of events to run after the video player is ready.\n             */\n            const onReady = async() => {\n                if (player.live) {\n                    end = Number.MAX_SAFE_INTEGER;\n                }\n                player.pause();\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    if (!player.live) {\n                        await player.seek(start);\n                    }\n                    onReady();\n                    return;\n                }\n                player.unMute();\n                if (player.audio) {\n                    $('#annotation-canvas').addClass('bg-black');\n                }\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#start-screen').removeClass('d-none');\n                    $('#video-block').removeClass('no-pointer bg-transparent');\n                }\n                if (player.type != 'vimeo'\n                    && player.type != 'html5video'\n                    && player.type != 'panopto'\n                    && player.type != \"peertube\") { // Vimeo/HTML5 does not pause/play on click.\n                    $('#video-block').addClass('no-pointer');\n                }\n\n                if (player.support.playbackrate == false) {\n                    $('#changerate').remove();\n                } else {\n                    $('#changerate').removeClass('d-none');\n                }\n\n                if (player.support.quality == false) {\n                    $('#changequality').remove();\n                } else {\n                    $('#changequality').removeClass('d-none');\n                }\n\n                let t = player.totaltime;\n\n                ({start, end} = await updateTime(t));\n\n                totaltime = end - start;\n                // Recalculate the ratio of the video.\n                let ratio = 16 / 9;\n                if (!displayoptions.usefixedratio || displayoptions.usefixedratio == 0) {\n                    ratio = player.aspectratio;\n                }\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                playerReady = true;\n                $('#annotation-canvas').removeClass('d-none');\n\n                // Handle timeline block.\n                $(\"#timeline-wrapper #video-timeline\").css({\n                    'background-image': 'url(' + posterimage + ')',\n                    'background-size': 'contain',\n                    'background-repeat': 'no-repeat',\n                });\n                $(\"#timeline-wrapper #duration\").text(convertSecondsToHMS(end, true));\n                $(\"#timeline-wrapper #currenttime\").text(convertSecondsToHMS(start, true));\n                // Render minute markers.\n                const minutes = Math.floor(totaltime / 60);\n                $('#timeline-items-wrapper').css('width', (minutes * 300) + 'px'); // 300px per minute as default.\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let startPercentage = 0;\n                let newStart = start;\n                if (start % 60 != 0) {\n                    startPercentage = (60 - (start % 60)) / totaltime * 100;\n                    newStart = start + (60 - (start % 60));\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 0%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n                for (let i = newStart; i <= end; i += 60) {\n                    let percentage = ((i - newStart) / totaltime * 100) + startPercentage;\n                    let marker = '';\n                    // Format h:m (e.g 3h1m).\n                    if (i >= 3600) {\n                        marker = Math.floor(i / 3600) + 'h' + Math.floor((i % 3600) / 60) + 'm';\n                    } else {\n                        marker = Math.floor(i / 60) + 'm';\n                    }\n                    $('#minute-markers').append(`<div class=\"minute-marker position-absolute\"\n                         style=\"left: ${percentage}%;\"><div class=\"text-white minute-label\">${marker}</div></div>`);\n                    $('#minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                            style=\"left: ${percentage}%;\"></div>`);\n                }\n\n                if (end % 60 != 0) {\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 100%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n\n                // Set caption to null.\n                try {\n                    player.setCaption('');\n                } catch (e) {\n                    // Do nothing.\n                }\n\n                $('#scrollbar, #scrollhead-top').css('left', 0);\n\n                getAnnotations();\n            };\n\n            /**\n             * Run when video ended (i.e. arrives at 'end' time)\n             */\n            const onEnded = () => {\n                player.pause();\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n                // Cover the video with a message on a white background div.\n                $('#video-wrapper').append(`<div id=\"end-screen\" class=\"border position-absolute w-100 h-100 bg-white d-flex\n                     justify-content-center align-items-center\" style=\"top: 0; left: 0;\">\n                     <button class=\"btn btn-danger border-0 rounded-circle\" style=\"font-size: 1.5rem;\" id=\"restart\">\n                    <i class=\"bi bi-arrow-repeat\" style=\"font-size: x-large;\"></i></button></div>`);\n                $('#video-nav #progress').css('width', '100%');\n                $('#scrollbar, #scrollhead-top').css('left', '100%');\n                // Focus on the restart button.\n                $('#message #restart').focus();\n\n                // If the current time matches the timestamp of an annotation, highlight the annotation.\n                const currentAnnotation = annotations.find((annotation) => annotation.timestamp == end);\n                if (currentAnnotation) {\n                    $('#annotation-list tr').removeClass('active');\n                    $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                    // Show tooltip for two seconds.\n                    $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                    setTimeout(function() {\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                    }, 2000);\n                }\n            };\n\n            /**\n             * Execute when video is sought\n             * @param {Number} t seconds\n             * @returns\n             */\n            const onSeek = async function(t) {\n                if (!playerReady) {\n                    return;\n                }\n                if (t) {\n                    t = Number(t);\n                } else {\n                    t = await player.getCurrentTime();\n                }\n                if (t > start && t < end) {\n                    $('#end-screen').remove();\n                }\n                const percentage = (t - start) / (totaltime) * 100;\n                $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(t, true));\n                dispatchEvent('timeupdate', {'time': t});\n            };\n\n            let onPlayingInterval;\n            let visualized = false;\n            /**\n             * Excute when video plays (i.e. start or resume)\n             */\n            const onPlaying = async() => {\n                $('#message, #end-screen').not('.sticky').remove();\n                $('#playpause').find('i').removeClass('bi-play-fill').addClass('bi-pause-fill').removeClass('rotate-360');\n                if (player.audio && !visualized) {\n                    player.visualizer();\n                    visualized = true;\n                }\n                if (player.live) {\n                    return;\n                }\n                const intervalFunction = async function() {\n                    let thisTime = await player.getCurrentTime();\n                    const isPlaying = await player.isPlaying();\n                    const isEnded = await player.isEnded();\n                    if (!isPlaying) {\n                        cancelAnimationFrame(onPlayingInterval);\n                        return;\n                    }\n\n                    if (thisTime < start) {\n                        await player.seek(start);\n                        thisTime = start;\n                    }\n\n                    if (thisTime >= end || isEnded) {\n                        player.stop(end);\n                        cancelAnimationFrame(onPlayingInterval);\n                        onEnded();\n                        return;\n                    }\n                    dispatchEvent('timeupdate', {'time': thisTime});\n                    $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(thisTime, true));\n                    let percentage = (thisTime - start) / (totaltime) * 100;\n                    $('#video-nav #progress').css('width', percentage + '%');\n                    $(\"#scrollbar, #scrollhead-top\").css('left', percentage + '%');\n\n                    // Scroll the timeline so that the current time is in the middle of the timeline.\n                    const scrollBar = document.getElementById('scrollbar');\n                    // Check if the scrollbar is in view.\n                    const rect = scrollBar.getBoundingClientRect();\n                    if (rect.left < 0 || rect.right > window.innerWidth) {\n                        scrollBar.scrollIntoView({behavior: \"instant\", block: \"center\", inline: \"center\"});\n                    }\n\n                    // If the current time matches the timestamp of an annotation, highlight the annotation\n                    const currentAnnotation = annotations.find(x => (thisTime - player.frequency) <= x.timestamp\n                        && (thisTime + player.frequency) >= x.timestamp);\n                    if (currentAnnotation) {\n                        $('#annotation-list tr').removeClass('active');\n                        $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                        setTimeout(function() {\n                            $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                        }, 2000);\n                    }\n\n                    // If current time is within the skipsegment, seek to the end of the segment.\n                    let skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    let skip = skipsegments.find(x => Number(x.timestamp) < Number(thisTime)\n                        && Number(x.title) > Number(thisTime));\n                    if (skip) {\n                        await player.seek(Number(skip.title));\n                        // Replace the progress bar.\n                        percentage = (skip.title - start) / totaltime * 100;\n                        replaceProgressBars(percentage);\n                    }\n                };\n                if (player.useAnimationFrame) {\n                    const animate = async() => {\n                        const isPlaying = await player.isPlaying();\n                        if (isPlaying) {\n                            intervalFunction();\n                            onPlayingInterval = requestAnimationFrame(animate);\n                        }\n                    };\n                    onPlayingInterval = requestAnimationFrame(animate);\n                } else {\n                    const isPlaying = await player.isPlaying();\n                    if (isPlaying) {\n                        intervalFunction();\n                    }\n                }\n            };\n\n            /**\n             * Excute when video is paused.\n             */\n            const onPause = () => {\n                cancelAnimationFrame(onPlayingInterval);\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill').toggleClass('rotate-360');\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + type], function(VideoPlayer) {\n                if (displayoptions.passwordprotected == 1) {\n                    // Remove start screen, set .video-block to d-none, #annotation-canvas remove d-none.\n                    $('#video-block').addClass('no-pointer bg-transparent');\n                    $('#annotation-canvas').removeClass('d-none');\n                }\n                player = new VideoPlayer();\n                player.load(\n                    url,\n                    start,\n                    end,\n                    {\n                        'customStart': true,\n                        'passwordprotected': displayoptions.passwordprotected == 1,\n                        'showControls': false,\n                    }\n                );\n                window.IVPLAYER = player;\n            });\n\n            $(document).on('iv:playerReady', function() {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function() {\n                onPause();\n            });\n\n            $(document).on('iv:playerPlaying', function() {\n                onPlaying();\n            });\n\n            $(document).on('iv:playerEnded', function() {\n                onEnded();\n            });\n\n            $(document).on('iv:playerSeek', function(e) {\n                onSeek(e.detail.time);\n            });\n\n            $(document).on('iv:playerError', function() {\n                addNotification(M.util.get_string('thereisanissueloadingvideo', 'mod_interactivevideo'), 'danger');\n                $('#annotation-canvas').removeClass('d-none');\n                $('#start-screen').addClass('d-none');\n                $('#video-block').addClass('no-pointer bg-transparent');\n                $('#spinner').remove();\n                $('.loader').removeClass('loader');\n            });\n\n            // Post annotation update (add, edit, clone).\n            let cacheCleared = false;\n            $(document).on('annotationupdated', function(e) {\n                if (!cacheCleared) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_ivitems_cache',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            cmid: interaction,\n                        },\n                        success: function() {\n                            cacheCleared = true;\n                        }\n                    });\n                }\n                const action = e.originalEvent.detail.action;\n                if (action == 'import') {\n                    annotations = e.originalEvent.detail.annotations;\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactionimported', 'mod_interactivevideo'), 'success');\n                    return;\n                }\n                let updated = e.originalEvent.detail.annotation;\n                if (action == 'edit' || action == 'draft' || action == 'savedraft') {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != updated.id;\n                    });\n                }\n                updated.prop = JSON.stringify(contentTypes.find(x => x.name === updated.type));\n                annotations.push(updated);\n                if (action == 'add') {\n                    activeid = updated.id;\n                } else {\n                    activeid = null;\n                }\n                annotations.map(x => {\n                    x.editMode = true;\n                    return x;\n                });\n                renderAnnotationItems(annotations);\n                if (action == 'add' || action == 'clone') {\n                    addNotification(M.util.get_string('interactionadded', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                } else if (action == 'edit') {\n                    addNotification(M.util.get_string('interactionupdated', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    setTimeout(function() {\n                        $(`tr[data-id=\"${updated.id}\"]`).removeClass('active');\n                    }, 1500);\n                }\n\n                // If draft exists, activate the save button.\n                if (annotations.find(x => x.status == 'draft')) {\n                    $('#timeline-wrapper #savedraft').removeAttr('disabled').addClass('pulse');\n                } else {\n                    $('#timeline-wrapper #savedraft').attr('disabled', 'disabled').removeClass('pulse');\n                }\n            });\n\n            // Re-render annotation list and timeline after an annotation is deleted.\n            $(document).on('annotationdeleted', function(e) {\n                const annotation = e.originalEvent.detail.annotation;\n                activeid = null;\n                $(`tr[data-id=\"${annotation.id}\"]`).addClass('deleted');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != annotation.id;\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactiondeleted', 'mod_interactivevideo'), 'success');\n                }, 1000);\n            });\n\n            // Implement create annotation\n            $(document).on('click', '#addcontentdropdown .dropdown-item', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                // Check if the target item is a link.\n                if ($(e.target).is('a')) {\n                    return;\n                }\n\n                const ctype = $(this).data('type');\n                player.pause();\n                let timestamp = currentTime || await player.getCurrentTime();\n                timestamp = Number(timestamp.toFixed(2));\n                const contenttype = contentTypes.find(x => x.name == ctype);\n                if (contenttype.hastimestamp) {\n                    if (annotations.find(x => x.timestamp == timestamp)) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                    // Check skip segments\n                    const skipsegments = annotations.filter(x => x.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(currentTime)\n                        && Number(x.title) > Number(currentTime));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                }\n                if (!contenttype.allowmultiple && annotations.find(x => x.type == ctype)) {\n                    addNotification(M.util.get_string(\n                        'thisinteractionalreadyexists', 'mod_interactivevideo', contenttype.title), 'danger');\n                    return;\n                }\n                currentTime = null;\n                ctRenderer[ctype].addAnnotation(annotations, timestamp, coursemodule);\n            });\n\n            // Implement edit annotation\n            $(document).on('click', 'tr.annotation .edit', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].editAnnotation(annotations, id, coursemodule);\n                if (timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n            });\n\n            // Implement copy annotation\n            $(document).on('click', 'tr.annotation .copy', async function(e) {\n                e.preventDefault();\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                const time = await player.getCurrentTime();\n                ctRenderer[contenttype].cloneAnnotation(id, time);\n            });\n\n            // Implement delete annotation.\n            $(document).on('click', 'tr.annotation .delete', function(e) {\n                e.preventDefault();\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const annotation = annotations.find(annotation => annotation.id == id);\n                try {\n                    Notification.deleteCancelPromise(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                    ).then(() => {\n                        return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                    }).catch(() => {\n                        return;\n                    });\n                } catch {\n                    Notification.saveCancel(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                        function() {\n                            return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                        }\n                    );\n                }\n\n\n            });\n\n            // Implement view annotation.\n            $(document).on('click', 'tr.annotation .title', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                // Update the progress bar.\n                const percentage = (timestamp - start) / totaltime * 100;\n                replaceProgressBars(percentage);\n                let currentTime = await player.getCurrentTime();\n                if (currentTime != timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const theAnnotation = annotations.find(annotation => annotation.id == id);\n                setTimeout(() => {\n                    runInteraction(theAnnotation);\n                }, 500);\n            });\n\n            // Implement go to timestamp.\n            $(document).on('click', 'tr.annotation .timestamp', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).data('timestamp');\n                await player.seek(timestamp);\n                player.play();\n            });\n\n            // Right click on the video nav or video timeline to add a new interaction.\n            $(document).on('contextmenu', '#vseek, #video-timeline', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                currentTime = (percentage * totaltime) + start;\n                await player.seek(currentTime);\n                player.pause();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Right click on the scrollbar to add a new interaction.\n            $(document).on('contextmenu', '#scrollbar, #scrollhead-top', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                currentTime = await player.getCurrentTime();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Click the play/pause button on the timeline region to pause/play video.\n            $(document).on('click', '#playpause', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                // Pause or resume the video.\n                let isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                } else {\n                    let t = await player.getCurrentTime();\n                    if (t >= end) {\n                        $('#end-screen #restart').trigger('click');\n                    } else {\n                        player.play();\n                    }\n                }\n            });\n\n            $(document).on('click', '#video-block', function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $('#playpause').trigger('click');\n            });\n\n            // Right click on the annotation indicator to edit the annotation.\n            $(document).on('contextmenu', '#video-nav .annotation', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                // Trigger click on the edit button.\n                $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n            });\n\n            // Quick edit.\n            $(document).on('contextmenu', '[data-editable]', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($('[data-field].editing').length > 0) {\n                    return;\n                }\n                const fld = $(this).data('editable');\n                $(this).hide();\n                $(this).siblings('[data-field=\"' + fld + '\"]').removeClass('d-none').focus().addClass('editing');\n                if (fld == 'timestamp') {\n                    $(this).closest('tr')\n                        .append(`<div class=\"timestamp-info position-absolute\">\n                        ${M.util.get_string('rightclicktosetcurrenttime', 'mod_interactivevideo')}</div>`);\n                }\n            });\n\n            $(document).on('contextmenu', '[data-field=\"timestamp\"]', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const time = await player.getCurrentTime();\n                $(this).val(convertSecondsToHMS(time, false, false));\n            });\n\n            $(document).on('keyup', '[data-field].editing', function(e) {\n                $(this).removeClass('is-invalid');\n                const initialValue = $(this).data('initial-value');\n                const val = $(this).val();\n                const fld = $(this).data('field');\n                if (val == '') {\n                    $(this).addClass('is-invalid');\n                }\n\n                // If escape key is pressed, revert the value.\n                if (e.key == 'Escape') {\n                    $(this).val(initialValue);\n                    $(this).removeClass('editing');\n                    $(this).addClass('d-none');\n                    $(this).siblings('[data-editable]').show();\n                    $('.timestamp-info').remove();\n                    return;\n                }\n                // If enter key is pressed, save the value.\n                if (e.key == 'Enter') {\n\n                    let seconds;\n                    if (fld == 'timestamp') {\n                        const parts = initialValue.split(':');\n                        seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!validateTimestampFormat(val, '[data-field].editing', initialValue)) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        const timestamp = validateTimeStartEnd(val, '[data-field].editing', initialValue, seconds,\n                            true, true, true);\n                        if (timestamp == -1) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        seconds = timestamp;\n                    }\n\n                    if ($(this).hasClass('is-invalid')) {\n                        return;\n                    }\n                    if (val == initialValue) {\n                        $(this).removeClass('editing');\n                        $(this).addClass('d-none');\n                        $(this).siblings('[data-editable]').show();\n                        return;\n                    }\n                    const id = $(this).data('id');\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: id,\n                            field: fld,\n                            contextid: M.cfg.contextid,\n                            value: fld == 'timestamp' ? seconds : val,\n                        },\n                        success: function(data) {\n                            $('.timestamp-info').remove();\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'edit'\n                            });\n                        }\n                    });\n                    return;\n                }\n            });\n\n            $(document).on('blur', '[data-field].editing', function() {\n                const initialValue = $(this).data('initial-value');\n                $(this).val(initialValue);\n                $(this).removeClass('editing');\n                $(this).addClass('d-none');\n                $(this).siblings('[data-editable]').show();\n                $('.timestamp-info').remove();\n            });\n            // End quick edit.\n\n            $(document).on('click', '#end-screen #restart', async function(e) {\n                e.preventDefault();\n                $('#end-screen').remove();\n                await player.seek(start);\n                player.play();\n            });\n\n            // Display tooltip on anntation indicator when annotation on the list is hovered.\n            $(document).on('mouseover', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseover');\n            });\n\n            // Remove tooltip when annotation on the list is not hovered.\n            $(document).on('mouseout', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseout');\n                $('.tooltip').remove();\n            });\n\n            // Highlight annotation on the list when annotation indicator is hovered.\n            $(document).on('mouseover', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).addClass('active');\n            });\n\n            // Remove highlight when annotation indicator is not hovered.\n            $(document).on('mouseout', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).removeClass('active');\n            });\n\n            // Validate timestamp when the timestamp field is changed.\n            $(document).on('change', '.timestamp-input, .timestamp-field input', function() {\n                $(this).removeClass('is-invalid');\n                const parts = $(this).val().split(':');\n                const seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                if (!validateTimestampFormat($(this).val(), this)) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n\n                const timestamp = validateTimeStartEnd($(this).val(), this, \"00:00:00\", seconds, true, false, true);\n\n                if (timestamp == -1) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n            });\n\n            const appendTimestampMarker = (seconds, rounded) => {\n                const formattedTime = convertSecondsToHMS(seconds, true, rounded);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n            };\n\n            $(document).on('annotationitemsrendered', function() {\n                $('#timeline-wrapper [data-toggle=\"tooltip\"]').tooltip({\n                    'boundary': 'window',\n                    'container': '#timeline',\n                });\n                // Put the minute markers on the timeline;\n                let targetAnnotation = null;\n                // Destroy draggable and resizable if already initialized.\n                try {\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').draggable('destroy');\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').resizable('destroy');\n                } catch (e) {\n                    // Do nothing.\n                }\n                $('#timeline-items .annotation.li-draggable').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('.tooltip, #message').remove();\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        $('.tooltip').remove();\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            ui.position.left = -5;\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            ui.position.left = $('#timeline-items').width() - 5;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        $(this).css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('.tooltip').remove();\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            $(this).css('left', '-5px');\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            $(this).css('left', 'calc(100% - 5px)');\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').draggable({\n                    'axis': 'x',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                        }\n\n                        if (timestamp > end) {\n                            timestamp = end;\n                        }\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let skipduration = Number(targetAnnotation.title) - Number(targetAnnotation.timestamp);\n                        if (timestamp < 0 && timestamp + skipduration < start) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp > end) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp < start) {\n                            skipduration = skipduration - Math.abs(start - timestamp);\n                            timestamp = start;\n                        }\n                        if (timestamp + skipduration > end) {\n                            skipduration = Math.abs(end - timestamp);\n                            timestamp = end - skipduration;\n                        }\n                        if (skipduration <= 0) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.title = timestamp + skipduration;\n                        if (targetAnnotation.title > end) {\n                            targetAnnotation.title = end;\n                        }\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (percentage < 0) {\n                            percentage = 0;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').resizable({\n                    'containment': '#video-timeline-wrapper',\n                    'handles': 'e, w',\n                    'start': async function() {\n                        const isPaused = await player.isPaused();\n                        if (!isPaused) {\n                            player.pause();\n                        }\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'resize': async function(event, ui) {\n                        let timestamp;\n                        if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                        }\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                        await player.seek(timestamp);\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp, direction;\n                        if (ui.originalPosition.left != ui.position.left) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"left\";\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"right\";\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        if (direction == \"left\") {\n                            targetAnnotation.timestamp = timestamp;\n                        } else {\n                            targetAnnotation.title = timestamp;\n                            if (targetAnnotation.title > end) {\n                                targetAnnotation.title = end;\n                            }\n                        }\n                        targetAnnotation.status = 'draft';\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n\n                        let percentage = (timestamp - start) / totaltime * 100;\n                        if (isNaN(percentage) || percentage < 0) {\n                            percentage = 0;\n                        }\n                        if (percentage > 100) {\n                            percentage = 100;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', percentage + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('contextmenu').on('contextmenu', function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    const id = $(this).data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('click').on('click', async function(e) {\n                    e.preventDefault();\n                    const timestamp = $(this).data('timestamp');\n                    await player.seek(timestamp);\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment .delete-skipsegment').off('click').on('click', function(e) {\n                    e.preventDefault();\n                    const id = $(this).closest('.skipsegment').data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .delete`).trigger('click');\n                });\n            });\n\n            $('#scrollbar').draggable({\n                'containment': '#timeline-items',\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#timeline-items').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#timeline-items').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#timeline-items').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            $('#scrollhead-top').draggable({\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': async function(event, ui) {\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                    $('#vseek').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#vseek').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                },\n                'stop': async function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#vseek').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (isNaN(percentage) || percentage < 0) {\n                        percentage = 0;\n                    }\n                    if (percentage > 100) {\n                        percentage = 100;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                    const isPaused = await player.isPaused();\n                    if (!isPaused) {\n                        player.pause();\n                    }\n                }\n            });\n\n            // Resize timeline.\n            $('#timeline-wrapper').resizable({\n                'handles': 'n',\n                'minHeight': 125,\n                'maxHeight': 500,\n                'start': function() {\n                    $('#top-region, #timeline-wrapper').addClass('no-pointer-events');\n                },\n                'resize': function(event, ui) {\n                    $('#top-region').css('height', `calc(100dvh - ${ui.size.height + 70}px)`);\n                },\n                'stop': function() {\n                    $('#top-region, #timeline-wrapper').removeClass('no-pointer-events');\n                    localStorage.setItem('timeline-height', $('#timeline-wrapper').height());\n                }\n            });\n\n            // Resize player region.\n            $('#separator').draggable({\n                'axis': 'x',\n                'containment': '#wrapper',\n                'grid': [1, 0],\n                'start': function() {\n                    $('#wrapper').addClass('no-pointer-events');\n                },\n                drag: function() {\n                    const parentOffset = $(this).offset();\n                    const width = parentOffset.left;\n                    $('#player-region').css('width', width + 'px');\n                    $('#content-region').css('width', 'calc(100% - ' + width + 'px)');\n                },\n                stop: function() {\n                    const width = $(this).offset().left;\n                    // Save this to local storage\n                    localStorage.setItem('player-width', width);\n                    $('#wrapper').removeClass('no-pointer-events');\n                }\n            });\n\n            // Set player region width from the saved width in local storage.\n            const playerWidth = localStorage.getItem('player-width');\n            if (playerWidth && window.innerWidth > 992) {\n                $('#separator').css('left', playerWidth + 'px');\n                $('#player-region').css('width', playerWidth + 'px');\n                $('#content-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n            }\n\n            // Set timeline height from saved height in local storage.\n            const timelineHeight = localStorage.getItem('timeline-height');\n            if (timelineHeight) {\n                $('#timeline-wrapper').css('height', timelineHeight + 'px');\n                $('#top-region').css('height', `calc(100dvh - ${Number(timelineHeight) + 70}px)`);\n            }\n\n            // Seek bar functionalities\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseenter', function(e) {\n                $('#cursorbar, #position-marker').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                // First clone the #scrollbar and place it where the cursor is.\n                let $scrollbar = $('#scrollbar').clone();\n                $scrollbar.attr('id', 'cursorbar');\n\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n\n                $scrollbar.css('left', (relX + 5) + 'px');\n                $scrollbar.find('#scrollhead').remove();\n                const percentage = relX / $(this).width();\n                const time = percentage * (totaltime) + start;\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n                $('#vseek #position-marker').css('left', relX + 'px');\n                $('#timeline-items').append($scrollbar);\n            });\n\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseleave', function(e) {\n                e.stopImmediatePropagation();\n                $('#vseek #position-marker, #cursorbar').remove();\n            });\n\n            $('#vseek #bar, #video-timeline').on('mousemove', function(e) {\n                e.stopImmediatePropagation();\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                const percentage = relX / $(this).width();\n                let time = percentage * (totaltime) + start;\n                if (time < start) {\n                    time = start;\n                }\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                // Move the cursorbar\n                $('#cursorbar').css('left', (relX + 5) + 'px');\n                $('#vseek #position').text(formattedTime);\n                $('#vseek #position-marker').css('left', relX + 'px');\n            });\n\n            // Run interaction when annotation indicator is clicked.\n            $(document).on('click', '#video-nav .annotation', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                const annotation = annotations.find(x => x.id == id);\n                $loader.fadeIn(300);\n                if (await player.getCurrentTime() != annotation.timestamp) {\n                    await player.seek(annotation.timestamp);\n                }\n                $loader.fadeOut(300);\n                runInteraction(annotation);\n            });\n\n            // Seek video on click on timeline or video nav.\n            $(document).on('click', '#vseek #bar, #video-timeline', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                $loader.fadeIn(300);\n                const isPaused = await player.isPaused();\n                if (!isPaused) {\n                    player.pause();\n                }\n                await player.seek((percentage * totaltime) + start);\n                $loader.fadeOut(300);\n                $(\"#message, #end-screen\").remove();\n            });\n\n            // Implement timeline zoom out.\n            $('#zoomout').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) - 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let timelineElement = document.getElementById('timeline');\n                if (timelineElement.scrollWidth <= timelineElement.clientWidth) {\n                    $(this).attr('disabled', 'disabled');\n                }\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement timeline zoom in.\n            $('#zoomin').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) + 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                $('#zoomout').removeAttr('disabled');\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement zoom in and zoom out on mouse scroll on timeline.\n            $(\"#timeline\").on('wheel', function(e) {\n                if (e.ctrlKey || e.metaKey) {\n                    e.preventDefault();\n                    if (e.originalEvent.deltaY < 0) {\n                        $('#zoomin').trigger('click');\n                    } else {\n                        $('#zoomout').trigger('click');\n                    }\n                }\n            });\n\n            document.getElementById('timeline').addEventListener('scroll', function() {\n                document.getElementById('minute-markers-wrapper').scrollLeft = this.scrollLeft;\n                document.getElementById('vseek').style.left = -this.scrollLeft + 'px';\n                document.getElementById('minute-markers-bg-wrapper').style.left = -this.scrollLeft + 'px';\n                document.getElementById('scrollbar').scrollHeight = this.scrollHeight;\n            });\n\n            // Save timeline changes.\n            $('#savedraft').on('click', function(e) {\n                e.stopImmediatePropagation();\n                let draftAnnotations = annotations.filter(x => x.status == 'draft');\n                let count = 0;\n                draftAnnotations.forEach(function(a) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: a.id,\n                            field: 'timestamp',\n                            contextid: M.cfg.contextid,\n                            value: a.timestamp,\n                        },\n                        success: function(data) {\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'savedraft'\n                            });\n                        }\n                    });\n                    if (a.type == 'skipsegment') {\n                        $.ajax({\n                            url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                            method: \"POST\",\n                            dataType: \"text\",\n                            data: {\n                                action: 'quick_edit_field',\n                                sesskey: M.cfg.sesskey,\n                                id: a.id,\n                                field: 'title',\n                                contextid: M.cfg.contextid,\n                                value: a.title,\n                            },\n                            success: function(data) {\n                                const updated = JSON.parse(data);\n                                dispatchEvent('annotationupdated', {\n                                    annotation: updated,\n                                    action: 'savedraft'\n                                });\n                            }\n                        });\n                    }\n                    count++;\n                    if (count == draftAnnotations.length) {\n                        addNotification(M.util.get_string('draftsaved', 'mod_interactivevideo'), 'success');\n                    }\n                });\n\n            });\n\n            // Launch content selection modal.\n            $('#addcontent').on('click', async function(e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n                $('#contentmodal').modal('show');\n            });\n\n            $('#contentmodal').on('show.bs.modal', function() {\n                player.pause();\n                $('#addcontentdropdown').addClass('modal-body');\n            });\n\n            $('#contentmodal').on('hide.bs.modal', function() {\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                $('#addcontentdropdown').removeClass('modal-body');\n            });\n\n            // Inform user to save changes before close or unload the current page.\n            window.addEventListener('beforeunload', (e) => {\n                if (annotations.find(x => x.status == 'draft')) {\n                    const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                    e.returnValue = confirmationMessage;\n                    return confirmationMessage;\n                }\n                return true;\n            });\n\n            // Implement the rate change.\n            $(document).on('click', '.changerate', function(e) {\n                e.preventDefault();\n                const rate = $(this).data('rate');\n                player.setRate(rate);\n                $('.changerate').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            $(document).on('iv:playerRateChange', function(e) {\n                $('.changerate').find('i').removeClass('bi-check');\n                $(`.changerate[data-rate=\"${e.originalEvent.detail.rate}\"]`).find('i').addClass('bi-check');\n            });\n\n            // Handle video control:: Quality change\n            $(\"#changequality\").on('shown.bs.dropdown', async function() {\n                let quality = await player.getQualities();\n                $('#qualitieslist').empty();\n                let currentQuality = quality.currentQuality;\n                if (currentQuality === null) {\n                    currentQuality = $(this).data('current');\n                }\n                let qualities = quality.qualities;\n                let qualitiesLabel = quality.qualitiesLabel;\n                qualities.forEach((q, i) => {\n                    $('#qualitieslist').append(`<a class=\"dropdown-item changequality\" data-quality=\"${q}\"\n                         href=\"#\"><i class=\"bi ${q == currentQuality ? 'bi-check' : ''} fa-fw ml-n3\"></i>${qualitiesLabel[i]}</a>`);\n                });\n                $(this).find('[data-toggle=dropdown]').dropdown('update');\n            });\n\n            $(document).on('click', '.changequality', function(e) {\n                e.preventDefault();\n                const quality = $(this).data('quality');\n                player.setQuality(quality);\n                $('.changequality').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            // Observe timeline-wrapper width change.\n            let timelineWrapper = document.getElementById('timeline-wrapper');\n            let resizeObserver = new ResizeObserver(() => {\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n            });\n\n            resizeObserver.observe(timelineWrapper);\n\n            // Implement import content\n            $(document).on('click', '#importcontent', function(e) {\n                e.preventDefault();\n                const importmodal = `<div class=\"modal fade\" id=\"importmodal\" tabindex=\"-1\" aria-labelledby=\"importmodalLabel\"\n                 aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"importmodalLabel\">\n                                ${M.util.get_string('importcontent', 'mod_interactivevideo')}</h5>\n                                <button type=\"button\" class=\"btn p-0 border-0\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary border-0\" data-dismiss=\"modal\">\n                                ${M.util.get_string('cancel', 'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary border-0\" id=\"importcontentbutton\">\n                                ${M.util.get_string('import', 'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(importmodal);\n                $('#importmodal').modal('show');\n\n                $('#importmodal').on('hidden.bs.modal', function() {\n                    $('#importmodal').remove();\n                });\n\n                $('#importmodal').off('shown.bs.modal').on('shown.bs.modal', function() {\n                    // Make the modal draggable.\n                    $('#importmodal .modal-dialog').draggable({\n                        handle: \".modal-header\"\n                    });\n                    // Render the course select dropdown.\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'get_taught_courses',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            userid: userid\n                        },\n                        success: function(data) {\n                            let courses = JSON.parse(data);\n                            // Sort courses by name.\n                            courses.sort((a, b) => a.fullname.localeCompare(b.fullname));\n                            let courseSelect = `<select class=\"custom-select w-100\" id=\"importcourse\">`;\n                            courses.forEach(course => {\n                                courseSelect += `<option value=\"${course.id}\">${course.fullname} (${course.shortname})</option>`;\n                            });\n                            courseSelect += `</select>`;\n                            let selectfield = `<div class=\"form-group selectcourse\">\n                            <label class=\"font-weight-bold\" for=\"importcourse\">\n                            ${M.util.get_string('selectcourse', 'mod_interactivevideo')}</label>\n                            ${courseSelect}</div>`;\n                            $('#importmodal .modal-body').append(selectfield);\n                            // Default current course.\n                            $('#importmodal #importcourse').val(course);\n                            $('#importmodal #importcourse').trigger('change');\n                        }\n                    });\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcourse', function() {\n                $(`#importmodal .selectcm, #importmodal .select-interaction`).remove();\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_cm_by_courseid',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: $(this).val()\n                    },\n                    success: function(data) {\n                        let cms = JSON.parse(data);\n                        cms.sort((a, b) => a.name.localeCompare(b.name));\n                        let cmSelect = `<select class=\"custom-select w-100\" id=\"importcm\">\n                        <option value=\"\">${M.util.get_string('select', 'mod_interactivevideo')}</option>`;\n                        cms.forEach(cm => {\n                            cmSelect += `<option value=\"${cm.id}\" ${cm.id == interaction ? 'disabled' : ''}>${cm.name}</option>`;\n                        });\n                        cmSelect += `</select>`;\n                        let selectfield = `<div class=\"form-group selectcm\">\n                        <label for=\"importcm\" class=\"font-weight-bold\">\n                        ${M.util.get_string('selectactivity', 'mod_interactivevideo')}</label>\n                        ${cmSelect}</div>`;\n                        $(`#importmodal .selectcourse`).after(selectfield);\n                    }\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcm', async function() {\n                $(`#importmodal .select-interaction`).remove();\n                $(`#importmodal #importcm`).after(`<div class=\"select-interaction py-3\">\n                    <iframe src=\"${M.cfg.wwwroot + '/mod/interactivevideo/view.php?i=' + $(this).val()}&embed=1&preview=1\"\n                    frameborder=0 width=\"100%\" height=\"500\" class=\"loader\"></iframe></div>`);\n                let interactions = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: $(this).val(),\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n                interactions = JSON.parse(interactions);\n                interactions = interactions.filter(x => x.type != 'skipsegment');\n                if (interactions.length == 0) {\n                    $(`#importmodal .select-interaction`).append(`<div class=\"alert alert-warning mt-3\">\n                        ${M.util.get_string('nocontent', 'mod_interactivevideo')}</div>`);\n                    return;\n                }\n\n                $(`#importmodal .select-interaction`).append(`<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\n                     no-pointer\">\n                     <div class=\"input-group-prepend border-0 invisible\">\n                            <label class=\"input-group-text bg-white\">\n                                <input type=\"checkbox\"/>\n                                <i class=\"bi bi-plus ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control border-0 font-weight-bold\"\n                 value=\"${M.util.get_string('title', 'mod_interactivevideo')}\">\n                <input type=\"text\" class=\"form-control border-0 font-weight-bold\" style=\"max-width: 50px;\"\n                value=\"XP\">\n                <input type=\"text\" style=\"max-width: 150px;\" value=\"${M.util.get_string('timestamp', 'mod_interactivevideo')}\"\n                 class=\"form-control border-0 font-weight-bold\"></div>`);\n\n                interactions = interactions.map(int => {\n                    // Get the icon and check if the interaction is out of range (start, end time);\n                    const ctype = contentTypes.find(y => y.name === int.type);\n                    int.prop = JSON.stringify(ctype);\n                    int.icon = ctype.icon;\n                    if ((int.timestamp > end || int.timestamp < start) && int.timestamp > 0) {\n                        int.outside = true;\n                    } else {\n                        int.outside = false;\n                    }\n                    // Check if the interaction can be added (e.g. annotation content type can only be added once per activity);\n                    if (!ctype.allowmultiple && annotations.find(x => x.type == int.type)) {\n                        int.disabled = true;\n                    }\n                    return int;\n                });\n\n                interactions.sort((a, b) => a.timestamp - b.timestamp);\n                interactions.forEach(int => {\n                    const inputgroup = `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\"\n                     data-id=\"${int.id}\">\n                        <div class=\"input-group-prepend\">\n                            <label class=\"input-group-text\">\n                                <input type=\"checkbox\" ${int.disabled ? 'disabled' : ''}/>\n                                <i class=\"${int.icon} ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control name\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 value=\"${int.title}\">\n                <input type=\"text\" style=\"max-width: 50px;\" ${int.timestamp < 0 || int.hascompletion == 0 ? 'readonly' : ''}\n                 class=\"form-control xp\" value=\"${int.xp}\">\n                <input type=\"text\" placeholder=\"00:00:00\" style=\"max-width: 150px;\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 class=\"form-control timestamp-input ${int.outside ? 'is-invalid' : ''}\"\n                value=\"${int.timestamp < 0 ? int.timestamp :\n                            convertSecondsToHMS(int.timestamp, false, false)}\"></div>`;\n                    $(`#importmodal .select-interaction`).append(inputgroup);\n                });\n\n                $(document).off('click', '#importmodal #importcontentbutton').on('click', '#importmodal #importcontentbutton',\n                    async function(e) {\n                        e.preventDefault();\n                        let $selected = $(`#importmodal .select-interaction input[type=\"checkbox\"]:checked`);\n                        let selectedInt = [];\n                        $selected.each(function() {\n                            let $row = $(this).closest('.input-group');\n                            const name = $row.find('.name').val();\n                            if (name.trim() == '') {\n                                return;\n                            }\n                            let timestamp = $row.find('.timestamp-input').val();\n                            if (timestamp == '') {\n                                return;\n                            }\n\n                            if (Number(timestamp) < 0) {\n                                timestamp = Number(timestamp);\n                            } else {\n                                const parts = timestamp.split(':');\n                                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                                if (annotations.find(x => x.timestamp == timestamp)) {\n                                    return;\n                                }\n                            }\n                            let id = $row.data('id');\n                            let int = interactions.find(x => x.id == id);\n                            int.title = name;\n                            int.timestamp = timestamp;\n                            let xp = Number($row.find('.xp').val());\n                            if (isNaN(xp) || xp == '') {\n                                xp = 0;\n                            }\n                            int.xp = xp;\n                            selectedInt.push(int);\n                        });\n                        if (selectedInt.length == 0) {\n                            addNotification(M.util.get_string('selectinteraction', 'mod_interactivevideo'), 'danger');\n                            return;\n                        } else {\n                            let interactions = await $.ajax({\n                                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                                method: \"POST\",\n                                dataType: \"text\",\n                                data: {\n                                    action: 'import_annotations',\n                                    sesskey: M.cfg.sesskey,\n                                    contextid: M.cfg.contextid,\n                                    annotations: JSON.stringify(selectedInt),\n                                    tocourse: M.cfg.courseId,\n                                    fromcourse: $('#importcourse').val(),\n                                    tocm: interaction,\n                                    fromcm: $('#importcm').val(),\n                                    module: coursemodule\n                                }\n                            });\n                            interactions = JSON.parse(interactions);\n\n                            // Dismiss modal.\n                            $('#importmodal').modal('hide');\n\n                            // Add the imported annotations to the current annotations.\n                            annotations = annotations.concat(interactions);\n                            dispatchEvent('annotationupdated', {\n                                annotations: annotations,\n                                action: 'import'\n                            });\n\n                            // Get interaction that allowmultiple false and init each one.\n                            interactions.forEach(int => {\n                                if (!int.allowmultiple) {\n                                    ctRenderer[int.type].init();\n                                }\n                            });\n                        }\n                    });\n            });\n\n            // Implement content type filter.\n            $(document).on('keyup', '#contentmodal #contentsearch', function() {\n                let search = $(this).val().toLowerCase();\n\n                $('#addcontentdropdown .dropdown-item').removeClass('d-none').addClass('d-flex');\n\n                if (search == '') {\n                    return;\n                }\n\n                $('#contentmodal #addcontentdropdown .dropdown-item').each(function() {\n                    let text = $(this).find('.contenttype-title').text().toLowerCase();\n                    if (text.includes(search)) {\n                        $(this).addClass('d-flex').removeClass('d-none');\n                    } else {\n                        $(this).addClass('d-none').removeClass('d-flex');\n                    }\n                });\n            });\n\n            // Implement fast forward and rewind.\n            const fastforward = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time >= end) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time += 1;\n                } else {\n                    time += 0.2;\n                }\n                if (time > end) {\n                    time = end;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastforward(e);\n            });\n\n            let fastForwardInterval;\n            $(document).on('mousedown', '#fast-forward', async function(e) {\n                e.preventDefault();\n                fastForwardInterval = setInterval(async() => {\n                    fastforward(e);\n                    if (await player.getCurrentTime() >= end) {\n                        clearInterval(fastForwardInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#fast-forward', function() {\n                clearInterval(fastForwardInterval);\n            });\n\n            const rewind = async(e) => {\n                let time = await player.getCurrentTime();\n                if (time <= start) {\n                    return;\n                }\n                if (e.ctrlKey || e.metaKey) {\n                    time -= 1;\n                } else {\n                    time -= 0.2;\n                }\n                if (time < start) {\n                    time = start;\n                }\n                await player.seek(time);\n            };\n            $(document).on('click', '#rewind', async function(e) {\n                e.preventDefault();\n                rewind(e);\n            });\n\n            let rewindInterval;\n            $(document).on('mousedown', '#rewind', async function(e) {\n                e.preventDefault();\n                rewindInterval = setInterval(async() => {\n                    rewind(e);\n                    if (await player.getCurrentTime() <= start) {\n                        clearInterval(rewindInterval);\n                    }\n                }, 200);\n            });\n\n            $(document).on('mouseup mouseleave', '#rewind', function() {\n                clearInterval(rewindInterval);\n            });\n\n            // Remove all event listeners before leaving the page.\n            window.addEventListener('beforeunload', function() {\n                $(document).off();\n                cancelAnimationFrame(onPlayingInterval);\n            });\n        }\n    };\n});"],"names":["define","$","addToast","Notification","quickform","player","totaltime","currentTime","dispatchEvent","ctRenderer","playerReady","$loader","replaceProgressBars","percentage","css","renderVideoNav","async","annos","start","length","empty","remove","forEach","render","x","type","renderItemOnVideoNavigation","time","getCurrentTime","init","url","coursemodule","interaction","course","end","coursecontextid","displayoptions","userid","posterimage","extendedcompletion","addNotification","msg","add","Number","isNaN","contentTypes","annotations","convertSecondsToHMS","s","dynamic","rounded","Math","round","hours","floor","minutes","seconds","parseFloat","toFixed","activeid","renderAnnotationItems","removeClass","live","addClass","html","M","util","get_string","sort","a","b","timestamp","item","listItem","clone","renderEditItem","xp","filter","map","reduce","text","activeAnno","find","id","postEditCallback","getAnnotations","getItems","ajax","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","courseContextId","getContentTypes","when","done","items","contenttypes","JSON","parse","y","name","getRenderers","Promise","resolve","count","require","amdmodule","Type","isEditMode","prop","author","authorlink","description","stringify","editMode","validateTimestampFormat","fld","existing","test","val","validateTimeStartEnd","checkduration","checkexisting","checkskipsegment","parts","split","message","skip","annotation","title","runInteraction","modal","not","pause","updateTime","duration","toUpdatetime","cmid","courseid","onReady","MAX_SAFE_INTEGER","isPaused","seek","unMute","audio","passwordprotected","support","playbackrate","quality","t","ratio","usefixedratio","aspectratio","relWidth","width","startPercentage","newStart","append","i","marker","setCaption","e","onEnded","toggleClass","focus","currentAnnotation","tooltip","setTimeout","onSeek","onPlayingInterval","visualized","onPlaying","visualizer","intervalFunction","thisTime","isPlaying","isEnded","cancelAnimationFrame","stop","scrollBar","document","getElementById","rect","getBoundingClientRect","left","right","window","innerWidth","scrollIntoView","behavior","block","inline","frequency","useAnimationFrame","animate","requestAnimationFrame","onPause","VideoPlayer","load","IVPLAYER","on","detail","cacheCleared","success","originalEvent","updated","push","status","removeAttr","attr","target","is","ctype","this","contenttype","hastimestamp","allowmultiple","addAnnotation","preventDefault","closest","editAnnotation","cloneAnnotation","deleteCancelPromise","then","deleteAnnotation","catch","saveCancel","theAnnotation","play","stopImmediatePropagation","offsetX","trigger","hide","siblings","initialValue","key","show","hasClass","field","value","appendTimestampMarker","formattedTime","targetAnnotation","draggable","resizable","event","ui","position","skipduration","abs","originalPosition","originalSize","size","direction","off","height","localStorage","setItem","drag","offset","playerWidth","getItem","timelineHeight","$scrollbar","parentOffset","relX","pageX","fadeIn","fadeOut","currentLevel","newLevel","parseInt","timelineElement","scrollWidth","clientWidth","ctrlKey","metaKey","deltaY","addEventListener","scrollLeft","style","scrollHeight","draftAnnotations","confirmationMessage","returnValue","rate","setRate","getQualities","currentQuality","qualities","qualitiesLabel","q","dropdown","setQuality","timelineWrapper","resizeObserver","ResizeObserver","observe","importmodal","handle","courses","fullname","localeCompare","courseSelect","shortname","selectfield","cms","cmSelect","cm","after","interactions","int","icon","outside","disabled","inputgroup","hascompletion","$selected","selectedInt","each","$row","trim","tocourse","courseId","fromcourse","tocm","fromcm","module","concat","search","toLowerCase","includes","fastforward","fastForwardInterval","setInterval","clearInterval","rewind","rewindInterval"],"mappings":";;;;;;;AAuBAA,6CAAO,CAAC,SACJ,aACA,oBACA,wBACA,cACA,0BAED,SAASC,EAAGC,SAAUC,kBAA+BC,eAEhDC,OACAC,UACAC,aAJ+BC,cAACA,oBAChCC,WAAa,GAIbC,aAAc,EACdC,QAAUV,EAAE,6BAMVW,oBAAuBC,aAEzBA,YADAA,WAAaA,WAAa,EAAI,EAAIA,YACR,IAAM,IAAMA,WACtCZ,EAAE,wBAAwBa,IAAI,QAASD,WAAa,KACpDZ,EAAE,+BAA+Ba,IAAI,OAAQD,WAAa,MASxDE,eAAiBC,eAAeC,MAAOC,MAAOZ,cAC5B,GAAhBW,MAAME,mBACNlB,EAAE,iBAAiBmB,QAIvBnB,EAAE,iBAAiBmB,QACnBnB,EAAE,wCAAwCoB,SAC1CJ,MAAMK,SAAQN,MAAAA,UACJO,OAASd,WAAWe,EAAEC,YACtBF,OAAOG,4BAA4BF,YAGvCG,WAAatB,OAAOuB,iBAG1BhB,qBADoBe,KAAOT,OAASZ,UAAY,KAEhDE,cAAc,0BAA2B,aAAgBS,eAGtD,CAgBHY,KAAM,SAASC,IAAKC,aAAcC,YAAaC,OAAQf,MAAOgB,IAAKC,qBAC/DV,4DAAO,KAAMW,sDAAgBC,8CAAQC,qDAAaC,4DAElDnC,kBAOMoC,gBAAkB,SAACC,SAAKhB,4DAAO,OACjCvB,SAASwC,IAAID,IAAK,CACdhB,KAAMA,QAIdP,MAAQyB,OAAOzB,OACX0B,MAAM1B,SACNA,MAAQ,GAGZgB,IAAMS,OAAOT,KACTU,MAAMV,OACNA,IAAM,UAINW,aADAC,YAAc,SAUZC,oBAAsB,SAACC,OAAGC,gEAAiBC,mEACzCA,UACAF,EAAIG,KAAKC,MAAMJ,QAEfK,MAAQF,KAAKG,MAAMN,EAAI,MACvBO,QAAUJ,KAAKG,OAAON,EAAY,KAARK,OAAgB,IAC1CG,QAAUR,EAAY,KAARK,MAAyB,GAAVE,eAC7BL,SAAWM,QAAU,OACrBA,QAAU,EACVD,UACIA,QAAU,KACVA,QAAU,EACVF,UAGJE,QAAU,KACVA,QAAU,IAAMA,SAIhBC,QADAN,QACUC,KAAKC,MAAMI,SAEXC,WAAWD,SAASE,QAAQ,GAGtCF,QAAU,KACVA,QAAU,IAAMA,SAGhBP,SAAoB,GAATI,MACJE,QAAU,IAAMC,SAGnBH,MAAQ,GAAK,IAAMA,MAAQA,OAAS,IAAME,QAAU,IAAMC,aAGlEG,SAAW,WAOTC,sBAAyBd,iBAC3B7C,EAAE,8BAA8BoB,SAChCpB,EAAE,oBAAoBmB,QAAQyC,YAAY,oDACtCxD,OAAOyD,YACP7D,EAAE,qBAAqB8D,SAAS,0BAChC9D,EAAE,oBAAoB+D,eACfC,EAAEC,KAAKC,WAAW,sCAAuC,0BAC3DJ,SAAS,uDAGlBhD,eAAe+B,YAAa5B,MAAOZ,WACT,GAAtBwC,YAAY3B,mBACZlB,EAAE,oBAAoB+D,eAAQC,EAAEC,KAAKC,WAAW,2BAA4B,0BACvEJ,SAAS,oDAGlBjB,YAAYsB,MAAK,SAASC,EAAGC,UAClB3B,OAAO0B,EAAEE,WAAa5B,OAAO2B,EAAEC,cAG1CzB,YAAYxB,SAAQ,SAASkD,UACrBC,SAAWxE,EAAE,wBAAwByE,QACzCjE,WAAW+D,KAAK/C,MAAMkD,eAAe7B,YAAa2B,SAAUD,aAG5DI,GAAK9B,YAAY+B,QAAOrD,GAAKA,EAAEoD,KAAIE,KAAItD,GAAKmB,OAAOnB,EAAEoD,MAAKG,QAAO,CAACV,EAAGC,IAAMD,EAAIC,GAAG,MACtFrE,EAAE,YAAY+E,KAAKJ,IAEfjB,SAAU,OACJsB,WAAanC,YAAYoC,MAAK1D,GAAKA,EAAE2D,IAAMxB,WAC7CsB,YACAxE,WAAWwE,WAAWxD,MAAM2D,iBAAiBH,cASnDI,eAAiB,WACbC,SAAWrF,EAAEsF,KAAK,CACpBzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,YACRC,QAAS7B,EAAEuB,IAAIM,QACfX,GAAInD,YACJ+D,UAAW9B,EAAEuB,IAAIO,UACjB5D,gBAAiB8B,EAAEuB,IAAIQ,mBAIzBC,gBAAkBhG,EAAEsF,KAAK,CAC3BzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,uBACRC,QAAS7B,EAAEuB,IAAIM,QACfC,UAAW9B,EAAEuB,IAAIO,UACjB5D,gBAAiB8B,EAAEuB,IAAIQ,mBAI/B/F,EAAEiG,KAAKZ,SAAUW,iBAAiBE,MAAKnF,eAAeoF,MAAOC,cACzDvD,YAAcwD,KAAKC,MAAMH,MAAM,IAC3B/F,OAAOyD,OACPhB,YAAc,IAElBD,aAAeyD,KAAKC,MAAMF,aAAa,IAEvCvD,YAAcA,YAAY+B,QAAOrD,GAAKqB,aAAaqC,MAAKsB,GAAKA,EAAEC,OAASjF,EAAEC,eACpEiF,aAAe,IAAIC,SAASC,cAC1BC,MAAQ,EACZhE,aAAavB,SAAQE,IACjBsF,QAAQ,CAAC,GAAKtF,EAAEuF,YAAY,SAASC,MACjCvG,WAAWe,EAAEiF,MAAQ,IAAIO,KAAK3G,OAAQyC,YAAad,YAC/CC,OAAQ,EAAG,EAAG,EAAG,EAAGR,KAAM,EAAGnB,UAAWY,MAAOgB,IAAKV,EAAGO,aACvD,KAAMK,eAAgB,KAAMG,mBAAoB,CAChD0E,YAAY,IAEhBJ,QACApG,WAAWe,EAAEiF,MAAM5E,OACfgF,OAAShE,aAAa1B,QACtByF,QAAQnG,qBAKxBqC,YAAYgC,KAAItD,QACR0F,KAAOrE,aAAaqC,MAAKsB,GAAKA,EAAEC,OAASjF,EAAEC,qBAExCyF,KAAKC,cACLD,KAAKE,kBACLF,KAAKG,YACZ7F,EAAE0F,KAAOZ,KAAKgB,UAAUJ,MACxB1F,EAAE+F,UAAW,EACN/F,KAEXf,iBAAmBiG,aACnB9C,sBAAsBd,iBAWxB0E,wBAA0B,CAACjD,UAAWkD,IAAKC,aAC/B,mDACHC,KAAKpD,aACZ/B,gBAAgByB,EAAEC,KAAKC,WAAW,yBAA0B,wBAAyB,UACjFuD,SACAzH,EAAEwH,KAAKG,IAAIF,UAEXzH,EAAEwH,KAAKG,IAAI7E,oBAAoB7B,OAAO,GAAO,KAE1C,GAgBT2G,qBAAuB,CAACtD,UAAWkD,IAAKC,SAAUlE,QAASsE,cAC7DC,cAAeC,0BAETC,MAAQ1D,UAAU2D,MAAM,QAC9B3D,UAA+B,KAAnB5B,OAAOsF,MAAM,IAAgC,GAAnBtF,OAAOsF,MAAM,IAAWtF,OAAOsF,MAAM,IAEvEH,gBACIvD,UAAYrC,KAAOqC,UAAYrD,OAAO,OAChCiH,QAAUlE,EAAEC,KAAKC,WAAW,mCAAoC,uBAAwB,OACjFpB,oBAAoB7B,OAAO,GAAM,OACnC6B,oBAAoBb,KAAK,GAAM,YAE1CM,gBAAgB2F,QAAS,UACrBT,SACAzH,EAAEwH,KAAKG,IAAIF,UAEXzH,EAAEwH,KAAKG,IAAI7E,oBAAoB7B,OAAO,GAAO,KAEzC,KAKZ6G,eACIjF,YAAYoC,MAAK1D,GAAKA,EAAE+C,WAAaA,aAAcA,WAAaf,eAChEhB,gBAAgByB,EAAEC,KAAKC,WAAW,2BAA4B,wBAAyB,UACnFuD,SACAzH,EAAEwH,KAAKG,IAAIF,UAEXzH,EAAEwH,KAAKG,IAAI7E,oBAAoB7B,OAAO,GAAO,KAEzC,KAKZ8G,iBAAkB,OAEZI,KADetF,YAAY+B,QAAQwD,YAAkC,eAAnBA,WAAW5G,OACzCyD,MAAK1D,GAAKmB,OAAOnB,EAAE+C,WAAa5B,OAAO4B,YAC1D5B,OAAOnB,EAAE8G,OAAS3F,OAAO4B,gBAC5B6D,YACA5F,gBAAgByB,EAAEC,KAAKC,WAAW,qCAAsC,uBAAwB,OACnFpB,oBAAoBqF,KAAK7D,WAAW,GAAM,OAC5CxB,oBAAoBqF,KAAKE,OAAO,GAAM,KAC7C,UACAZ,SACAzH,EAAEwH,KAAKG,IAAIF,UAEXzH,EAAEwH,KAAKG,IAAI7E,oBAAoB7B,OAAO,GAAO,KAEzC,SAITqD,WAOLgE,eAAkBF,aAEpBpI,EAAE,qBAAqBuI,MAAM,QAC7BvI,EAAE,YAAYwI,IAAI,2BAA2BA,IAAI,WAAWpH,SAC5DpB,EAAE,eAAeoB,SACjBhB,OAAOqI,QACcjI,WAAW4H,WAAW5G,MAC9B8G,eAAeF,aAQ1BM,WAAa3H,MAAAA,WACf4H,SAAWjG,OAAOiG,cACdC,cAAe,SACd3G,KAAc,GAAPA,MACR2G,cAAe,KAEd3H,OAASA,OAAS0H,UAAY1H,MAAQ,GAAKA,OAAS0H,YACrDC,cAAe,GAEnB3H,MAAQA,MAAQ0H,SAAW,EAAI1H,MAC3B2H,oBACM5I,EAAEsF,KAAK,CACTzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,mBACRC,QAAS7B,EAAEuB,IAAIM,QACfgD,KAAM/G,aACNgH,SAAU9G,OACVkD,GAAInD,YACJd,MAAOA,MACPgB,IAAMA,KAAc,GAAPA,IAAsBA,IAAX0G,SACxB7C,UAAW9B,EAAEuB,IAAIO,aAKtB,CAAC7E,MAAAA,MAAOgB,IADfA,KAAOA,KAAc,GAAPA,KAAYA,IAAM0G,SAAWA,SAAW1G,MAOpD8G,QAAUhI,UACRX,OAAOyD,OACP5B,IAAMS,OAAOsG,kBAEjB5I,OAAOqI,kBACgBrI,OAAO6I,kBAErB7I,OAAOyD,YACFzD,OAAO8I,KAAKjI,YAEtB8H,UAGJ3I,OAAO+I,SACH/I,OAAOgJ,OACPpJ,EAAE,sBAAsB8D,SAAS,YAEG,GAApC3B,eAAekH,oBAEfrJ,EAAE,iBAAiB4D,YAAY,UAC/B5D,EAAE,gBAAgB4D,YAAY,8BAEf,SAAfxD,OAAOoB,MACW,cAAfpB,OAAOoB,MACQ,WAAfpB,OAAOoB,MACQ,YAAfpB,OAAOoB,MACVxB,EAAE,gBAAgB8D,SAAS,cAGI,GAA/B1D,OAAOkJ,QAAQC,aACfvJ,EAAE,eAAeoB,SAEjBpB,EAAE,eAAe4D,YAAY,UAGH,GAA1BxD,OAAOkJ,QAAQE,QACfxJ,EAAE,kBAAkBoB,SAEpBpB,EAAE,kBAAkB4D,YAAY,cAGhC6F,EAAIrJ,OAAOC,YAEbY,MAAAA,MAAOgB,IAAAA,WAAayG,WAAWe,IAEjCpJ,UAAY4B,IAAMhB,UAEdyI,MAAQ,GAAK,EACZvH,eAAewH,eAAiD,GAAhCxH,eAAewH,gBAChDD,MAAQtJ,OAAOwJ,aAEnB5J,EAAE,kBAAkBa,IAAI,iBAAmB,EAAI6I,MAAS,IAAM,KAE9DjJ,aAAc,EACdT,EAAE,sBAAsB4D,YAAY,UAGpC5D,EAAE,qCAAqCa,IAAI,oBACnB,OAASwB,YAAc,sBACxB,8BACE,cAEzBrC,EAAE,+BAA+B+E,KAAKjC,oBAAoBb,KAAK,IAC/DjC,EAAE,kCAAkC+E,KAAKjC,oBAAoB7B,OAAO,UAE9DqC,QAAUJ,KAAKG,MAAMhD,UAAY,IACvCL,EAAE,2BAA2Ba,IAAI,QAAoB,IAAVyC,QAAiB,YACtDuG,SAAW7J,EAAE,mBAAmB8J,QACtC9J,EAAE,+CAA+Ca,IAAI,QAASgJ,SAAW,UACrEE,gBAAkB,EAClBC,SAAW/I,MACXA,MAAQ,IAAM,IACd8I,iBAAmB,GAAM9I,MAAQ,IAAOZ,UAAY,IACpD2J,SAAW/I,OAAS,GAAMA,MAAQ,IAClCjB,EAAE,uCAAuCiK,yJAGxC,IAAIC,EAAIF,SAAUE,GAAKjI,IAAKiI,GAAK,GAAI,KAClCtJ,YAAesJ,EAAIF,UAAY3J,UAAY,IAAO0J,gBAClDI,OAAS,GAGTA,OADAD,GAAK,KACIhH,KAAKG,MAAM6G,EAAI,MAAQ,IAAMhH,KAAKG,MAAO6G,EAAI,KAAQ,IAAM,IAE3DhH,KAAKG,MAAM6G,EAAI,IAAM,IAElClK,EAAE,mBAAmBiK,qGACDrJ,+DAAsDuJ,wBAC1EnK,EAAE,sBAAsBiK,wGACDrJ,0BAGvBqB,IAAM,IAAM,GACZjC,EAAE,uCAAuCiK,0JAMzC7J,OAAOgK,WAAW,IACpB,MAAOC,IAITrK,EAAE,+BAA+Ba,IAAI,OAAQ,GAE7CuE,kBAMEkF,QAAU,KACZlK,OAAOqI,QACPzI,EAAE,cAAciF,KAAK,KAAKrB,YAAY,iBAAiBE,SAAS,gBAAgByG,YAAY,cAE5FvK,EAAE,kBAAkBiK,+YAIpBjK,EAAE,wBAAwBa,IAAI,QAAS,QACvCb,EAAE,+BAA+Ba,IAAI,OAAQ,QAE7Cb,EAAE,qBAAqBwK,cAGjBC,kBAAoB5H,YAAYoC,MAAMmD,YAAeA,WAAW9D,WAAarC,MAC/EwI,oBACAzK,EAAE,uBAAuB4D,YAAY,UACrC5D,wBAAiByK,kBAAkBvF,UAAQpB,SAAS,UAEpD9D,EAAE,mCAAqCyK,kBAAkBvF,GAAK,YAAYwF,QAAQ,QAClFC,YAAW,WACP3K,EAAE,mCAAqCyK,kBAAkBvF,GAAK,YAAYwF,QAAQ,UACnF,OASLE,OAAS7J,eAAe0I,OACrBhJ,oBAIDgJ,EADAA,EACI/G,OAAO+G,SAEDrJ,OAAOuB,kBAEbV,OAASwI,EAAIxH,KACjBjC,EAAE,eAAeoB,eAEfR,YAAc6I,EAAIxI,OAAUZ,UAAa,IAC/CL,EAAE,+BAA+Ba,IAAI,OAAQD,WAAa,KAC1DZ,EAAE,kCAAkC+E,KAAKjC,oBAAoB2G,GAAG,IAChElJ,cAAc,aAAc,MAASkJ,SAGrCoB,kBACAC,YAAa,QAIXC,UAAYhK,aACdf,EAAE,yBAAyBwI,IAAI,WAAWpH,SAC1CpB,EAAE,cAAciF,KAAK,KAAKrB,YAAY,gBAAgBE,SAAS,iBAAiBF,YAAY,cACxFxD,OAAOgJ,QAAU0B,aACjB1K,OAAO4K,aACPF,YAAa,GAEb1K,OAAOyD,kBAGLoH,iBAAmBlK,qBACjBmK,eAAiB9K,OAAOuB,uBACtBwJ,gBAAkB/K,OAAO+K,YACzBC,cAAgBhL,OAAOgL,cACxBD,sBACDE,qBAAqBR,sBAIrBK,SAAWjK,cACLb,OAAO8I,KAAKjI,OAClBiK,SAAWjK,OAGXiK,UAAYjJ,KAAOmJ,eACnBhL,OAAOkL,KAAKrJ,KACZoJ,qBAAqBR,wBACrBP,UAGJ/J,cAAc,aAAc,MAAS2K,WACrClL,EAAE,kCAAkC+E,KAAKjC,oBAAoBoI,UAAU,QACnEtK,YAAcsK,SAAWjK,OAAUZ,UAAa,IACpDL,EAAE,wBAAwBa,IAAI,QAASD,WAAa,KACpDZ,EAAE,+BAA+Ba,IAAI,OAAQD,WAAa,WAGpD2K,UAAYC,SAASC,eAAe,aAEpCC,KAAOH,UAAUI,yBACnBD,KAAKE,KAAO,GAAKF,KAAKG,MAAQC,OAAOC,aACrCR,UAAUS,eAAe,CAACC,SAAU,UAAWC,MAAO,SAAUC,OAAQ,iBAItE1B,kBAAoB5H,YAAYoC,MAAK1D,GAAM2J,SAAW9K,OAAOgM,WAAc7K,EAAE+C,WAC3E4G,SAAW9K,OAAOgM,WAAc7K,EAAE+C,YACtCmG,oBACAzK,EAAE,uBAAuB4D,YAAY,UACrC5D,wBAAiByK,kBAAkBvF,UAAQpB,SAAS,UACpD9D,EAAE,mCAAqCyK,kBAAkBvF,GAAK,YAAYwF,QAAQ,QAClFC,YAAW,WACP3K,EAAE,mCAAqCyK,kBAAkBvF,GAAK,YAAYwF,QAAQ,UACnF,UAKHvC,KADetF,YAAY+B,QAAQwD,YAAkC,eAAnBA,WAAW5G,OACzCyD,MAAK1D,GAAKmB,OAAOnB,EAAE+C,WAAa5B,OAAOwI,WACxDxI,OAAOnB,EAAE8G,OAAS3F,OAAOwI,YAC5B/C,aACM/H,OAAO8I,KAAKxG,OAAOyF,KAAKE,QAE9BzH,YAAcuH,KAAKE,MAAQpH,OAASZ,UAAY,IAChDM,oBAAoBC,iBAGxBR,OAAOiM,kBAAmB,OACpBC,QAAUvL,gBACYX,OAAO+K,cAE3BF,mBACAJ,kBAAoB0B,sBAAsBD,WAGlDzB,kBAAoB0B,sBAAsBD,aACvC,OACqBlM,OAAO+K,aAE3BF,qBAQNuB,QAAU,KACZnB,qBAAqBR,mBACrB7K,EAAE,cAAciF,KAAK,KAAKrB,YAAY,iBAAiBE,SAAS,gBAAgByG,YAAY,eAIhG1D,QAAQ,CAAC,+BAAiCrF,OAAO,SAASiL,aACd,GAApCtK,eAAekH,oBAEfrJ,EAAE,gBAAgB8D,SAAS,6BAC3B9D,EAAE,sBAAsB4D,YAAY,WAExCxD,OAAS,IAAIqM,YACbrM,OAAOsM,KACH7K,IACAZ,MACAgB,IACA,cACmB,oBAC0C,GAApCE,eAAekH,gCACpB,IAGxByC,OAAOa,SAAWvM,UAGtBJ,EAAEwL,UAAUoB,GAAG,kBAAkB,WAC7B7D,aAGJ/I,EAAEwL,UAAUoB,GAAG,mBAAmB,WAC9BJ,aAGJxM,EAAEwL,UAAUoB,GAAG,oBAAoB,WAC/B7B,eAGJ/K,EAAEwL,UAAUoB,GAAG,kBAAkB,WAC7BtC,aAGJtK,EAAEwL,UAAUoB,GAAG,iBAAiB,SAASvC,GACrCO,OAAOP,EAAEwC,OAAOnL,SAGpB1B,EAAEwL,UAAUoB,GAAG,kBAAkB,WAC7BrK,gBAAgByB,EAAEC,KAAKC,WAAW,6BAA8B,wBAAyB,UACzFlE,EAAE,sBAAsB4D,YAAY,UACpC5D,EAAE,iBAAiB8D,SAAS,UAC5B9D,EAAE,gBAAgB8D,SAAS,6BAC3B9D,EAAE,YAAYoB,SACdpB,EAAE,WAAW4D,YAAY,iBAIzBkJ,cAAe,EACnB9M,EAAEwL,UAAUoB,GAAG,qBAAqB,SAASvC,GACpCyC,cACD9M,EAAEsF,KAAK,CACHzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,uBACRC,QAAS7B,EAAEuB,IAAIM,QACfC,UAAW9B,EAAEuB,IAAIO,UACjB+C,KAAM9G,aAEVgL,QAAS,WACLD,cAAe,WAIrBlH,OAASyE,EAAE2C,cAAcH,OAAOjH,UACxB,UAAVA,cACA/C,YAAcwH,EAAE2C,cAAcH,OAAOhK,YACrCc,sBAAsBd,kBACtBN,gBAAgByB,EAAEC,KAAKC,WAAW,sBAAuB,wBAAyB,eAGlF+I,QAAU5C,EAAE2C,cAAcH,OAAOzE,WACvB,QAAVxC,QAA8B,SAAVA,QAA+B,aAAVA,SACzC/C,YAAcA,YAAY+B,QAAO,SAASL,aAC/BA,KAAKW,IAAM+H,QAAQ/H,OAGlC+H,QAAQhG,KAAOZ,KAAKgB,UAAUzE,aAAaqC,MAAK1D,GAAKA,EAAEiF,OAASyG,QAAQzL,QACxEqB,YAAYqK,KAAKD,SAEbvJ,SADU,OAAVkC,OACWqH,QAAQ/H,GAER,KAEfrC,YAAYgC,KAAItD,IACZA,EAAE+F,UAAW,EACN/F,KAEXoC,sBAAsBd,aACR,OAAV+C,QAA6B,SAAVA,QACnBrD,gBAAgByB,EAAEC,KAAKC,WAAW,mBAAoB,wBAAyB,WAC/ElE,wBAAiBiN,QAAQ/H,UAAQpB,SAAS,WACzB,QAAV8B,SACPrD,gBAAgByB,EAAEC,KAAKC,WAAW,qBAAsB,wBAAyB,WACjFlE,wBAAiBiN,QAAQ/H,UAAQpB,SAAS,UAC1C6G,YAAW,WACP3K,wBAAiBiN,QAAQ/H,UAAQtB,YAAY,YAC9C,OAIHf,YAAYoC,MAAK1D,GAAiB,SAAZA,EAAE4L,SACxBnN,EAAE,gCAAgCoN,WAAW,YAAYtJ,SAAS,SAElE9D,EAAE,gCAAgCqN,KAAK,WAAY,YAAYzJ,YAAY,YAKnF5D,EAAEwL,UAAUoB,GAAG,qBAAqB,SAASvC,SACnCjC,WAAaiC,EAAE2C,cAAcH,OAAOzE,WAC1C1E,SAAW,KACX1D,wBAAiBoI,WAAWlD,UAAQpB,SAAS,WAC7C6G,YAAW,WACP9H,YAAcA,YAAY+B,QAAO,SAASL,aAC/BA,KAAKW,IAAMkD,WAAWlD,MAEjCvB,sBAAsBd,aACtBN,gBAAgByB,EAAEC,KAAKC,WAAW,qBAAsB,wBAAyB,aAClF,QAIPlE,EAAEwL,UAAUoB,GAAG,QAAS,sCAAsC7L,eAAesJ,OACpE5J,sBAGLT,EAAE,sCAAsC4D,YAAY,UAEhD5D,EAAEqK,EAAEiD,QAAQC,GAAG,kBAIbC,MAAQxN,EAAEyN,MAAM9H,KAAK,QAC3BvF,OAAOqI,YACHnE,UAAYhE,mBAAqBF,OAAOuB,iBAC5C2C,UAAY5B,OAAO4B,UAAUb,QAAQ,UAC/BiK,YAAc9K,aAAaqC,MAAK1D,GAAKA,EAAEiF,MAAQgH,WACjDE,YAAYC,aAAc,IACtB9K,YAAYoC,MAAK1D,GAAKA,EAAE+C,WAAaA,wBACrC/B,gBAAgByB,EAAEC,KAAKC,WAAW,2BAA4B,wBAAyB,aAItErB,YAAY+B,QAAOrD,GAAe,eAAVA,EAAEC,OACrByD,MAAK1D,GAAKmB,OAAOnB,EAAE+C,WAAa5B,OAAOpC,cAC1DoC,OAAOnB,EAAE8G,OAAS3F,OAAOpC,2BAE5BiC,gBAAgByB,EAAEC,KAAKC,WAAW,qCAAsC,wBAAyB,UAIpGwJ,YAAYE,gBAAiB/K,YAAYoC,MAAK1D,GAAKA,EAAEC,MAAQgM,SAKlElN,YAAc,KACdE,WAAWgN,OAAOK,cAAchL,YAAayB,UAAWxC,eALpDS,gBAAgByB,EAAEC,KAAKC,WACnB,+BAAgC,uBAAwBwJ,YAAYrF,OAAQ,aAQxFrI,EAAEwL,UAAUoB,GAAG,QAAS,uBAAuB7L,eAAesJ,GAC1DA,EAAEyD,uBACIxJ,UAAYtE,EAAEyN,MAAMM,QAAQ,eAAepI,KAAK,aAChDT,GAAKlF,EAAEyN,MAAMM,QAAQ,eAAepI,KAAK,MACzC+H,YAAc1N,EAAEyN,MAAMM,QAAQ,eAAepI,KAAK,QACxDnF,WAAWkN,aAAaM,eAAenL,YAAaqC,GAAIpD,cACpDwC,iBACMlE,OAAO8I,KAAK5E,WAAW,GAEjClE,OAAOqI,WAIXzI,EAAEwL,UAAUoB,GAAG,QAAS,uBAAuB7L,eAAesJ,GAC1DA,EAAEyD,uBACI5I,GAAKlF,EAAEyN,MAAMM,QAAQ,eAAepI,KAAK,MACzC+H,YAAc1N,EAAEyN,MAAMM,QAAQ,eAAepI,KAAK,QAClDjE,WAAatB,OAAOuB,iBAC1BnB,WAAWkN,aAAaO,gBAAgB/I,GAAIxD,SAIhD1B,EAAEwL,UAAUoB,GAAG,QAAS,yBAAyB,SAASvC,GACtDA,EAAEyD,iBACF1N,OAAOqI,cACDvD,GAAKlF,EAAEyN,MAAMM,QAAQ,eAAepI,KAAK,MACzCyC,WAAavF,YAAYoC,MAAKmD,YAAcA,WAAWlD,IAAMA,SAE/DhF,aAAagO,oBACTlK,EAAEC,KAAKC,WAAW,oBAAqB,wBACvCF,EAAEC,KAAKC,WAAW,2BAA4B,wBAC9CF,EAAEC,KAAKC,WAAW,SAAU,yBAC9BiK,MAAK,IACI3N,WAAW4H,WAAW5G,MAAM4M,iBAAiBvL,YAAaqC,MAClEmJ,OAAM,SAGX,MACEnO,aAAaoO,WACTtK,EAAEC,KAAKC,WAAW,oBAAqB,wBACvCF,EAAEC,KAAKC,WAAW,2BAA4B,wBAC9CF,EAAEC,KAAKC,WAAW,SAAU,yBAC5B,kBACW1D,WAAW4H,WAAW5G,MAAM4M,iBAAiBvL,YAAaqC,WASjFlF,EAAEwL,UAAUoB,GAAG,QAAS,wBAAwB7L,eAAesJ,GAC3DA,EAAEyD,uBACIxJ,UAAYtE,EAAEyN,MAAMM,QAAQ,eAAepI,KAAK,aAGtDhF,qBADoB2D,UAAYrD,OAASZ,UAAY,WAE7BD,OAAOuB,kBACZ2C,iBACTlE,OAAO8I,KAAK5E,WAAW,GAEjClE,OAAOqI,cACDvD,GAAKlF,EAAEyN,MAAMM,QAAQ,eAAepI,KAAK,MACzC4I,cAAgB1L,YAAYoC,MAAKmD,YAAcA,WAAWlD,IAAMA,KACtEyF,YAAW,KACPrC,eAAeiG,iBAChB,QAIPvO,EAAEwL,UAAUoB,GAAG,QAAS,4BAA4B7L,eAAesJ,GAC/DA,EAAEyD,uBACIxJ,UAAYtE,EAAEyN,MAAM9H,KAAK,mBACzBvF,OAAO8I,KAAK5E,WAClBlE,OAAOoO,UAIXxO,EAAEwL,UAAUoB,GAAG,cAAe,2BAA2B7L,eAAesJ,OAC/D5J,mBAGL4J,EAAEyD,iBACFzD,EAAEoE,iCACI7N,WAAayJ,EAAEqE,QAAU1O,EAAEyN,MAAM3D,QACvCnJ,oBAAiC,IAAbC,YACpBN,YAAeM,WAAaP,UAAaY,YACnCb,OAAO8I,KAAK5I,aAClBF,OAAOqI,QACPzI,EAAE,eAAe2O,QAAQ,YAI7B3O,EAAEwL,UAAUoB,GAAG,cAAe,+BAA+B7L,eAAesJ,GACnE5J,cAGL4J,EAAEyD,iBACFzD,EAAEoE,2BACFnO,kBAAoBF,OAAOuB,iBAC3B3B,EAAE,eAAe2O,QAAQ,aAI7B3O,EAAEwL,UAAUoB,GAAG,QAAS,cAAc7L,eAAesJ,OAC5C5J,sBAGL4J,EAAEyD,uBAEoB1N,OAAO+K,YAEzB/K,OAAOqI,YACJ,OACWrI,OAAOuB,kBACZM,IACLjC,EAAE,wBAAwB2O,QAAQ,SAElCvO,OAAOoO,WAKnBxO,EAAEwL,UAAUoB,GAAG,QAAS,gBAAgB,SAASvC,GACxC5J,cAGL4J,EAAEyD,iBACF9N,EAAE,cAAc2O,QAAQ,aAI5B3O,EAAEwL,UAAUoB,GAAG,cAAe,0BAA0B,SAASvC,GAC7DA,EAAEyD,iBACFzD,EAAEoE,iCACIvJ,GAAKlF,EAAEyN,MAAM9H,KAAK,MAExB3F,mCAA4BkF,gBAAcyJ,QAAQ,YAItD3O,EAAEwL,UAAUoB,GAAG,cAAe,mBAAmB,SAASvC,MACtDA,EAAEyD,iBACFzD,EAAEoE,2BACEzO,EAAE,wBAAwBkB,OAAS,eAGjCsG,IAAMxH,EAAEyN,MAAM9H,KAAK,YACzB3F,EAAEyN,MAAMmB,OACR5O,EAAEyN,MAAMoB,SAAS,gBAAkBrH,IAAM,MAAM5D,YAAY,UAAU4G,QAAQ1G,SAAS,WAC3E,aAAP0D,KACAxH,EAAEyN,MAAMM,QAAQ,MACX9D,yFACCjG,EAAEC,KAAKC,WAAW,6BAA8B,sCAI9DlE,EAAEwL,UAAUoB,GAAG,cAAe,4BAA4B7L,eAAesJ,GACrEA,EAAEyD,iBACFzD,EAAEoE,iCACI/M,WAAatB,OAAOuB,iBAC1B3B,EAAEyN,MAAM9F,IAAI7E,oBAAoBpB,MAAM,GAAO,OAGjD1B,EAAEwL,UAAUoB,GAAG,QAAS,wBAAwB,SAASvC,GACrDrK,EAAEyN,MAAM7J,YAAY,oBACdkL,aAAe9O,EAAEyN,MAAM9H,KAAK,iBAC5BgC,IAAM3H,EAAEyN,MAAM9F,MACdH,IAAMxH,EAAEyN,MAAM9H,KAAK,YACd,IAAPgC,KACA3H,EAAEyN,MAAM3J,SAAS,cAIR,UAATuG,EAAE0E,WACF/O,EAAEyN,MAAM9F,IAAImH,cACZ9O,EAAEyN,MAAM7J,YAAY,WACpB5D,EAAEyN,MAAM3J,SAAS,UACjB9D,EAAEyN,MAAMoB,SAAS,mBAAmBG,YACpChP,EAAE,mBAAmBoB,YAIZ,SAATiJ,EAAE0E,cAEExL,WACO,aAAPiE,IAAoB,OACdQ,MAAQ8G,aAAa7G,MAAM,QACjC1E,QAA6B,KAAnBb,OAAOsF,MAAM,IAAgC,GAAnBtF,OAAOsF,MAAM,IAAWtF,OAAOsF,MAAM,KACpET,wBAAwBI,IAAK,uBAAwBmH,0BACtD9O,EAAEyN,MAAM3J,SAAS,oBAGfQ,UAAYsD,qBAAqBD,IAAK,uBAAwBmH,aAAcvL,SAC9E,GAAM,GAAM,OACE,GAAde,sBACAtE,EAAEyN,MAAM3J,SAAS,cAGrBP,QAAUe,aAGVtE,EAAEyN,MAAMwB,SAAS,wBAGjBtH,KAAOmH,oBACP9O,EAAEyN,MAAM7J,YAAY,WACpB5D,EAAEyN,MAAM3J,SAAS,eACjB9D,EAAEyN,MAAMoB,SAAS,mBAAmBG,aAGlC9J,GAAKlF,EAAEyN,MAAM9H,KAAK,MACxB3F,EAAEsF,KAAK,CACHzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,mBACRC,QAAS7B,EAAEuB,IAAIM,QACfX,GAAIA,GACJgK,MAAO1H,IACP1B,UAAW9B,EAAEuB,IAAIO,UACjBqJ,MAAc,aAAP3H,IAAqBjE,QAAUoE,KAE1CoF,QAAS,SAASpH,MACd3F,EAAE,mBAAmBoB,eACf6L,QAAU5G,KAAKC,MAAMX,MAC3BpF,cAAc,oBAAqB,CAC/B6H,WAAY6E,QACZrH,OAAQ,gBAQ5B5F,EAAEwL,UAAUoB,GAAG,OAAQ,wBAAwB,iBACrCkC,aAAe9O,EAAEyN,MAAM9H,KAAK,iBAClC3F,EAAEyN,MAAM9F,IAAImH,cACZ9O,EAAEyN,MAAM7J,YAAY,WACpB5D,EAAEyN,MAAM3J,SAAS,UACjB9D,EAAEyN,MAAMoB,SAAS,mBAAmBG,OACpChP,EAAE,mBAAmBoB,YAIzBpB,EAAEwL,UAAUoB,GAAG,QAAS,wBAAwB7L,eAAesJ,GAC3DA,EAAEyD,iBACF9N,EAAE,eAAeoB,eACXhB,OAAO8I,KAAKjI,OAClBb,OAAOoO,UAIXxO,EAAEwL,UAAUoB,GAAG,YAAa,iBAAiB,iBACnC1H,GAAKlF,EAAEyN,MAAM9H,KAAK,MACxB3F,sCAA+BkF,gBAAcyJ,QAAQ,gBAIzD3O,EAAEwL,UAAUoB,GAAG,WAAY,iBAAiB,iBAClC1H,GAAKlF,EAAEyN,MAAM9H,KAAK,MACxB3F,sCAA+BkF,gBAAcyJ,QAAQ,YACrD3O,EAAE,YAAYoB,YAIlBpB,EAAEwL,UAAUoB,GAAG,YAAa,oBAAoB,iBACtC1H,GAAKlF,EAAEyN,MAAM9H,KAAK,MACxB3F,mCAA4BkF,UAAQpB,SAAS,aAIjD9D,EAAEwL,UAAUoB,GAAG,WAAY,oBAAoB,iBACrC1H,GAAKlF,EAAEyN,MAAM9H,KAAK,MACxB3F,mCAA4BkF,UAAQtB,YAAY,aAIpD5D,EAAEwL,UAAUoB,GAAG,SAAU,4CAA4C,WACjE5M,EAAEyN,MAAM7J,YAAY,oBACdoE,MAAQhI,EAAEyN,MAAM9F,MAAMM,MAAM,KAC5B1E,QAA6B,KAAnBb,OAAOsF,MAAM,IAAgC,GAAnBtF,OAAOsF,MAAM,IAAWtF,OAAOsF,MAAM,QAC1ET,wBAAwBvH,EAAEyN,MAAM9F,MAAO8F,kBACxCzN,EAAEyN,MAAM3J,SAAS,eAMH,GAFA8D,qBAAqB5H,EAAEyN,MAAM9F,MAAO8F,KAAM,WAAYlK,SAAS,GAAM,GAAO,IAG1FvD,EAAEyN,MAAM3J,SAAS,uBAKnBsL,sBAAwB,CAAC7L,QAASN,iBAC9BoM,cAAgBvM,oBAAoBS,SAAS,EAAMN,SACzDjD,EAAE,eAAeiK,yHAC6CoF,gCAGlErP,EAAEwL,UAAUoB,GAAG,2BAA2B,WACtC5M,EAAE,6CAA6C0K,QAAQ,UACvC,mBACC,kBAGb4E,iBAAmB,SAGnBtP,EAAE,qEAAqEuP,UAAU,WACjFvP,EAAE,qEAAqEwP,UAAU,WACnF,MAAOnF,IAGTrK,EAAE,4CAA4CuP,UAAU,MAC5C,UACCxO,uBACkBX,OAAO6I,YAE1B7I,OAAOqI,QAEX2G,sBAAsBpP,EAAEyN,MAAM9H,KAAK,cACnC3F,EAAE,sBAAsBoB,SACxBpB,EAAE,mBAAmB8D,SAAS,2BAE1B/C,eAAe0O,MAAOC,IAC1B1P,EAAE,YAAYoB,aACVkD,WAAcoL,GAAGC,SAAS/D,KAAO,GAAK5L,EAAE,mBAAmB8J,QAAWzJ,UAAYY,MAClFqD,UAAYrD,QACZqD,UAAYrD,MACZyO,GAAGC,SAAS/D,MAAQ,GAEpBtH,UAAYrC,MACZqC,UAAYrC,IACZyN,GAAGC,SAAS/D,KAAO5L,EAAE,mBAAmB8J,QAAU,OAElDlJ,YAAc0D,UAAYrD,OAASZ,UAAY,IAC/CO,WAAa,IACbA,WAAa,GAEjBZ,EAAE,iDAAiDa,IAAI,OAAQD,WAAa,KAC5EZ,EAAEyN,MAAM5M,IAAI,OAAQD,WAAa,WAC3BR,OAAO8I,KAAK5E,WAClBtE,EAAE,oBAAoB+E,KAAKjC,oBAAoBwB,WAAW,GAAM,UAE5DvD,eAAe0O,MAAOC,IAC1B1P,EAAE,YAAYoB,SACdpB,EAAE,2BAA2BoB,SAC7BuJ,YAAW,WACP3K,EAAE,mBAAmB4D,YAAY,uBAClC,SACCU,WAAcoL,GAAGC,SAAS/D,KAAO,GAAK5L,EAAE,mBAAmB8J,QAAWzJ,UAAYY,MAClFqD,UAAYrD,QACZqD,UAAYrD,MACZjB,EAAEyN,MAAM5M,IAAI,OAAQ,SAEpByD,UAAYrC,MACZqC,UAAYrC,IACZjC,EAAEyN,MAAM5M,IAAI,OAAQ,yBAEpBD,YAAc0D,UAAYrD,OAASZ,UAAY,IAC/CO,WAAa,IACbA,WAAa,GAEjBZ,EAAE,iDAAiDa,IAAI,OAAQD,WAAa,WACtEsE,GAAKlF,EAAEyN,MAAM9H,KAAK,MACxB2J,iBAAmBzM,YAAYoC,MAAK1D,GAAKA,EAAE2D,IAAMA,QACtBrC,YAAYoC,MAAK1D,GAAKA,EAAE+C,WAAaA,WAAa/C,EAAE2D,IAAMA,YAEjF3C,gBAAgByB,EAAEC,KAAKC,WAAW,2BAA4B,wBAAyB,eACvFP,sBAAsBd,aAGtByM,iBAAiBhL,WAAaA,YAGlCgL,iBAAiBhL,UAAYA,UAC7BgL,iBAAiBnC,OAAS,QAC1B5M,cAAc,oBAAqB,CAC/B6H,WAAYkH,iBACZ1J,OAAQ,UAEZ5F,EAAE,iDAAiDa,IAAI,OAAQD,WAAa,SAIpFZ,EAAE,wCAAwCuP,UAAU,MACxC,UACCxO,uBACkBX,OAAO6I,YAE1B7I,OAAOqI,QAEXzI,EAAE,YAAYoB,SACdgO,sBAAsBpP,EAAEyN,MAAM9H,KAAK,cACnC3F,EAAE,mBAAmB8D,SAAS,2BAE1B/C,eAAe0O,MAAOC,UACpBxK,GAAKlF,EAAEyN,MAAM9H,KAAK,MACxB2J,iBAAmBzM,YAAYoC,MAAK1D,GAAKA,EAAE2D,IAAMA,SAC7CZ,UAAcoL,GAAGC,SAAS/D,KAAQ5L,EAAE,mBAAmB8J,QAAWzJ,UAAYY,MAC9EqD,UAAYrD,QACZqD,UAAYrD,OAGZqD,UAAYrC,MACZqC,UAAYrC,SAGZrB,YAAc0D,UAAYrD,OAASZ,UAAY,IAC/CO,WAAa,IACbA,WAAa,GAEjBZ,EAAE,iDAAiDa,IAAI,OAAQD,WAAa,WACtER,OAAO8I,KAAK5E,WAClBtE,EAAE,oBAAoB+E,KAAKjC,oBAAoBwB,WAAW,GAAM,UAE5DvD,eAAe0O,MAAOC,IAC1B1P,EAAE,2BAA2BoB,SAC7BuJ,YAAW,WACP3K,EAAE,mBAAmB4D,YAAY,uBAClC,SACCU,UAAcoL,GAAGC,SAAS/D,KAAQ5L,EAAE,mBAAmB8J,QAAWzJ,UAAYY,YAC5EiE,GAAKlF,EAAEyN,MAAM9H,KAAK,MACxB2J,iBAAmBzM,YAAYoC,MAAK1D,GAAKA,EAAE2D,IAAMA,SAC7C0K,aAAelN,OAAO4M,iBAAiBjH,OAAS3F,OAAO4M,iBAAiBhL,cACxEA,UAAY,GAAKA,UAAYsL,aAAe3O,kBAC5C0C,sBAAsBd,gBAGtByB,UAAYrC,gBACZ0B,sBAAsBd,gBAGtByB,UAAYrD,QACZ2O,cAA8B1M,KAAK2M,IAAI5O,MAAQqD,WAC/CA,UAAYrD,OAEZqD,UAAYsL,aAAe3N,MAC3B2N,aAAe1M,KAAK2M,IAAI5N,IAAMqC,WAC9BA,UAAYrC,IAAM2N,cAElBA,cAAgB,cAChBjM,sBAAsBd,gBAGCA,YAAYoC,MAAK1D,GAAKA,EAAE+C,WAAaA,WAAa/C,EAAE2D,IAAMA,YAEjF3C,gBAAgByB,EAAEC,KAAKC,WAAW,2BAA4B,wBAAyB,eACvFP,sBAAsBd,gBAGtByM,iBAAiBhL,WAAaA,sBAC9BX,sBAAsBd,aAG1ByM,iBAAiBhL,UAAYA,UAC7BgL,iBAAiBjH,MAAQ/D,UAAYsL,aACjCN,iBAAiBjH,MAAQpG,MACzBqN,iBAAiBjH,MAAQpG,KAE7BqN,iBAAiBnC,OAAS,QAC1B5M,cAAc,oBAAqB,CAC/B6H,WAAYkH,iBACZ1J,OAAQ,cAERhF,YAAc0D,UAAYrD,OAASZ,UAAY,IAC/CO,WAAa,IACbA,WAAa,GAEjBZ,EAAE,iDAAiDa,IAAI,OAAQD,WAAa,QAIpFZ,EAAE,wCAAwCwP,UAAU,aACjC,kCACJ,aACFzO,uBACkBX,OAAO6I,YAE1B7I,OAAOqI,QAEXzI,EAAE,YAAYoB,SACdgO,sBAAsBpP,EAAEyN,MAAM9H,KAAK,cACnC3F,EAAE,mBAAmB8D,SAAS,6BAExB/C,eAAe0O,MAAOC,QACxBpL,UACAoL,GAAGI,iBAAiBlE,MAAQ8D,GAAGC,SAAS/D,MAAQ8D,GAAGK,aAAajG,OAAS4F,GAAGM,KAAKlG,OAC7E4F,GAAGC,SAAS/D,KAAO,IACnB8D,GAAGC,SAAS/D,KAAO,GAEvBtH,UAAcoL,GAAGC,SAAS/D,KAAQ5L,EAAE,mBAAmB8J,QAAWzJ,UAAYY,OAE9EqD,WAAcoL,GAAGC,SAAS/D,KAAO8D,GAAGM,KAAKlG,OAAS9J,EAAE,mBAAmB8J,QAAWzJ,UAAYY,UAE9FL,YAAc0D,UAAYrD,OAASZ,UAAY,KAC/CsC,MAAM/B,aAAeA,WAAa,KAClCA,WAAa,GAEbA,WAAa,MACbA,WAAa,KAEjBZ,EAAE,iDAAiDa,IAAI,OAAQD,WAAa,WACtER,OAAO8I,KAAK5E,WAClBtE,EAAE,oBAAoB+E,KAAKjC,oBAAoBwB,WAAW,GAAM,UAE5DvD,eAAe0O,MAAOC,IAC1B1P,EAAE,2BAA2BoB,SAC7BuJ,YAAW,WACP3K,EAAE,mBAAmB4D,YAAY,uBAClC,WACGsB,GAAKlF,EAAEyN,MAAM9H,KAAK,UAEpBrB,UAAW2L,UADfX,iBAAmBzM,YAAYoC,MAAK1D,GAAKA,EAAE2D,IAAMA,KAE7CwK,GAAGI,iBAAiBlE,MAAQ8D,GAAGC,SAAS/D,MACpC8D,GAAGC,SAAS/D,KAAO,IACnB8D,GAAGC,SAAS/D,KAAO,GAEvBtH,UAAcoL,GAAGC,SAAS/D,KAAQ5L,EAAE,mBAAmB8J,QAAWzJ,UAAYY,MAC9EgP,UAAY,SAEZ3L,WAAcoL,GAAGC,SAAS/D,KAAO8D,GAAGM,KAAKlG,OAAS9J,EAAE,mBAAmB8J,QAAWzJ,UAAYY,MAC9FgP,UAAY,YAEWpN,YAAYoC,MAAK1D,GAAKA,EAAE+C,WAAaA,WAAa/C,EAAE2D,IAAMA,YAEjF3C,gBAAgByB,EAAEC,KAAKC,WAAW,2BAA4B,wBAAyB,eACvFP,sBAAsBd,gBAGtByM,iBAAiBhL,WAAaA,iBAGjB,QAAb2L,UACAX,iBAAiBhL,UAAYA,WAE7BgL,iBAAiBjH,MAAQ/D,UACrBgL,iBAAiBjH,MAAQpG,MACzBqN,iBAAiBjH,MAAQpG,MAGjCqN,iBAAiBnC,OAAS,QAC1B5M,cAAc,oBAAqB,CAC/B6H,WAAYkH,iBACZ1J,OAAQ,cAGRhF,YAAc0D,UAAYrD,OAASZ,UAAY,KAC/CsC,MAAM/B,aAAeA,WAAa,KAClCA,WAAa,GAEbA,WAAa,MACbA,WAAa,KAEjBZ,EAAE,iDAAiDa,IAAI,OAAQD,WAAa,QAIpFZ,EAAE,wCAAwCkQ,IAAI,eAAetD,GAAG,eAAe,SAASvC,GACpFA,EAAEyD,iBACFzD,EAAEoE,iCACIvJ,GAAKlF,EAAEyN,MAAM9H,KAAK,MACxB3F,mCAA4BkF,gBAAcyJ,QAAQ,YAGtD3O,EAAE,wCAAwCkQ,IAAI,SAAStD,GAAG,SAAS7L,eAAesJ,GAC9EA,EAAEyD,uBACIxJ,UAAYtE,EAAEyN,MAAM9H,KAAK,mBACzBvF,OAAO8I,KAAK5E,iBACKlE,OAAO6I,YAE1B7I,OAAOqI,WAIfzI,EAAE,4DAA4DkQ,IAAI,SAAStD,GAAG,SAAS,SAASvC,GAC5FA,EAAEyD,uBACI5I,GAAKlF,EAAEyN,MAAMM,QAAQ,gBAAgBpI,KAAK,MAChD3F,mCAA4BkF,kBAAgByJ,QAAQ,eAI5D3O,EAAE,cAAcuP,UAAU,aACP,uBACP,WACE,mBACDxO,eAAe0O,MAAOC,UACJtP,OAAO6I,YAE1B7I,OAAOqI,QAEXzI,EAAE,mBAAmB8D,SAAS,qBAC9B9D,EAAE,YAAYoB,SACdgO,sBAAwBM,GAAGC,SAAS/D,KAAQ5L,EAAE,mBAAmB8J,QAAWzJ,UAAYY,OAAO,SAE3FF,eAAe0O,MAAOC,QACtBpL,UAAcoL,GAAGC,SAAS/D,KAAQ5L,EAAE,mBAAmB8J,QAAWzJ,UAAYY,MAC9EL,YAAc0D,UAAYrD,OAASZ,UAAY,IACnDL,EAAE,oBAAoB+E,KAAKjC,oBAAoBwB,WAAW,GAAM,IAChEtE,EAAE,wDACGa,IAAI,OAAQD,WAAa,WACxBR,OAAO8I,KAAK5E,iBAEdvD,eAAe0O,MAAOC,IAC1B1P,EAAE,2BAA2BoB,SAC7BuJ,YAAW,WACP3K,EAAE,mBAAmB4D,YAAY,uBAClC,SAGChD,YADc8O,GAAGC,SAAS/D,KAAQ5L,EAAE,mBAAmB8J,QAAWzJ,UAAYY,MACpDA,OAASZ,UAAY,KAC/CsC,MAAM/B,aAAeA,WAAa,KAClCA,WAAa,GAEbA,WAAa,MACbA,WAAa,KAEjBZ,EAAE,+BAA+Ba,IAAI,OAAQD,WAAa,WACnCR,OAAO6I,YAE1B7I,OAAOqI,WAKnBzI,EAAE,mBAAmBuP,UAAU,MACnB,WACE,mBACDxO,eAAe0O,MAAOC,UACJtP,OAAO6I,YAE1B7I,OAAOqI,QAEXzI,EAAE,UAAU8D,SAAS,qBACrB9D,EAAE,YAAYoB,SACdgO,sBAAwBM,GAAGC,SAAS/D,KAAQ5L,EAAE,UAAU8J,QAAWzJ,UAAYY,OAAO,SAElFF,eAAe0O,MAAOC,QACtBpL,UAAcoL,GAAGC,SAAS/D,KAAQ5L,EAAE,UAAU8J,QAAWzJ,UAAYY,MACrEL,YAAc0D,UAAYrD,OAASZ,UAAY,KAC/CsC,MAAM/B,aAAeA,WAAa,KAClCA,WAAa,GAEbA,WAAa,MACbA,WAAa,KAEb0D,UAAYrD,QACZqD,UAAYrD,OAEhBjB,EAAE,oBAAoB+E,KAAKjC,oBAAoBwB,WAAW,GAAM,IAChEtE,EAAE,wDACGa,IAAI,OAAQD,WAAa,WACxBR,OAAO8I,KAAK5E,iBAEdvD,eAAe0O,MAAOC,IAC1B1P,EAAE,2BAA2BoB,SAC7BuJ,YAAW,WACP3K,EAAE,UAAU4D,YAAY,uBACzB,SAECU,UAAcoL,GAAGC,SAAS/D,KAAQ5L,EAAE,UAAU8J,QAAWzJ,UAAYY,MACrEqD,UAAYrD,QACZqD,UAAYrD,WAEZL,YAAc0D,UAAYrD,OAASZ,UAAY,KAC/CsC,MAAM/B,aAAeA,WAAa,KAClCA,WAAa,GAEbA,WAAa,MACbA,WAAa,KAEjBZ,EAAE,+BAA+Ba,IAAI,OAAQD,WAAa,WACnCR,OAAO6I,YAE1B7I,OAAOqI,WAMnBzI,EAAE,qBAAqBwP,UAAU,SAClB,cACE,cACA,UACJ,WACLxP,EAAE,kCAAkC8D,SAAS,6BAEvC,SAAS2L,MAAOC,IACtB1P,EAAE,eAAea,IAAI,iCAA2B6O,GAAGM,KAAKG,OAAS,iBAE7D,WACJnQ,EAAE,kCAAkC4D,YAAY,qBAChDwM,aAAaC,QAAQ,kBAAmBrQ,EAAE,qBAAqBmQ,aAKvEnQ,EAAE,cAAcuP,UAAU,MACd,gBACO,gBACP,CAAC,EAAG,SACH,WACLvP,EAAE,YAAY8D,SAAS,sBAE3BwM,KAAM,iBAEIxG,MADe9J,EAAEyN,MAAM8C,SACF3E,KAC3B5L,EAAE,kBAAkBa,IAAI,QAASiJ,MAAQ,MACzC9J,EAAE,mBAAmBa,IAAI,QAAS,eAAiBiJ,MAAQ,QAE/DwB,KAAM,iBACIxB,MAAQ9J,EAAEyN,MAAM8C,SAAS3E,KAE/BwE,aAAaC,QAAQ,eAAgBvG,OACrC9J,EAAE,YAAY4D,YAAY,8BAK5B4M,YAAcJ,aAAaK,QAAQ,gBACrCD,aAAe1E,OAAOC,WAAa,MACnC/L,EAAE,cAAca,IAAI,OAAQ2P,YAAc,MAC1CxQ,EAAE,kBAAkBa,IAAI,QAAS2P,YAAc,MAC/CxQ,EAAE,mBAAmBa,IAAI,QAAS,eAAiB2P,YAAc,cAI/DE,eAAiBN,aAAaK,QAAQ,mBACxCC,iBACA1Q,EAAE,qBAAqBa,IAAI,SAAU6P,eAAiB,MACtD1Q,EAAE,eAAea,IAAI,iCAA2B6B,OAAOgO,gBAAkB,YAI7E1Q,EAAE,wDAAwD4M,GAAG,cAAc,SAASvC,GAChFrK,EAAE,gCAAgCoB,SAClCiJ,EAAEyD,iBACFzD,EAAEoE,+BAEEkC,WAAa3Q,EAAE,cAAcyE,QACjCkM,WAAWtD,KAAK,KAAM,mBAEhBuD,aAAe5Q,EAAEyN,MAAM8C,SACvBM,KAAOxG,EAAEyG,MAAQF,aAAahF,KAEpC+E,WAAW9P,IAAI,OAASgQ,KAAO,EAAK,MACpCF,WAAW1L,KAAK,eAAe7D,eACzBR,WAAaiQ,KAAO7Q,EAAEyN,MAAM3D,QAE5BuF,cAAgBvM,oBADTlC,WAAcP,UAAaY,OACQ,GAAM,GACtDjB,EAAE,eAAeiK,yHAC6CoF,+BAC9DrP,EAAE,2BAA2Ba,IAAI,OAAQgQ,KAAO,MAChD7Q,EAAE,mBAAmBiK,OAAO0G,eAGhC3Q,EAAE,wDAAwD4M,GAAG,cAAc,SAASvC,GAChFA,EAAEoE,2BACFzO,EAAE,uCAAuCoB,YAG7CpB,EAAE,gCAAgC4M,GAAG,aAAa,SAASvC,GACvDA,EAAEoE,iCACImC,aAAe5Q,EAAEyN,MAAM8C,SACvBM,KAAOxG,EAAEyG,MAAQF,aAAahF,SAEhClK,KADemP,KAAO7Q,EAAEyN,MAAM3D,QACTzJ,UAAaY,MAClCS,KAAOT,QACPS,KAAOT,aAELoO,cAAgBvM,oBAAoBpB,MAAM,GAAM,GAEtD1B,EAAE,cAAca,IAAI,OAASgQ,KAAO,EAAK,MACzC7Q,EAAE,oBAAoB+E,KAAKsK,eAC3BrP,EAAE,2BAA2Ba,IAAI,OAAQgQ,KAAO,SAIpD7Q,EAAEwL,UAAUoB,GAAG,QAAS,0BAA0B7L,eAAesJ,GAC7DA,EAAEyD,iBACFzD,EAAEoE,iCACIvJ,GAAKlF,EAAEyN,MAAM9H,KAAK,MAClByC,WAAavF,YAAYoC,MAAK1D,GAAKA,EAAE2D,IAAMA,KACjDxE,QAAQqQ,OAAO,WACL3Q,OAAOuB,kBAAoByG,WAAW9D,iBACtClE,OAAO8I,KAAKd,WAAW9D,WAEjC5D,QAAQsQ,QAAQ,KAChB1I,eAAeF,eAInBpI,EAAEwL,UAAUoB,GAAG,QAAS,gCAAgC7L,eAAesJ,GACnEA,EAAEyD,iBACFzD,EAAEoE,iCACI7N,WAAayJ,EAAEqE,QAAU1O,EAAEyN,MAAM3D,QACvCnJ,oBAAiC,IAAbC,YACpBF,QAAQqQ,OAAO,WACQ3Q,OAAO6I,YAE1B7I,OAAOqI,cAELrI,OAAO8I,KAAMtI,WAAaP,UAAaY,OAC7CP,QAAQsQ,QAAQ,KAChBhR,EAAE,yBAAyBoB,YAI/BpB,EAAE,YAAY4M,GAAG,SAAS,iBAChBqE,aAAejR,EAAE,2BAA2Ba,IAAI,SAChDqQ,SAAWC,SAASF,cAAgB,IAC1CjR,EAAE,2BAA2Ba,IAAI,QAASqQ,SAAW,YAC/CrH,SAAW7J,EAAE,mBAAmB8J,QACtC9J,EAAE,+CAA+Ca,IAAI,QAASgJ,SAAW,UACrEuH,gBAAkB5F,SAASC,eAAe,YAC1C2F,gBAAgBC,aAAeD,gBAAgBE,aAC/CtR,EAAEyN,MAAMJ,KAAK,WAAY,YAE7B9M,cAAc,0BAA2B,aAAgBsC,iBAI7D7C,EAAE,WAAW4M,GAAG,SAAS,iBACfqE,aAAejR,EAAE,2BAA2Ba,IAAI,SAChDqQ,SAAWC,SAASF,cAAgB,IAC1CjR,EAAE,2BAA2Ba,IAAI,QAASqQ,SAAW,YAC/CrH,SAAW7J,EAAE,mBAAmB8J,QACtC9J,EAAE,+CAA+Ca,IAAI,QAASgJ,SAAW,MACzE7J,EAAE,YAAYoN,WAAW,YACzB7M,cAAc,0BAA2B,aAAgBsC,iBAI7D7C,EAAE,aAAa4M,GAAG,SAAS,SAASvC,IAC5BA,EAAEkH,SAAWlH,EAAEmH,WACfnH,EAAEyD,iBACEzD,EAAE2C,cAAcyE,OAAS,EACzBzR,EAAE,WAAW2O,QAAQ,SAErB3O,EAAE,YAAY2O,QAAQ,aAKlCnD,SAASC,eAAe,YAAYiG,iBAAiB,UAAU,WAC3DlG,SAASC,eAAe,0BAA0BkG,WAAalE,KAAKkE,WACpEnG,SAASC,eAAe,SAASmG,MAAMhG,MAAQ6B,KAAKkE,WAAa,KACjEnG,SAASC,eAAe,6BAA6BmG,MAAMhG,MAAQ6B,KAAKkE,WAAa,KACrFnG,SAASC,eAAe,aAAaoG,aAAepE,KAAKoE,gBAI7D7R,EAAE,cAAc4M,GAAG,SAAS,SAASvC,GACjCA,EAAEoE,+BACEqD,iBAAmBjP,YAAY+B,QAAOrD,GAAiB,SAAZA,EAAE4L,SAC7CvG,MAAQ,EACZkL,iBAAiBzQ,SAAQ,SAAS+C,GAC9BpE,EAAEsF,KAAK,CACHzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,mBACRC,QAAS7B,EAAEuB,IAAIM,QACfX,GAAId,EAAEc,GACNgK,MAAO,YACPpJ,UAAW9B,EAAEuB,IAAIO,UACjBqJ,MAAO/K,EAAEE,WAEbyI,QAAS,SAASpH,YACRsH,QAAU5G,KAAKC,MAAMX,MAC3BpF,cAAc,oBAAqB,CAC/B6H,WAAY6E,QACZrH,OAAQ,iBAIN,eAAVxB,EAAE5C,MACFxB,EAAEsF,KAAK,CACHzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,mBACRC,QAAS7B,EAAEuB,IAAIM,QACfX,GAAId,EAAEc,GACNgK,MAAO,QACPpJ,UAAW9B,EAAEuB,IAAIO,UACjBqJ,MAAO/K,EAAEiE,OAEb0E,QAAS,SAASpH,YACRsH,QAAU5G,KAAKC,MAAMX,MAC3BpF,cAAc,oBAAqB,CAC/B6H,WAAY6E,QACZrH,OAAQ,iBAKxBgB,QACIA,OAASkL,iBAAiB5Q,QAC1BqB,gBAAgByB,EAAEC,KAAKC,WAAW,aAAc,wBAAyB,iBAOrFlE,EAAE,eAAe4M,GAAG,SAAS7L,eAAesJ,GACxCA,EAAEyD,iBACGrN,aAGLT,EAAE,iBAAiBuI,MAAM,WAG7BvI,EAAE,iBAAiB4M,GAAG,iBAAiB,WACnCxM,OAAOqI,QACPzI,EAAE,uBAAuB8D,SAAS,iBAGtC9D,EAAE,iBAAiB4M,GAAG,iBAAiB,WACnC5M,EAAE,sCAAsC4D,YAAY,UACpD5D,EAAE,uBAAuB4D,YAAY,iBAIzCkI,OAAO4F,iBAAiB,gBAAiBrH,OACjCxH,YAAYoC,MAAK1D,GAAiB,SAAZA,EAAE4L,SAAoB,OACtC4E,oBAAsB/N,EAAEC,KAAKC,WAAW,iBAAkB,+BAChEmG,EAAE2H,YAAcD,oBACTA,2BAEJ,KAIX/R,EAAEwL,UAAUoB,GAAG,QAAS,eAAe,SAASvC,GAC5CA,EAAEyD,uBACImE,KAAOjS,EAAEyN,MAAM9H,KAAK,QAC1BvF,OAAO8R,QAAQD,MACfjS,EAAE,eAAeiF,KAAK,KAAKrB,YAAY,YACvC5D,EAAEyN,MAAMxI,KAAK,KAAKnB,SAAS,eAG/B9D,EAAEwL,UAAUoB,GAAG,uBAAuB,SAASvC,GAC3CrK,EAAE,eAAeiF,KAAK,KAAKrB,YAAY,YACvC5D,mCAA4BqK,EAAE2C,cAAcH,OAAOoF,YAAUhN,KAAK,KAAKnB,SAAS,eAIpF9D,EAAE,kBAAkB4M,GAAG,qBAAqB7L,qBACpCyI,cAAgBpJ,OAAO+R,eAC3BnS,EAAE,kBAAkBmB,YAChBiR,eAAiB5I,QAAQ4I,eACN,OAAnBA,iBACAA,eAAiBpS,EAAEyN,MAAM9H,KAAK,gBAE9B0M,UAAY7I,QAAQ6I,UACpBC,eAAiB9I,QAAQ8I,eAC7BD,UAAUhR,SAAQ,CAACkR,EAAGrI,KAClBlK,EAAE,kBAAkBiK,sEAA+DsI,+DACtDA,GAAKH,eAAiB,WAAa,gCAAuBE,eAAepI,eAE1GlK,EAAEyN,MAAMxI,KAAK,0BAA0BuN,SAAS,aAGpDxS,EAAEwL,UAAUoB,GAAG,QAAS,kBAAkB,SAASvC,GAC/CA,EAAEyD,uBACItE,QAAUxJ,EAAEyN,MAAM9H,KAAK,WAC7BvF,OAAOqS,WAAWjJ,SAClBxJ,EAAE,kBAAkBiF,KAAK,KAAKrB,YAAY,YAC1C5D,EAAEyN,MAAMxI,KAAK,KAAKnB,SAAS,mBAI3B4O,gBAAkBlH,SAASC,eAAe,oBAC1CkH,eAAiB,IAAIC,gBAAe,WAC9B/I,SAAW7J,EAAE,mBAAmB8J,QACtC9J,EAAE,+CAA+Ca,IAAI,QAASgJ,SAAW,SAG7E8I,eAAeE,QAAQH,iBAGvB1S,EAAEwL,UAAUoB,GAAG,QAAS,kBAAkB,SAASvC,GAC/CA,EAAEyD,uBACIgF,2dAMY9O,EAAEC,KAAKC,WAAW,gBAAiB,kmBASnCF,EAAEC,KAAKC,WAAW,SAAU,gMAE5BF,EAAEC,KAAKC,WAAW,SAAU,6JAK9ClE,EAAE,QAAQiK,OAAO6I,aACjB9S,EAAE,gBAAgBuI,MAAM,QAExBvI,EAAE,gBAAgB4M,GAAG,mBAAmB,WACpC5M,EAAE,gBAAgBoB,YAGtBpB,EAAE,gBAAgBkQ,IAAI,kBAAkBtD,GAAG,kBAAkB,WAEzD5M,EAAE,8BAA8BuP,UAAU,CACtCwD,OAAQ,kBAGZ/S,EAAEsF,KAAK,CACHzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,qBACRC,QAAS7B,EAAEuB,IAAIM,QACfC,UAAW9B,EAAEuB,IAAIO,UACjB1D,OAAQA,QAEZ2K,QAAS,SAASpH,UACVqN,QAAU3M,KAAKC,MAAMX,MAEzBqN,QAAQ7O,MAAK,CAACC,EAAGC,IAAMD,EAAE6O,SAASC,cAAc7O,EAAE4O,gBAC9CE,sEACJH,QAAQ3R,SAAQW,SACZmR,uCAAkCnR,OAAOkD,gBAAOlD,OAAOiR,sBAAajR,OAAOoR,2BAE/ED,8BACIE,0KAEFrP,EAAEC,KAAKC,WAAW,eAAgB,yEAClCiP,uBACFnT,EAAE,4BAA4BiK,OAAOoJ,aAErCrT,EAAE,8BAA8B2H,IAAI3F,QACpChC,EAAE,8BAA8B2O,QAAQ,mBAMxD3O,EAAEwL,UAAUoB,GAAG,SAAU,8BAA8B,WACnD5M,8DAA8DoB,SAC9DpB,EAAEsF,KAAK,CACHzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,qBACRC,QAAS7B,EAAEuB,IAAIM,QACfC,UAAW9B,EAAEuB,IAAIO,UACjBgD,SAAU9I,EAAEyN,MAAM9F,OAEtBoF,QAAS,SAASpH,UACV2N,IAAMjN,KAAKC,MAAMX,MACrB2N,IAAInP,MAAK,CAACC,EAAGC,IAAMD,EAAEoC,KAAK0M,cAAc7O,EAAEmC,YACtC+M,gHACevP,EAAEC,KAAKC,WAAW,SAAU,qCAC/CoP,IAAIjS,SAAQmS,KACRD,mCAA8BC,GAAGtO,gBAAOsO,GAAGtO,IAAMnD,YAAc,WAAa,eAAMyR,GAAGhN,qBAEzF+M,0BACIF,0JAEFrP,EAAEC,KAAKC,WAAW,iBAAkB,qEACpCqP,mBACFvT,gCAAgCyT,MAAMJ,mBAKlDrT,EAAEwL,UAAUoB,GAAG,SAAU,0BAA0B7L,iBAC/Cf,sCAAsCoB,SACtCpB,4BAA4ByT,wFACTzP,EAAEuB,IAAIC,QAAU,oCAAsCxF,EAAEyN,MAAM9F,8HAE7E+L,mBAAqB1T,EAAEsF,KAAK,CAC5BzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,YACRC,QAAS7B,EAAEuB,IAAIM,QACfX,GAAIlF,EAAEyN,MAAM9F,MACZ7B,UAAW9B,EAAEuB,IAAIO,UACjB5D,gBAAiB8B,EAAEuB,IAAIQ,mBAG/B2N,aAAerN,KAAKC,MAAMoN,cAC1BA,aAAeA,aAAa9O,QAAOrD,GAAe,eAAVA,EAAEC,OACf,GAAvBkS,aAAaxS,QAMjBlB,sCAAsCiK,8jBAS5BjG,EAAEC,KAAKC,WAAW,QAAS,oPAGiBF,EAAEC,KAAKC,WAAW,YAAa,sGAGrFwP,aAAeA,aAAa7O,KAAI8O,YAEtBnG,MAAQ5K,aAAaqC,MAAKsB,GAAKA,EAAEC,OAASmN,IAAInS,cACpDmS,IAAI1M,KAAOZ,KAAKgB,UAAUmG,OAC1BmG,IAAIC,KAAOpG,MAAMoG,MACZD,IAAIrP,UAAYrC,KAAO0R,IAAIrP,UAAYrD,QAAU0S,IAAIrP,UAAY,EAClEqP,IAAIE,SAAU,EAEdF,IAAIE,SAAU,GAGbrG,MAAMI,eAAiB/K,YAAYoC,MAAK1D,GAAKA,EAAEC,MAAQmS,IAAInS,SAC5DmS,IAAIG,UAAW,GAEZH,OAGXD,aAAavP,MAAK,CAACC,EAAGC,IAAMD,EAAEE,UAAYD,EAAEC,YAC5CoP,aAAarS,SAAQsS,YACXI,uHACMJ,IAAIzO,kMAGqByO,IAAIG,SAAW,WAAa,4DACzCH,IAAIC,yKAGeD,IAAIrP,UAAY,EAAI,WAAa,wCACtEqP,IAAItL,iFACgCsL,IAAIrP,UAAY,GAA0B,GAArBqP,IAAIK,cAAqB,WAAa,gEACvEL,IAAIhP,sGACgCgP,IAAIrP,UAAY,EAAI,WAAa,qEAChEqP,IAAIE,QAAU,aAAe,wCAC3DF,IAAIrP,UAAY,EAAIqP,IAAIrP,UACrBxB,oBAAoB6Q,IAAIrP,WAAW,GAAO,eAClDtE,sCAAsCiK,OAAO8J,eAGjD/T,EAAEwL,UAAU0E,IAAI,QAAS,qCAAqCtD,GAAG,QAAS,qCACtE7L,eAAesJ,GACXA,EAAEyD,qBACEmG,UAAYjU,qEACZkU,YAAc,MAClBD,UAAUE,MAAK,eACPC,KAAOpU,EAAEyN,MAAMM,QAAQ,sBACrBvH,KAAO4N,KAAKnP,KAAK,SAAS0C,SACb,IAAfnB,KAAK6N,kBAGL/P,UAAY8P,KAAKnP,KAAK,oBAAoB0C,SAC7B,IAAbrD,oBAIA5B,OAAO4B,WAAa,EACpBA,UAAY5B,OAAO4B,eAChB,OACG0D,MAAQ1D,UAAU2D,MAAM,QAC9B3D,UAA+B,KAAnB5B,OAAOsF,MAAM,IAAgC,GAAnBtF,OAAOsF,MAAM,IAAWtF,OAAOsF,MAAM,IACvEnF,YAAYoC,MAAK1D,GAAKA,EAAE+C,WAAaA,uBAIzCY,GAAKkP,KAAKzO,KAAK,MACfgO,IAAMD,aAAazO,MAAK1D,GAAKA,EAAE2D,IAAMA,KACzCyO,IAAItL,MAAQ7B,KACZmN,IAAIrP,UAAYA,cACZK,GAAKjC,OAAO0R,KAAKnP,KAAK,OAAO0C,QAC7BhF,MAAMgC,KAAa,IAANA,MACbA,GAAK,GAETgP,IAAIhP,GAAKA,GACTuP,YAAYhH,KAAKyG,QAEK,GAAtBO,YAAYhT,OAGT,KACCwS,mBAAqB1T,EAAEsF,KAAK,CAC5BzD,IAAKmC,EAAEuB,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,qBACRC,QAAS7B,EAAEuB,IAAIM,QACfC,UAAW9B,EAAEuB,IAAIO,UACjBjD,YAAawD,KAAKgB,UAAU6M,aAC5BI,SAAUtQ,EAAEuB,IAAIgP,SAChBC,WAAYxU,EAAE,iBAAiB2H,MAC/B8M,KAAM1S,YACN2S,OAAQ1U,EAAE,aAAa2H,MACvBgN,OAAQ7S,gBAGhB4R,aAAerN,KAAKC,MAAMoN,cAG1B1T,EAAE,gBAAgBuI,MAAM,QAGxB1F,YAAcA,YAAY+R,OAAOlB,cACjCnT,cAAc,oBAAqB,CAC/BsC,YAAaA,YACb+C,OAAQ,WAIZ8N,aAAarS,SAAQsS,MACZA,IAAI/F,eACLpN,WAAWmT,IAAInS,MAAMI,eAlC7BW,gBAAgByB,EAAEC,KAAKC,WAAW,oBAAqB,wBAAyB,cA/FxFlE,sCAAsCiK,iFAChCjG,EAAEC,KAAKC,WAAW,YAAa,sCAwI7ClE,EAAEwL,UAAUoB,GAAG,QAAS,gCAAgC,eAChDiI,OAAS7U,EAAEyN,MAAM9F,MAAMmN,cAE3B9U,EAAE,sCAAsC4D,YAAY,UAAUE,SAAS,UAEzD,IAAV+Q,QAIJ7U,EAAE,oDAAoDmU,MAAK,WAC5CnU,EAAEyN,MAAMxI,KAAK,sBAAsBF,OAAO+P,cAC5CC,SAASF,QACd7U,EAAEyN,MAAM3J,SAAS,UAAUF,YAAY,UAEvC5D,EAAEyN,MAAM3J,SAAS,UAAUF,YAAY,sBAM7CoR,YAAcjU,MAAAA,QACZW,WAAatB,OAAOuB,iBACpBD,MAAQO,MAGRoI,EAAEkH,SAAWlH,EAAEmH,QACf9P,MAAQ,EAERA,MAAQ,GAERA,KAAOO,MACPP,KAAOO,WAEL7B,OAAO8I,KAAKxH,YAOlBuT,oBALJjV,EAAEwL,UAAUoB,GAAG,QAAS,iBAAiB7L,eAAesJ,GACpDA,EAAEyD,iBACFkH,YAAY3K,MAIhBrK,EAAEwL,UAAUoB,GAAG,YAAa,iBAAiB7L,eAAesJ,GACxDA,EAAEyD,iBACFmH,oBAAsBC,aAAYnU,UAC9BiU,YAAY3K,SACFjK,OAAOuB,kBAAoBM,KACjCkT,cAAcF,uBAEnB,QAGPjV,EAAEwL,UAAUoB,GAAG,qBAAsB,iBAAiB,WAClDuI,cAAcF,8BAGZG,OAASrU,MAAAA,QACPW,WAAatB,OAAOuB,iBACpBD,MAAQT,QAGRoJ,EAAEkH,SAAWlH,EAAEmH,QACf9P,MAAQ,EAERA,MAAQ,GAERA,KAAOT,QACPS,KAAOT,aAELb,OAAO8I,KAAKxH,YAOlB2T,eALJrV,EAAEwL,UAAUoB,GAAG,QAAS,WAAW7L,eAAesJ,GAC9CA,EAAEyD,iBACFsH,OAAO/K,MAIXrK,EAAEwL,UAAUoB,GAAG,YAAa,WAAW7L,eAAesJ,GAClDA,EAAEyD,iBACFuH,eAAiBH,aAAYnU,UACzBqU,OAAO/K,SACGjK,OAAOuB,kBAAoBV,OACjCkU,cAAcE,kBAEnB,QAGPrV,EAAEwL,UAAUoB,GAAG,qBAAsB,WAAW,WAC5CuI,cAAcE,mBAIlBvJ,OAAO4F,iBAAiB,gBAAgB,WACpC1R,EAAEwL,UAAU0E,MACZ7E,qBAAqBR"}